{
    "project": {
        "name": "SpringRoll",
        "description": "An application framework for building HTML5 Canvas games and applications",
        "version": "1.0.3",
        "url": "https://github.com/SpringRoll/SpringRoll"
    },
    "files": {
        "src/container-client/ContainerClientPlugin.js": {
            "name": "src/container-client/ContainerClientPlugin.js",
            "modules": {
                "Container Client": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/container-client/UserData.js": {
            "name": "src/container-client/UserData.js",
            "modules": {},
            "classes": {
                "springroll.UserData": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/async/CombinedCallback.js": {
            "name": "src/core/async/CombinedCallback.js",
            "modules": {},
            "classes": {
                "springroll.CombinedCallback": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/async/DelayedCall.js": {
            "name": "src/core/async/DelayedCall.js",
            "modules": {},
            "classes": {
                "springroll.DelayedCall": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/utils/Enum.js": {
            "name": "src/core/utils/Enum.js",
            "modules": {},
            "classes": {
                "springroll.EnumValue": 1,
                "springroll.Enum": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/utils/SavedData.js": {
            "name": "src/core/utils/SavedData.js",
            "modules": {},
            "classes": {
                "springroll.SavedData": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/utils/TimeUtils.js": {
            "name": "src/core/utils/TimeUtils.js",
            "modules": {},
            "classes": {
                "springroll.TimeUtils": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/utils/WeightedRandom.js": {
            "name": "src/core/utils/WeightedRandom.js",
            "modules": {},
            "classes": {
                "springroll.WeightedRandom": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/ApplicationOptions.js": {
            "name": "src/core/ApplicationOptions.js",
            "modules": {},
            "classes": {
                "springroll.ApplicationOptions": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/ApplicationOptionsPlugin.js": {
            "name": "src/core/ApplicationOptionsPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/ApplicationPlugin.js": {
            "name": "src/core/ApplicationPlugin.js",
            "modules": {},
            "classes": {
                "springroll.ApplicationPlugin": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/PageVisibility.js": {
            "name": "src/core/PageVisibility.js",
            "modules": {},
            "classes": {
                "springroll.PageVisibility": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/PageVisibilityPlugin.js": {
            "name": "src/core/PageVisibilityPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/ResizePlugin.js": {
            "name": "src/core/ResizePlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/StringFilters.js": {
            "name": "src/core/StringFilters.js",
            "modules": {},
            "classes": {
                "springroll.StringFilters": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/core/StringFiltersPlugin.js": {
            "name": "src/core/StringFiltersPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/debug/Debug.js": {
            "name": "src/debug/Debug.js",
            "modules": {
                "Debug": 1
            },
            "classes": {
                "springroll.Debug": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/debug/DebugOptions.js": {
            "name": "src/debug/DebugOptions.js",
            "modules": {},
            "classes": {
                "springroll.DebugOptions": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/debug/DebugPlugin.js": {
            "name": "src/debug/DebugPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/deprecation/core.js": {
            "name": "src/deprecation/core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/deprecation/easeljs-animation.js": {
            "name": "src/deprecation/easeljs-animation.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.Animator": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/deprecation/easeljs-display.js": {
            "name": "src/deprecation/easeljs-display.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/deprecation/easeljs-states.js": {
            "name": "src/deprecation/easeljs-states.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/deprecation/pixi-animation.js": {
            "name": "src/deprecation/pixi-animation.js",
            "modules": {},
            "classes": {
                "springroll.pixi.Animator": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/deprecation/pixi-display.js": {
            "name": "src/deprecation/pixi-display.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/deprecation/sound.js": {
            "name": "src/deprecation/sound.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/deprecation/states.js": {
            "name": "src/deprecation/states.js",
            "modules": {},
            "classes": {
                "springroll.BaseState": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/deprecation/ui.js": {
            "name": "src/deprecation/ui.js",
            "modules": {},
            "classes": {
                "springroll.UIScaler": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/easeljs/animation/AnimationPlugin.js": {
            "name": "src/displays/easeljs/animation/AnimationPlugin.js",
            "modules": {
                "EaselJS Animation": 1
            },
            "classes": {
                "springroll.easeljs.Application": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/animation/BitmapMovieClip.js": {
            "name": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.BitmapMovieClip": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/animation/BitmapMovieClipInstance.js": {
            "name": "src/displays/easeljs/animation/BitmapMovieClipInstance.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.BitmapMovieClipInstance": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/animation/BitmapMovieClipTask.js": {
            "name": "src/displays/easeljs/animation/BitmapMovieClipTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.BitmapMovieClipTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/animation/MovieClipInstance.js": {
            "name": "src/displays/easeljs/animation/MovieClipInstance.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.MovieClipInstance": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/animation/ReversePlayback.js": {
            "name": "src/displays/easeljs/animation/ReversePlayback.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.ReversePlayback": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/cutscene/Cutscene.js": {
            "name": "src/displays/easeljs/cutscene/Cutscene.js",
            "modules": {
                "EaselJS Cutscene": 1
            },
            "classes": {
                "springroll.easeljs.Cutscene": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/cutscene/CutscenePlugin.js": {
            "name": "src/displays/easeljs/cutscene/CutscenePlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/easeljs/cutscene/CutsceneTask.js": {
            "name": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.CutsceneTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/BitmapTask.js": {
            "name": "src/displays/easeljs/display/BitmapTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.BitmapTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/EaselJSDisplayPlugin.js": {
            "name": "src/displays/easeljs/display/EaselJSDisplayPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/easeljs/display/FlashArt.js": {
            "name": "src/displays/easeljs/display/FlashArt.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.FlashArt": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/FlashArtAtlasTask.js": {
            "name": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.FlashArtAtlasTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/FlashArtImageTask.js": {
            "name": "src/displays/easeljs/display/FlashArtImageTask.js",
            "modules": {},
            "classes": {
                "springroll.FlashArtImageTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/easeljs/display/FlashArtTask.js": {
            "name": "src/displays/easeljs/display/FlashArtTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.FlashArtTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/FlashSpriteSheetTask.js": {
            "name": "src/displays/easeljs/display/FlashSpriteSheetTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.FlashSpriteSheetTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/SpriteSheetTask.js": {
            "name": "src/displays/easeljs/display/SpriteSheetTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.SpriteSheetTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/TextureAtlas.js": {
            "name": "src/displays/easeljs/display/TextureAtlas.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.TextureAtlas": 1,
                "springroll.easeljs.Texture": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/display/TextureAtlasTask.js": {
            "name": "src/displays/easeljs/display/TextureAtlasTask.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.TextureAtlasTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/mixins/Container.js": {
            "name": "src/displays/easeljs/mixins/Container.js",
            "modules": {},
            "classes": {
                "createjs.Container": 1
            },
            "fors": {},
            "namespaces": {
                "createjs": 1
            }
        },
        "src/displays/easeljs/mixins/MovieClip.js": {
            "name": "src/displays/easeljs/mixins/MovieClip.js",
            "modules": {},
            "classes": {
                "createjs.MovieClip": 1
            },
            "fors": {},
            "namespaces": {
                "createjs": 1
            }
        },
        "src/displays/easeljs/mixins/Point.js": {
            "name": "src/displays/easeljs/mixins/Point.js",
            "modules": {},
            "classes": {
                "createjs.Point": 1
            },
            "fors": {},
            "namespaces": {
                "createjs": 1
            }
        },
        "src/displays/easeljs/mixins/SpriteSheet.js": {
            "name": "src/displays/easeljs/mixins/SpriteSheet.js",
            "modules": {},
            "classes": {
                "createjs.SpriteSheet": 1
            },
            "fors": {},
            "namespaces": {
                "createjs": 1
            }
        },
        "src/displays/easeljs/states/BasePanel.js": {
            "name": "src/displays/easeljs/states/BasePanel.js",
            "modules": {
                "EaselJS States": 1
            },
            "classes": {
                "springroll.easeljs.BasePanel": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/states/BaseState.js": {
            "name": "src/displays/easeljs/states/BaseState.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.BaseState": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/states/ManifestsPlugin.js": {
            "name": "src/displays/easeljs/states/ManifestsPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/easeljs/ui/Button.js": {
            "name": "src/displays/easeljs/ui/Button.js",
            "modules": {
                "EaselJS UI": 1
            },
            "classes": {
                "springroll.easeljs.Button": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/ui/DragData.js": {
            "name": "src/displays/easeljs/ui/DragData.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.DragData": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/ui/DragManager.js": {
            "name": "src/displays/easeljs/ui/DragManager.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.DragManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/ui/SoundButton.js": {
            "name": "src/displays/easeljs/ui/SoundButton.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.SoundButton": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/utils/BitmapUtils.js": {
            "name": "src/displays/easeljs/utils/BitmapUtils.js",
            "modules": {
                "EaselJS Display": 1
            },
            "classes": {
                "springroll.easeljs.BitmapUtils": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/DisplayAdapter.js": {
            "name": "src/displays/easeljs/DisplayAdapter.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.DisplayAdapter": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/easeljs/EaselJSDisplay.js": {
            "name": "src/displays/easeljs/EaselJSDisplay.js",
            "modules": {},
            "classes": {
                "springroll.easeljs.EaselJSDisplay": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            }
        },
        "src/displays/native/geom/Circle.js": {
            "name": "src/displays/native/geom/Circle.js",
            "modules": {
                "Native Display": 1
            },
            "classes": {
                "springroll.native.Circle": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/native/geom/Ellipse.js": {
            "name": "src/displays/native/geom/Ellipse.js",
            "modules": {},
            "classes": {
                "springroll.native.Ellipse": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/native/geom/Point.js": {
            "name": "src/displays/native/geom/Point.js",
            "modules": {},
            "classes": {
                "springroll.native.Point": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/native/geom/Polygon.js": {
            "name": "src/displays/native/geom/Polygon.js",
            "modules": {},
            "classes": {
                "springroll.native.Polygon": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/native/geom/Rectangle.js": {
            "name": "src/displays/native/geom/Rectangle.js",
            "modules": {},
            "classes": {
                "springroll.native.Rectangle": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/native/DisplayAdapter.js": {
            "name": "src/displays/native/DisplayAdapter.js",
            "modules": {},
            "classes": {
                "springroll.native.DisplayAdapter": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/native/NativeDisplay.js": {
            "name": "src/displays/native/NativeDisplay.js",
            "modules": {},
            "classes": {
                "springroll.native.NativeDisplay": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            }
        },
        "src/displays/pixi/animation/AdvancedMovieClip.js": {
            "name": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "modules": {
                "PIXI Animation": 1
            },
            "classes": {
                "springroll.pixi.AdvancedMovieClip": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/animation/AdvancedMovieClipInstance.js": {
            "name": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "modules": {},
            "classes": {
                "springroll.pixi.AdvancedMovieClipInstance": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/animation/AdvancedMovieClipTask.js": {
            "name": "src/displays/pixi/animation/AdvancedMovieClipTask.js",
            "modules": {},
            "classes": {
                "springroll.pixi.AdvancedMovieClipTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/animation/AnimationPlugin.js": {
            "name": "src/displays/pixi/animation/AnimationPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/pixi/display/BitmapFontTask.js": {
            "name": "src/displays/pixi/display/BitmapFontTask.js",
            "modules": {},
            "classes": {
                "springroll.pixi.BitmapFontTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/display/PixiDisplayPlugin.js": {
            "name": "src/displays/pixi/display/PixiDisplayPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/pixi/display/TextureAtlas.js": {
            "name": "src/displays/pixi/display/TextureAtlas.js",
            "modules": {},
            "classes": {
                "springroll.pixi.TextureAtlas": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/display/TextureAtlasTask.js": {
            "name": "src/displays/pixi/display/TextureAtlasTask.js",
            "modules": {},
            "classes": {
                "springroll.pixi.TextureAtlasTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/display/TextureTask.js": {
            "name": "src/displays/pixi/display/TextureTask.js",
            "modules": {},
            "classes": {
                "springroll.pixi.TextureTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/mixins/BitmapText.js": {
            "name": "src/displays/pixi/mixins/BitmapText.js",
            "modules": {},
            "classes": {
                "PIXI.BitmapText": 1
            },
            "fors": {},
            "namespaces": {
                "PIXI": 1
            }
        },
        "src/displays/pixi/mixins/Container.js": {
            "name": "src/displays/pixi/mixins/Container.js",
            "modules": {},
            "classes": {
                "PIXI.Container": 1
            },
            "fors": {},
            "namespaces": {
                "PIXI": 1
            }
        },
        "src/displays/pixi/mixins/InteractionManager.js": {
            "name": "src/displays/pixi/mixins/InteractionManager.js",
            "modules": {},
            "classes": {
                "PIXI.InteractionManager": 1
            },
            "fors": {},
            "namespaces": {
                "PIXI": 1
            }
        },
        "src/displays/pixi/mixins/Point.js": {
            "name": "src/displays/pixi/mixins/Point.js",
            "modules": {},
            "classes": {
                "PIXI.Point": 1
            },
            "fors": {},
            "namespaces": {
                "PIXI": 1
            }
        },
        "src/displays/pixi/mixins/Sector.js": {
            "name": "src/displays/pixi/mixins/Sector.js",
            "modules": {},
            "classes": {
                "PIXI.Sector": 1
            },
            "fors": {},
            "namespaces": {
                "PIXI": 1
            }
        },
        "src/displays/pixi/mixins/Text.js": {
            "name": "src/displays/pixi/mixins/Text.js",
            "modules": {},
            "classes": {
                "PIXI.Text": 1
            },
            "fors": {},
            "namespaces": {
                "PIXI": 1
            }
        },
        "src/displays/pixi/spine/ParallelSpineData.js": {
            "name": "src/displays/pixi/spine/ParallelSpineData.js",
            "modules": {
                "PIXI Spine": 1
            },
            "classes": {
                "springroll.pixi.ParallelSpineData": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/spine/SpineAnimTask.js": {
            "name": "src/displays/pixi/spine/SpineAnimTask.js",
            "modules": {},
            "classes": {
                "springroll.pixi.SpineAnimTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/spine/SpineAtlas.js": {
            "name": "src/displays/pixi/spine/SpineAtlas.js",
            "modules": {},
            "classes": {
                "springroll.pixi.SpineAtlas": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/spine/SpineAtlasTask.js": {
            "name": "src/displays/pixi/spine/SpineAtlasTask.js",
            "modules": {},
            "classes": {
                "springroll.pixi.SpineAtlasTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/spine/SpineInstance.js": {
            "name": "src/displays/pixi/spine/SpineInstance.js",
            "modules": {},
            "classes": {
                "springroll.pixi.SpineInstance": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/spine/SpinePlugin.js": {
            "name": "src/displays/pixi/spine/SpinePlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/pixi/ui/Button.js": {
            "name": "src/displays/pixi/ui/Button.js",
            "modules": {
                "PIXI UI": 1
            },
            "classes": {
                "springroll.pixi.Button": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/ui/DragData.js": {
            "name": "src/displays/pixi/ui/DragData.js",
            "modules": {},
            "classes": {
                "springroll.pixi.DragData": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/ui/DragManager.js": {
            "name": "src/displays/pixi/ui/DragManager.js",
            "modules": {},
            "classes": {
                "springroll.pixi.DragManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/DisplayAdapter.js": {
            "name": "src/displays/pixi/DisplayAdapter.js",
            "modules": {
                "PIXI Display": 1
            },
            "classes": {
                "springroll.pixi.DisplayAdapter": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/PixiDisplay.js": {
            "name": "src/displays/pixi/PixiDisplay.js",
            "modules": {},
            "classes": {
                "springroll.pixi.PixiDisplay": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            }
        },
        "src/displays/pixi/TickerPlugin.js": {
            "name": "src/displays/pixi/TickerPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/displays/AbstractDisplay.js": {
            "name": "src/displays/AbstractDisplay.js",
            "modules": {},
            "classes": {
                "springroll.AbstractDisplay": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/events/EventDispatcher.js": {
            "name": "src/events/EventDispatcher.js",
            "modules": {},
            "classes": {
                "springroll.EventDispatcher": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/events/PropertyDispatcher.js": {
            "name": "src/events/PropertyDispatcher.js",
            "modules": {},
            "classes": {
                "springroll.PropertyDispatcher": 1,
                "springroll.Property": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/AbstractHint.js": {
            "name": "src/hints/AbstractHint.js",
            "modules": {
                "Hints": 1
            },
            "classes": {
                "springroll.AbstractHint": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/AnimatorHint.js": {
            "name": "src/hints/AnimatorHint.js",
            "modules": {},
            "classes": {
                "springroll.AnimatorHint": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/FunctionHint.js": {
            "name": "src/hints/FunctionHint.js",
            "modules": {},
            "classes": {
                "springroll.FunctionHint": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/GroupHint.js": {
            "name": "src/hints/GroupHint.js",
            "modules": {},
            "classes": {
                "springroll.GroupHint": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/HintsPlayer.js": {
            "name": "src/hints/HintsPlayer.js",
            "modules": {},
            "classes": {
                "springroll.HintsPlayer": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/HintsPlugin.js": {
            "name": "src/hints/HintsPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/hints/VOHint.js": {
            "name": "src/hints/VOHint.js",
            "modules": {},
            "classes": {
                "springroll.VOHint": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/languages/Languages.js": {
            "name": "src/languages/Languages.js",
            "modules": {
                "Languages": 1
            },
            "classes": {
                "springroll.Languages": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/languages/LanguagesPlugin.js": {
            "name": "src/languages/LanguagesPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/tasks/ColorAlphaTask.js": {
            "name": "src/loaders/tasks/ColorAlphaTask.js",
            "modules": {},
            "classes": {
                "springroll.ColorAlphaTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/tasks/FunctionTask.js": {
            "name": "src/loaders/tasks/FunctionTask.js",
            "modules": {},
            "classes": {
                "springroll.FunctionTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/tasks/ListTask.js": {
            "name": "src/loaders/tasks/ListTask.js",
            "modules": {},
            "classes": {
                "springroll.ListTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/tasks/LoadTask.js": {
            "name": "src/loaders/tasks/LoadTask.js",
            "modules": {},
            "classes": {
                "springroll.LoadTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/tasks/Task.js": {
            "name": "src/loaders/tasks/Task.js",
            "modules": {},
            "classes": {
                "springroll.Task": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/AssetCache.js": {
            "name": "src/loaders/AssetCache.js",
            "modules": {},
            "classes": {
                "springroll.AssetCache": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/AssetLoad.js": {
            "name": "src/loaders/AssetLoad.js",
            "modules": {},
            "classes": {
                "springroll.AssetLoad": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/AssetManager.js": {
            "name": "src/loaders/AssetManager.js",
            "modules": {},
            "classes": {
                "springroll.AssetManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/AssetSizes.js": {
            "name": "src/loaders/AssetSizes.js",
            "modules": {},
            "classes": {
                "springroll.AssetSizes": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/CacheManager.js": {
            "name": "src/loaders/CacheManager.js",
            "modules": {},
            "classes": {
                "springroll.CacheManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/ConfigPlugin.js": {
            "name": "src/loaders/ConfigPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/Loader.js": {
            "name": "src/loaders/Loader.js",
            "modules": {},
            "classes": {
                "springroll.Loader": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/LoaderItem.js": {
            "name": "src/loaders/LoaderItem.js",
            "modules": {},
            "classes": {
                "springroll.LoaderItem": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/LoaderPlugin.js": {
            "name": "src/loaders/LoaderPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/loaders/LoaderResult.js": {
            "name": "src/loaders/LoaderResult.js",
            "modules": {},
            "classes": {
                "springroll.LoaderResult": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/Animator.js": {
            "name": "src/media/Animator.js",
            "modules": {},
            "classes": {
                "springroll.Animator": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/AnimatorInstance.js": {
            "name": "src/media/AnimatorInstance.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/AnimatorPlugin.js": {
            "name": "src/media/AnimatorPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/AnimatorTimeline.js": {
            "name": "src/media/AnimatorTimeline.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/Captions.js": {
            "name": "src/media/Captions.js",
            "modules": {
                "Captions": 1
            },
            "classes": {
                "springroll.Captions": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/CaptionsPlugin.js": {
            "name": "src/media/CaptionsPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/GenericMovieClipInstance.js": {
            "name": "src/media/GenericMovieClipInstance.js",
            "modules": {
                "Animation": 1
            },
            "classes": {
                "springroll.AnimatorTimeline": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/Sound.js": {
            "name": "src/media/Sound.js",
            "modules": {
                "Sound": 1
            },
            "classes": {
                "springroll.Sound": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/SoundContext.js": {
            "name": "src/media/SoundContext.js",
            "modules": {},
            "classes": {
                "springroll.SoundContext": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/SoundInstance.js": {
            "name": "src/media/SoundInstance.js",
            "modules": {},
            "classes": {
                "springroll.SoundInstance": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/SoundPlugin.js": {
            "name": "src/media/SoundPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/SoundTask.js": {
            "name": "src/media/SoundTask.js",
            "modules": {},
            "classes": {
                "springroll.SoundTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/media/VOPlayer.js": {
            "name": "src/media/VOPlayer.js",
            "modules": {},
            "classes": {
                "springroll.VOPlayer": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/mixins/Array.js": {
            "name": "src/mixins/Array.js",
            "modules": {},
            "classes": {
                "window.Array": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/mixins/Math.js": {
            "name": "src/mixins/Math.js",
            "modules": {},
            "classes": {
                "window.Math": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/mixins/Number.js": {
            "name": "src/mixins/Number.js",
            "modules": {},
            "classes": {
                "window.Number": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/mixins/Object.js": {
            "name": "src/mixins/Object.js",
            "modules": {},
            "classes": {
                "window.Object": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/mixins/RequestUtils.js": {
            "name": "src/mixins/RequestUtils.js",
            "modules": {},
            "classes": {
                "window.RequestUtils": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/mixins/String.js": {
            "name": "src/mixins/String.js",
            "modules": {},
            "classes": {
                "window.String": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/states/State.js": {
            "name": "src/states/State.js",
            "modules": {
                "States": 1
            },
            "classes": {
                "springroll.State": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/states/StateEvent.js": {
            "name": "src/states/StateEvent.js",
            "modules": {},
            "classes": {
                "springroll.StateEvent": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/states/StateManager.js": {
            "name": "src/states/StateManager.js",
            "modules": {},
            "classes": {
                "springroll.StateManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/states/StatesPlugin.js": {
            "name": "src/states/StatesPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/ui/Positioner.js": {
            "name": "src/ui/Positioner.js",
            "modules": {
                "UI": 1
            },
            "classes": {
                "springroll.Positioner": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/ui/ScaleImage.js": {
            "name": "src/ui/ScaleImage.js",
            "modules": {},
            "classes": {
                "springroll.ScaleImage": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/ui/ScaleItem.js": {
            "name": "src/ui/ScaleItem.js",
            "modules": {},
            "classes": {
                "springroll.ScaleItem": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/ui/ScaleManager.js": {
            "name": "src/ui/ScaleManager.js",
            "modules": {},
            "classes": {
                "springroll.ScaleManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/ui/ScalingPlugin.js": {
            "name": "src/ui/ScalingPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/ui/TouchPlugin.js": {
            "name": "src/ui/TouchPlugin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        },
        "src/utils/extend.js": {
            "name": "src/utils/extend.js",
            "modules": {
                "Core": 1
            },
            "classes": {
                "window.extend": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/utils/include.js": {
            "name": "src/utils/include.js",
            "modules": {},
            "classes": {
                "window.include": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/utils/mixin.js": {
            "name": "src/utils/mixin.js",
            "modules": {},
            "classes": {
                "window.mixin": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/utils/namespace.js": {
            "name": "src/utils/namespace.js",
            "modules": {},
            "classes": {
                "window.namespace": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "src/Application.js": {
            "name": "src/Application.js",
            "modules": {},
            "classes": {
                "springroll.Application": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            }
        }
    },
    "modules": {
        "Container Client": {
            "name": "Container Client",
            "submodules": {},
            "classes": {
                "springroll.UserData": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/container-client/UserData.js",
            "line": 10
        },
        "Core": {
            "name": "Core",
            "submodules": {},
            "classes": {
                "springroll.Application": 1,
                "springroll.CombinedCallback": 1,
                "springroll.DelayedCall": 1,
                "springroll.EnumValue": 1,
                "springroll.Enum": 1,
                "springroll.SavedData": 1,
                "springroll.TimeUtils": 1,
                "springroll.WeightedRandom": 1,
                "springroll.ApplicationOptions": 1,
                "springroll.ApplicationPlugin": 1,
                "springroll.PageVisibility": 1,
                "springroll.StringFilters": 1,
                "springroll.EventDispatcher": 1,
                "springroll.Loader": 1,
                "springroll.PropertyDispatcher": 1,
                "springroll.FlashArtImageTask": 1,
                "springroll.AbstractDisplay": 1,
                "springroll.Property": 1,
                "springroll.ColorAlphaTask": 1,
                "springroll.FunctionTask": 1,
                "springroll.ListTask": 1,
                "springroll.LoadTask": 1,
                "springroll.Task": 1,
                "springroll.AssetCache": 1,
                "springroll.AssetLoad": 1,
                "springroll.AssetManager": 1,
                "springroll.AssetSizes": 1,
                "springroll.CacheManager": 1,
                "springroll.LoaderItem": 1,
                "springroll.LoaderResult": 1,
                "window.Array": 1,
                "window.Math": 1,
                "window.Number": 1,
                "window.Object": 1,
                "window.RequestUtils": 1,
                "window.String": 1,
                "window.extend": 1,
                "window.include": 1,
                "window.mixin": 1,
                "window.namespace": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1,
                "window": 1
            },
            "tag": "module",
            "file": "src/utils/namespace.js",
            "line": 5
        },
        "Debug": {
            "name": "Debug",
            "submodules": {},
            "classes": {
                "springroll.Debug": 1,
                "springroll.DebugOptions": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/debug/DebugOptions.js",
            "line": 7
        },
        "EaselJS Animation": {
            "name": "EaselJS Animation",
            "submodules": {},
            "classes": {
                "springroll.easeljs.Animator": 1,
                "springroll.easeljs.Application": 1,
                "springroll.easeljs.BitmapMovieClip": 1,
                "springroll.easeljs.BitmapMovieClipInstance": 1,
                "springroll.easeljs.BitmapMovieClipTask": 1,
                "springroll.easeljs.MovieClipInstance": 1,
                "springroll.easeljs.ReversePlayback": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            },
            "tag": "module",
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 10,
            "requires": [
                "Core",
                "Animation",
                "EaselJS Display"
            ]
        },
        "EaselJS Display": {
            "name": "EaselJS Display",
            "submodules": {},
            "classes": {
                "springroll.easeljs.EaselJSDisplay": 1,
                "springroll.easeljs.BitmapTask": 1,
                "springroll.easeljs.FlashArt": 1,
                "springroll.easeljs.FlashArtAtlasTask": 1,
                "springroll.easeljs.FlashArtTask": 1,
                "springroll.easeljs.FlashSpriteSheetTask": 1,
                "springroll.easeljs.SpriteSheetTask": 1,
                "springroll.easeljs.TextureAtlas": 1,
                "springroll.easeljs.Texture": 1,
                "springroll.easeljs.TextureAtlasTask": 1,
                "createjs.Container": 1,
                "createjs.MovieClip": 1,
                "createjs.Point": 1,
                "createjs.SpriteSheet": 1,
                "springroll.easeljs.BitmapUtils": 1,
                "springroll.easeljs.DisplayAdapter": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1,
                "springroll": 1,
                "createjs": 1
            },
            "tag": "module",
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 8,
            "requires": [
                "Core"
            ]
        },
        "EaselJS States": {
            "name": "EaselJS States",
            "submodules": {},
            "classes": {
                "springroll.easeljs.BasePanel": 1,
                "springroll.easeljs.BaseState": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1,
                "springroll": 1
            },
            "tag": "module",
            "file": "src/displays/easeljs/states/BaseState.js",
            "line": 12,
            "requires": [
                "Core",
                "States",
                "UI",
                "Sound",
                "EaselJS Display",
                "EaselJS UI"
            ]
        },
        "PIXI Animation": {
            "name": "PIXI Animation",
            "submodules": {},
            "classes": {
                "springroll.pixi.Animator": 1,
                "springroll.pixi.AdvancedMovieClip": 1,
                "springroll.pixi.AdvancedMovieClipInstance": 1,
                "springroll.pixi.AdvancedMovieClipTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1,
                "springroll": 1
            },
            "tag": "module",
            "file": "src/displays/pixi/animation/AdvancedMovieClipTask.js",
            "line": 11,
            "requires": [
                "Core",
                "PIXI Display"
            ]
        },
        "PIXI Display": {
            "name": "PIXI Display",
            "submodules": {},
            "classes": {
                "springroll.pixi.PixiDisplay": 1,
                "springroll.pixi.BitmapFontTask": 1,
                "springroll.pixi.TextureAtlas": 1,
                "springroll.pixi.TextureAtlasTask": 1,
                "springroll.pixi.TextureTask": 1,
                "PIXI.BitmapText": 1,
                "PIXI.Container": 1,
                "PIXI.InteractionManager": 1,
                "PIXI.Point": 1,
                "PIXI.Sector": 1,
                "PIXI.Text": 1,
                "springroll.pixi.DisplayAdapter": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1,
                "springroll": 1,
                "PIXI": 1
            },
            "tag": "module",
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 8,
            "requires": [
                "Core"
            ]
        },
        "Sound": {
            "name": "Sound",
            "submodules": {},
            "classes": {
                "springroll.Sound": 1,
                "springroll.SoundInstance": 1,
                "springroll.VOPlayer": 1,
                "springroll.SoundContext": 1,
                "springroll.SoundTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/media/SoundTask.js",
            "line": 11,
            "requires": [
                "Core"
            ]
        },
        "States": {
            "name": "States",
            "submodules": {},
            "classes": {
                "springroll.StateManager": 1,
                "springroll.BaseState": 1,
                "springroll.State": 1,
                "springroll.StateEvent": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/states/StateEvent.js",
            "line": 9,
            "requires": [
                "Core"
            ]
        },
        "UI": {
            "name": "UI",
            "submodules": {},
            "classes": {
                "springroll.ScaleManager": 1,
                "springroll.UIScaler": 1,
                "springroll.Positioner": 1,
                "springroll.ScaleImage": 1,
                "springroll.ScaleItem": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/ui/ScaleItem.js",
            "line": 11,
            "requires": [
                "Core"
            ]
        },
        "EaselJS Cutscene": {
            "name": "EaselJS Cutscene",
            "submodules": {},
            "classes": {
                "springroll.easeljs.Cutscene": 1,
                "springroll.easeljs.CutsceneTask": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1,
                "springroll": 1
            },
            "tag": "module",
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 12,
            "requires": [
                "Core",
                "EaselJS Display"
            ]
        },
        "EaselJS UI": {
            "name": "EaselJS UI",
            "submodules": {},
            "classes": {
                "springroll.easeljs.Button": 1,
                "springroll.easeljs.DragData": 1,
                "springroll.easeljs.DragManager": 1,
                "springroll.easeljs.SoundButton": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.easeljs": 1
            },
            "tag": "module",
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 11,
            "requires": [
                "Core",
                "EaselJS Display"
            ]
        },
        "Native Display": {
            "name": "Native Display",
            "submodules": {},
            "classes": {
                "springroll.native.Circle": 1,
                "springroll.native.Ellipse": 1,
                "springroll.native.Point": 1,
                "springroll.native.Polygon": 1,
                "springroll.native.Rectangle": 1,
                "springroll.native.DisplayAdapter": 1,
                "springroll.native.NativeDisplay": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.native": 1
            },
            "tag": "module",
            "file": "src/displays/native/NativeDisplay.js",
            "line": 11,
            "requires": [
                "Core"
            ]
        },
        "PIXI Spine": {
            "name": "PIXI Spine",
            "submodules": {},
            "classes": {
                "springroll.pixi.ParallelSpineData": 1,
                "springroll.pixi.SpineAnimTask": 1,
                "springroll.pixi.SpineAtlas": 1,
                "springroll.pixi.SpineAtlasTask": 1,
                "springroll.pixi.SpineInstance": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1,
                "springroll": 1
            },
            "tag": "module",
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 15,
            "requires": [
                "Core",
                "PIXI Display",
                "Animation"
            ]
        },
        "PIXI UI": {
            "name": "PIXI UI",
            "submodules": {},
            "classes": {
                "springroll.pixi.Button": 1,
                "springroll.pixi.DragData": 1,
                "springroll.pixi.DragManager": 1
            },
            "fors": {},
            "namespaces": {
                "springroll.pixi": 1
            },
            "tag": "module",
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 14,
            "requires": [
                "Core",
                "PIXI Display"
            ]
        },
        "Hints": {
            "name": "Hints",
            "submodules": {},
            "classes": {
                "springroll.AbstractHint": 1,
                "springroll.AnimatorHint": 1,
                "springroll.FunctionHint": 1,
                "springroll.GroupHint": 1,
                "springroll.HintsPlayer": 1,
                "springroll.VOHint": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/hints/VOHint.js",
            "line": 11,
            "requires": [
                "Core",
                "Sound",
                "Learning"
            ]
        },
        "Languages": {
            "name": "Languages",
            "submodules": {},
            "classes": {
                "springroll.Languages": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/languages/Languages.js",
            "line": 13,
            "requires": [
                "Core"
            ]
        },
        "Animation": {
            "name": "Animation",
            "submodules": {},
            "classes": {
                "springroll.Animator": 1,
                "springroll.AnimatorTimeline": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 11,
            "requires": [
                "Core"
            ]
        },
        "Captions": {
            "name": "Captions",
            "submodules": {},
            "classes": {
                "springroll.Captions": 1
            },
            "fors": {},
            "namespaces": {
                "springroll": 1
            },
            "tag": "module",
            "file": "src/media/Captions.js",
            "line": 12,
            "requires": [
                "Core"
            ]
        }
    },
    "classes": {
        "springroll.Application": {
            "name": "springroll.Application",
            "shortname": "Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/Application.js",
            "line": 13,
            "description": "Application is the main entry point for using SpringRoll, creating\nan application allows the creation of displays and adding of module\nfunctionality (e.g. sound, captions, etc). All timing and asynchronous\nevents should be handled by the Application to control the play\nand pause. Any update, Ticker-type functions, should use the Applications\nupdate event.\n\n\tvar app = new Application();",
            "extends": "springroll.EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The options for creating the application,\n\t\tsee `springroll.ApplicationOptions` for the specific options\n\t\tthat can be overridden and set.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "init",
                    "description": "The callback when initialized",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "null"
                }
            ]
        },
        "springroll.UserData": {
            "name": "springroll.UserData",
            "shortname": "UserData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Container Client",
            "namespace": "springroll",
            "file": "src/container-client/UserData.js",
            "line": 10,
            "description": "This class is responsible for saving the user-specific data\nwithin an Application. This can be player-progress data, high\nscore information, or other data that needs be saved between\nsessions of running an app.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The container instance",
                    "type": "Bellhop"
                }
            ]
        },
        "springroll.CombinedCallback": {
            "name": "springroll.CombinedCallback",
            "shortname": "CombinedCallback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/async/CombinedCallback.js",
            "line": 8,
            "description": "CombinedCallback is a utility class that creates a function to be passed to multiple\nasynchronous functions as a callback, and will call your callback on the last time it\nis called."
        },
        "springroll.DelayedCall": {
            "name": "springroll.DelayedCall",
            "shortname": "DelayedCall",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/async/DelayedCall.js",
            "line": 10,
            "description": "A class for delaying a call through the Application, instead of relying on setInterval() or\nsetTimeout().",
            "is_constructor": 1,
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call when the delay has completed.",
                    "type": "Function"
                },
                {
                    "name": "delay",
                    "description": "The time to delay the call, in milliseconds (or optionally frames).",
                    "type": "Int"
                },
                {
                    "name": "options",
                    "description": "The options to use or repeat value",
                    "type": "Object|Boolean",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "repeat",
                            "description": "If the DelayedCall should automatically repeat itself when\n                             completed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "autoDestroy",
                            "description": "If the DelayedCall should clean itself up when completed.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "useFrames",
                            "description": "If the DelayedCall should use frames instead of\n                                milliseconds for the delay.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "autoDestroy",
                    "description": "If the DelayedCall should clean itself up when completed.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "useFrames",
                    "description": "If the DelayedCall should use frames instead of\n                                milliseconds for the delay.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ]
        },
        "springroll.EnumValue": {
            "name": "springroll.EnumValue",
            "shortname": "EnumValue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/utils/Enum.js",
            "line": 9,
            "description": "An enumeration value. This class is private, and is only used by Enum.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the enum value.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The integer value of the enum.",
                    "type": "Int"
                },
                {
                    "name": "toString",
                    "description": "A string for toString() to return, instead of the name.",
                    "type": "String"
                }
            ]
        },
        "springroll.Enum": {
            "name": "springroll.Enum",
            "shortname": "Enum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/utils/Enum.js",
            "line": 62,
            "description": "An enumeration, similar to Enums in C#. Each value is created as an EnumValue on the Enum,\nreferenced as a property with the same name as the EnumValue. Examples:\n\n\t\tvar myEnum = new springroll.Enum(\n\t\t\t\"valueOf0\",\n\t\t\t\"valueOf1\",\n\t\t\t\"valueOf2\");\n\t\tvar myOtherEnum = new springroll.Enum(\n\t\t\t{name: \"one\", value:\"1\", toString:\"I am the One!\"},\n\t\t\t\"two\",\n\t\t\t{name:\"screwSequentialNumbers\", value:42});\n\t\t\t\n\t\tmyEnum.valueOf0 != 0;//enum values are not integers\n\t\tmyEnum.valueOf1 != myOtherEnum.one;//enum values are not the same as other enums\n\t\tmyEnum.valueOf2.asInt == 2;//enum values can be explicitly compared to integers\n\t\tmyOtherEnum.screwSequentialNumbers == myOtherEnum.valueFromInt(42);//can use ints to get values\n\t\tconsole.log(myOtherEnum.one.toString());//outputs \"I am the One!\"\n\n\t\tfor (var i in myEnum) console.log(i); //outputs \"valueOf0\",\"valueOf1\",\"valueOf2\"",
            "is_constructor": 1,
            "params": [
                {
                    "name": "arguments\nThe",
                    "description": "list of enumeration values. You can pass either an\narray or a list of parameters. Each string will be\nthe previous value plus one, while objects with\n'name' and 'value' properties will have the specified\nnumeric value.",
                    "type": "Array|String|Object"
                }
            ]
        },
        "springroll.SavedData": {
            "name": "springroll.SavedData",
            "shortname": "SavedData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/utils/SavedData.js",
            "line": 8,
            "description": "The SavedData functions use localStorage and sessionStorage, with a cookie fallback."
        },
        "springroll.TimeUtils": {
            "name": "springroll.TimeUtils",
            "shortname": "TimeUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/utils/TimeUtils.js",
            "line": 24,
            "description": "A collection of Time related utility functions"
        },
        "springroll.WeightedRandom": {
            "name": "springroll.WeightedRandom",
            "shortname": "WeightedRandom",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/utils/WeightedRandom.js",
            "line": 4,
            "description": "A class for generating weighted random values. Input objects are dictionary objects\nwhere the keys are the strings to be picked from, and the values are the corresponding\nodds as integers. For example:\n\n {\n     itemWith25PercentChance: 2,\n     itemWith50PercentChance: 4,\n     otherItemWith25PercentChance: 2\n }",
            "is_constructor": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The configuration object for this weighted value generator.",
                    "type": "Object"
                }
            ]
        },
        "springroll.ApplicationOptions": {
            "name": "springroll.ApplicationOptions",
            "shortname": "ApplicationOptions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/ApplicationOptions.js",
            "line": 10,
            "description": "Manage the Application options",
            "extends": "springroll.PropertyDispatcher",
            "is_constructor": 1
        },
        "springroll.ApplicationPlugin": {
            "name": "springroll.ApplicationPlugin",
            "shortname": "ApplicationPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/ApplicationPlugin.js",
            "line": 9,
            "description": "Responsible for creating properties, methods to \nthe SpringRoll Application when it's created.\n\n\tvar plugin = new ApplicationPlugin();\n\tplugin.setup = function()\n\t{\n\t\tthis.options.add('customOption', null);\n\t};",
            "is_constructor": 1,
            "params": [
                {
                    "name": "priority",
                    "description": "The priority, higher priority\n       plugins are setup, preloaded and destroyed first.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ]
        },
        "springroll.PageVisibility": {
            "name": "springroll.PageVisibility",
            "shortname": "PageVisibility",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/PageVisibility.js",
            "line": 8,
            "description": "Handle the page visiblity change, if supported. Application uses one of these to\nmonitor page visibility. It is suggested that you listen to `pause`, `paused`,\nor `resumed` events on the Application instead of using one of these yourself.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "onFocus",
                    "description": "Callback when the page becomes visible",
                    "type": "Function"
                },
                {
                    "name": "onBlur",
                    "description": "Callback when the page loses visibility",
                    "type": "Function"
                }
            ]
        },
        "springroll.StringFilters": {
            "name": "springroll.StringFilters",
            "shortname": "StringFilters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/core/StringFilters.js",
            "line": 7,
            "description": "Class for filtering strings",
            "is_constructor": 1
        },
        "springroll.Debug": {
            "name": "springroll.Debug",
            "shortname": "Debug",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Debug",
            "namespace": "springroll",
            "file": "src/debug/Debug.js",
            "line": 11,
            "description": "A static closure to provide easy access to the console\nwithout having errors if the console doesn't exist\nto use call: Debug.log('Your log here')",
            "static": 1
        },
        "springroll.DebugOptions": {
            "name": "springroll.DebugOptions",
            "shortname": "DebugOptions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Debug",
            "namespace": "springroll",
            "file": "src/debug/DebugOptions.js",
            "line": 7,
            "description": "Class for display a list of query string options\nnicely in the console."
        },
        "springroll.EventDispatcher": {
            "name": "springroll.EventDispatcher",
            "shortname": "EventDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/events/EventDispatcher.js",
            "line": 8,
            "description": "The EventDispatcher mirrors the functionality of AS3 and EaselJS's EventDispatcher,\nbut is more robust in terms of inputs for the `on()` and `off()` methods.",
            "is_constructor": 1
        },
        "springroll.Loader": {
            "name": "springroll.Loader",
            "shortname": "Loader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/Loader.js",
            "line": 12,
            "description": "The Loader is the singular loader for loading all assets\nincluding images, data, code and sounds. Loader supports cache-busting\nin the browser using dynamic query string parameters."
        },
        "springroll.PropertyDispatcher": {
            "name": "springroll.PropertyDispatcher",
            "shortname": "PropertyDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/events/PropertyDispatcher.js",
            "line": 9,
            "description": "Event dispatcher with ability to detect whenever a property\nis changed.",
            "extends": "springroll.EventDispatcher",
            "is_constructor": 1
        },
        "springroll.easeljs.Animator": {
            "name": "springroll.easeljs.Animator",
            "shortname": "Animator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/deprecation/easeljs-animation.js",
            "line": 10,
            "description": "See {{#crossLink \"springroll.Animator\"}}{{/crossLink}}",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0"
        },
        "springroll.easeljs.EaselJSDisplay": {
            "name": "springroll.easeljs.EaselJSDisplay",
            "shortname": "EaselJSDisplay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 13,
            "description": "EaselJSDisplay is a display plugin for the springroll Framework\nthat uses the EaselJS library for rendering.",
            "extends": "springroll.AbstractDisplay",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "The id of the canvas element on the page to draw to.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The setup data for the EaselJS stage.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "stageType",
                            "description": "If the stage should be a normal stage or a\n                                            SpriteStage (use \"spriteStage\").",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"stage\""
                        },
                        {
                            "name": "clearView",
                            "description": "If the stage should wipe the canvas between\n                                           renders.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "mouseOverRate",
                            "description": "How many times per second to check for mouseovers. To\n                                        disable them, use 0 or -1.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "30"
                        },
                        {
                            "name": "autoPreventDefault",
                            "description": "If preventDefault() should be called on\n                                                   all touch events and mousedown events.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.BasePanel": {
            "name": "springroll.easeljs.BasePanel",
            "shortname": "BasePanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS States",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 13,
            "description": "Panel with convenience properties to the config, background and app.",
            "extends": "createjs.Container",
            "is_constructor": 1
        },
        "springroll.easeljs.BaseState": {
            "name": "springroll.easeljs.BaseState",
            "shortname": "BaseState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS States",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/states/BaseState.js",
            "line": 12,
            "description": "Abstract app state class to do some preloading of assets\nalso plays well with the app audio loading.",
            "extends": "springroll.State",
            "is_constructor": 1,
            "params": [
                {
                    "name": "panel",
                    "description": "The panel",
                    "type": "createjs.Container"
                },
                {
                    "name": "options",
                    "description": "The options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "next",
                            "description": "The next state alias or call to next state",
                            "type": "String|Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "previous",
                            "description": "The previous state alias or call to\n      previous state",
                            "type": "String|Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "scaling",
                            "description": "The scaling items to use with the ScaleManager.\n      See `ScaleManager.addItems` for more information about the\n      format of the scaling objects.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.pixi.Animator": {
            "name": "springroll.pixi.Animator",
            "shortname": "Animator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Animation",
            "namespace": "springroll.pixi",
            "file": "src/deprecation/pixi-animation.js",
            "line": 10,
            "description": "See {{#crossLink \"springroll.Animator\"}}{{/crossLink}}",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0"
        },
        "springroll.pixi.PixiDisplay": {
            "name": "springroll.pixi.PixiDisplay",
            "shortname": "PixiDisplay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 15,
            "description": "PixiDisplay is a display plugin for the springroll Framework\nthat uses the Pixi library for rendering.",
            "extends": "springroll.AbstractDisplay",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "The id of the canvas element on the page to draw to.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The setup data for the Pixi stage.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "forceContext",
                            "description": "If a specific renderer should be used instead\n                                            of WebGL falling back to Canvas. Use \"webgl\" or\n                                            \"canvas2d\" to specify a renderer.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "clearView",
                            "description": "If the canvas should be wiped between renders.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "backgroundColor",
                            "description": "The background color of the stage (if\n                                                 it is not transparent).",
                            "type": "Uint",
                            "optional": true,
                            "optdefault": "0x000000"
                        },
                        {
                            "name": "transparent",
                            "description": "If the stage should be transparent.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "antiAlias",
                            "description": "If the WebGL renderer should use anti-aliasing.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "preMultAlpha",
                            "description": "If the WebGL renderer should draw with all\n                                              images as pre-multiplied alpha. In most\n                                              cases, you probably do not want to set this\n                                              option to true.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "preserveDrawingBuffer",
                            "description": "Set this to true if you want to call\n                                                       toDataUrl on the WebGL rendering\n                                                       context.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "autoPreventDefault",
                            "description": "If preventDefault() should be called on\n                                                   all touch events and mousedown events.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ]
        },
        "springroll.Sound": {
            "name": "springroll.Sound",
            "shortname": "Sound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sound",
            "namespace": "springroll",
            "file": "src/media/Sound.js",
            "line": 19,
            "description": "Acts as a wrapper for SoundJS as well as adding lots of other functionality\nfor managing sounds.",
            "extends": "springroll.EventDispatcher"
        },
        "springroll.SoundInstance": {
            "name": "springroll.SoundInstance",
            "shortname": "SoundInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sound",
            "namespace": "springroll",
            "file": "src/media/SoundInstance.js",
            "line": 10,
            "description": "A playing instance of a sound (or promise to play as soon as it loads). These can only\nbe created through springroll.Sound.instance.play()."
        },
        "springroll.VOPlayer": {
            "name": "springroll.VOPlayer",
            "shortname": "VOPlayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sound",
            "namespace": "springroll",
            "file": "src/media/VOPlayer.js",
            "line": 15,
            "description": "A class for managing audio by only playing one at a time, playing a list,\nand even managing captions (Captions library) at the same time."
        },
        "springroll.StateManager": {
            "name": "springroll.StateManager",
            "shortname": "StateManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "States",
            "namespace": "springroll",
            "file": "src/states/StateManager.js",
            "line": 15,
            "description": "The State Manager used for managing the different states of a game or site",
            "extends": "springroll.EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "transitionSounds",
                    "description": "Data object with aliases and start times (seconds) for\n    transition in, loop and out sounds. Example: `{in:{alias:\"myAlias\", start:0.2}}`.\n    These objects are in the format for Animator from EaselJSDisplay or PixiDisplay,\n    so they can be just the sound alias instead of an object.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "in",
                            "description": "The sound to play for transition in",
                            "type": "Object|String",
                            "optional": true
                        },
                        {
                            "name": "out",
                            "description": "The sound to play for transition out",
                            "type": "Object|String",
                            "optional": true
                        },
                        {
                            "name": "loading",
                            "description": "The sound to play for loading",
                            "type": "Object|String",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "springroll.BaseState": {
            "name": "springroll.BaseState",
            "shortname": "springroll.BaseState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "States",
            "namespace": "springroll",
            "file": "src/deprecation/states.js",
            "line": 76,
            "description": "A state for use with the StateManager, see see {{#crossLink \"springroll.State\"}}{{/crossLink}}",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0"
        },
        "springroll.ScaleManager": {
            "name": "springroll.ScaleManager",
            "shortname": "ScaleManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "springroll",
            "file": "src/ui/ScaleManager.js",
            "line": 15,
            "description": "The UI scale is responsible for scaling UI components to help easy the burden of different\ndevice aspect ratios. The UI can expand either vertically or horizontally to fill excess\nspace.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "size",
                            "description": "The dimensions of the Scaler",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The designed width",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The designed height",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "maxwidth",
                                    "description": "The designed max width",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "size.width"
                                },
                                {
                                    "name": "maxheight",
                                    "description": "The designed max height",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "size.height"
                                }
                            ]
                        },
                        {
                            "name": "items",
                            "description": "The items to load",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "container",
                            "description": "The container if\n                                                                          adding items",
                            "type": "PIXI.DisplayObjectContainer|createjs.Container",
                            "optional": true
                        },
                        {
                            "name": "display",
                            "description": "The current display",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "enabled",
                            "description": "If the scaler is enabled",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "springroll.UIScaler": {
            "name": "springroll.UIScaler",
            "shortname": "UIScaler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "springroll",
            "file": "src/deprecation/ui.js",
            "line": 38,
            "description": "See {{#crossLink \"springroll.UIScaler\"}}{{/crossLink}}",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0"
        },
        "springroll.easeljs.Application": {
            "name": "springroll.easeljs.Application",
            "shortname": "Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/animation/AnimationPlugin.js",
            "line": 11
        },
        "springroll.easeljs.BitmapMovieClip": {
            "name": "springroll.easeljs.BitmapMovieClip",
            "shortname": "BitmapMovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 13,
            "description": "A class similar to createjs.MovieClip, but made to play animations from a\nspringroll.easeljs.TextureAtlas. The EaselJS Sprite class requires a spritesheet with equal\nsized and spaced frames. By using TextureAtlas, you can use a much smaller spritesheet,\nsprites on screen with fewer extra transparent pixels, and use the same API as MovieClip.\n\nFormat for BitmapMovieClip data:\n\n\t{\n\t\tfps:30,\n\t\tlabels:\n\t\t{\n\t\t\tanimStart:0,\n\t\t\tanimStart_loop:15\n\t\t},\n\t\torigin:{ x: 20, y:30 },\n\t\tframes:\n\t\t[\n\t\t\t{\n\t\t\t\tname:\"myAnim#\",\n\t\t\t\tmin:1,\n\t\t\t\tmax:20,\n\t\t\t\tdigits:4\n\t\t\t}\n\t\t],\n\t\tscale:1\n\t}\n\nThe example object describes a 30 fps animation that is 20 frames long, and was originally\nmyAnim0001.png->myAnim0020.png, with frame labels on the first and 16th frames. 'digits' is\noptional, and defaults to 4.",
            "extends": "createjs.Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "atlas",
                    "description": "The texture atlas to pull frames from.",
                    "type": "springroll.easeljs.TextureAtlas",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Initialization data",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "fps",
                            "description": "Framerate to play the movieclip at. Omitting this will use the\n                     current framerate.",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "labels",
                            "description": "A dictionary of the labels in the movieclip to assist in\n                           playing animations.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "The origin of the movieclip.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "{x:0,y:0}"
                        },
                        {
                            "name": "frames",
                            "description": "An array of frame sequences to pull from the texture atlas.",
                            "type": "Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The name to use for the frame sequence. This should\n                                include a \"#\" to be replaced with the image number.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "min",
                                    "description": "The first frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "max",
                                    "description": "The last frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "digits",
                                    "description": "The maximum number of digits in the names of the frames,\n                                 e.g. myAnim0001 has 4 digits.",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "4"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "description": "The scale at which the art was exported, e.g. a scale of 1.4\n                            means the art was increased in size to 140% before exporting\n                            and should be scaled back down before drawing to the screen.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.BitmapMovieClipInstance": {
            "name": "springroll.easeljs.BitmapMovieClipInstance",
            "shortname": "BitmapMovieClipInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/animation/BitmapMovieClipInstance.js",
            "line": 12,
            "description": "The plugin for working with movieclip and animator",
            "extends": "springroll.GenericMovieClipInstance",
            "access": "private",
            "tagname": ""
        },
        "springroll.easeljs.BitmapMovieClipTask": {
            "name": "springroll.easeljs.BitmapMovieClipTask",
            "shortname": "BitmapMovieClipTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/animation/BitmapMovieClipTask.js",
            "line": 11,
            "description": "Internal class for loading an instantiating a BitmapMovieClip.",
            "extends": "springroll.TextureAtlasTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "anim",
                            "description": "Path to the JSON configuration for BitmapMovieClip",
                            "type": "String"
                        },
                        {
                            "name": "atlas",
                            "description": "The TextureAtlas source data",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "image",
                            "description": "The atlas image path",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.MovieClipInstance": {
            "name": "springroll.easeljs.MovieClipInstance",
            "shortname": "MovieClipInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/animation/MovieClipInstance.js",
            "line": 12,
            "description": "The plugin for working with movieclip and animator",
            "extends": "springroll.GenericMovieClipInstance",
            "access": "private",
            "tagname": ""
        },
        "springroll.easeljs.ReversePlayback": {
            "name": "springroll.easeljs.ReversePlayback",
            "shortname": "ReversePlayback",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 10,
            "description": "Create an update listener that checks plays the animation\nin reverse. Requires the animation to have the same labeling\nsystem as the springroll.Animator system.\n\ti.e. each animation must have a corresponding ending frame\n\tmarked with\ta '_stop' and '_loop' suffixes,\nfor instance: \"walk\" requires \"walk_loop\"",
            "static": 1,
            "params": [
                {
                    "name": "clip\nThe",
                    "description": "MovieClip containing the timeline and animation",
                    "type": "createjs.MovieClip"
                }
            ]
        },
        "springroll.easeljs.Cutscene": {
            "name": "springroll.easeljs.Cutscene",
            "shortname": "Cutscene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 13,
            "description": "Cutscene is a class for playing a single EaselJS animation synced to a\nsingle audio file with springroll.Sound, with optional captions.",
            "extends": "createjs.Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The runtime specific setup data for the cutscene.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "clip",
                            "description": "The movieclip animation",
                            "type": "createjs.Container"
                        },
                        {
                            "name": "width",
                            "description": "The width of the animation",
                            "type": "Int"
                        },
                        {
                            "name": "height",
                            "description": "The height of the animation",
                            "type": "Int"
                        },
                        {
                            "name": "display",
                            "description": "The display or display\n      id of the EaselJSDisplay to draw on.",
                            "type": "String|springroll.AbstractDisplay"
                        },
                        {
                            "name": "audio",
                            "description": "The audio being played",
                            "type": "Array"
                        },
                        {
                            "name": "imageScale",
                            "description": "Scaling to apply to all images loaded for the\n    Cutscene.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "captions",
                            "description": "A Captions instance to display captions text on.",
                            "type": "springroll.Captions",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.CutsceneTask": {
            "name": "springroll.easeljs.CutsceneTask",
            "shortname": "CutsceneTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 12,
            "description": "Loads and instantiates a 'springroll.easeljs.Cutscene'.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "anim",
                            "description": "The path the animation",
                            "type": "String|Object"
                        },
                        {
                            "name": "animClass",
                            "description": "The name of the animation class",
                            "type": "String"
                        },
                        {
                            "name": "width",
                            "description": "The width of the animation",
                            "type": "Int"
                        },
                        {
                            "name": "height",
                            "description": "The height of the animation",
                            "type": "Int"
                        },
                        {
                            "name": "audio",
                            "description": "The collection of audio files",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "images",
                            "description": "The map of the images to load",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "fps",
                            "description": "The animation framerate, defaults to Application framerate",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "libItem",
                            "description": "The global window object for symbols",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'lib'"
                        },
                        {
                            "name": "imagesName",
                            "description": "The global window object for images",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'images'"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.BitmapTask": {
            "name": "springroll.easeljs.BitmapTask",
            "shortname": "BitmapTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/BitmapTask.js",
            "line": 12,
            "description": "Created a createjs Bitmap from a loaded image",
            "extends": "springroll.LoadTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "The path to the spritesheet",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.FlashArt": {
            "name": "springroll.easeljs.FlashArt",
            "shortname": "FlashArt",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 10,
            "description": "Handles the Asset loading for Flash Art takes care of unloading",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "The asset id",
                    "type": "String"
                },
                {
                    "name": "dom",
                    "description": "The `<script>` element added to the document",
                    "type": "NodeElement"
                },
                {
                    "name": "libName",
                    "description": "The window parameter name",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'lib'"
                }
            ]
        },
        "springroll.easeljs.FlashArtAtlasTask": {
            "name": "springroll.easeljs.FlashArtAtlasTask",
            "shortname": "FlashArtAtlasTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 13,
            "description": "Internal class for loading a texture atlas for a FlashArt load.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "The asset type must be \"easeljs\".",
                            "type": "String"
                        },
                        {
                            "name": "format",
                            "description": "The asset format must be \"FlashAtlas\".",
                            "type": "String"
                        },
                        {
                            "name": "atlas",
                            "description": "The TextureAtlas source data",
                            "type": "String"
                        },
                        {
                            "name": "image",
                            "description": "The atlas image path",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "libName",
                            "description": "The global window object for symbols",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'lib'"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.FlashArtImageTask": {
            "name": "springroll.FlashArtImageTask",
            "shortname": "FlashArtImageTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/displays/easeljs/display/FlashArtImageTask.js",
            "line": 9,
            "description": "Internal class for loading an image for a FlashArt load.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "The asset type must be \"easeljs\".",
                            "type": "String"
                        },
                        {
                            "name": "format",
                            "description": "The asset format must be \"FlashImage\".",
                            "type": "String"
                        },
                        {
                            "name": "src",
                            "description": "The source path to the image",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The source path to the color image, if not using src",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The source path to the alpha image, if not using src",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "imagesName",
                            "description": "The global window object for images",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'images'"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.FlashArtTask": {
            "name": "springroll.easeljs.FlashArtTask",
            "shortname": "FlashArtTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 13,
            "description": "Loads javascript art exported from Flash, with special care taken to allow images to be\nhandled properly and to attempt to avoid library definition collisions between different\npieces of art.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "Asset type must be \"easeljs\"",
                            "type": "String"
                        },
                        {
                            "name": "format",
                            "description": "Asset format must be \"springroll.easeljs.FlashArt\"",
                            "type": "String"
                        },
                        {
                            "name": "src",
                            "description": "The source",
                            "type": "String"
                        },
                        {
                            "name": "images",
                            "description": "An array of Image, TextureAtlas, or SpriteSheet assets to load",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "libName",
                            "description": "The global window object for symbols",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'lib'"
                        },
                        {
                            "name": "imagesName",
                            "description": "The global window object for images",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'images'"
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.FlashSpriteSheetTask": {
            "name": "springroll.easeljs.FlashSpriteSheetTask",
            "shortname": "FlashSpriteSheetTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/FlashSpriteSheetTask.js",
            "line": 10,
            "description": "Created a createjs Spritesheet from the Flash export",
            "extends": "springroll.LoadTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "The path to the spritesheet",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Asset type must be \"easeljs\"",
                            "type": "String"
                        },
                        {
                            "name": "format",
                            "description": "Asset format must be \"createjs.SpriteSheet\"",
                            "type": "String"
                        },
                        {
                            "name": "globalProperty",
                            "description": "The name of the global property",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'ss'"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "globalProperty",
                            "description": "The global window object for spritesheets",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'ss'"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.SpriteSheetTask": {
            "name": "springroll.easeljs.SpriteSheetTask",
            "shortname": "SpriteSheetTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/SpriteSheetTask.js",
            "line": 11,
            "description": "Create a createjs.SpriteSheet object, see SpriteSheet for more information",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "images",
                            "description": "The source images",
                            "type": "Array"
                        },
                        {
                            "name": "frames",
                            "description": "The SpriteSheet source frame data",
                            "type": "Array"
                        },
                        {
                            "name": "type",
                            "description": "Asset type must be \"easeljs\"",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "globalProperty",
                            "description": "The global window object for spritesheets",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'ss'"
                        }
                    ]
                }
            ]
        },
        "springroll.easeljs.TextureAtlas": {
            "name": "springroll.easeljs.TextureAtlas",
            "shortname": "TextureAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 8,
            "description": "Handles a spritesheet. File extensions and folder paths are dropped from frame names upon\nloading.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "The image that all textures pull from. This can\n                                         also be an array of images, if the TextureAtlas\n                                         should be built from several spritesheets.",
                    "type": "Image|HTMLCanvasElement|Array"
                },
                {
                    "name": "spritesheetData",
                    "description": "The JSON object describing the frames in the atlas. This\n                                  is expected to fit the JSON Hash format as exported from\n                                  TexturePacker. This can also be an array of data\n                                  objects, if the TextureAtlas should be built from\n                                  several spritesheets.",
                    "type": "Object|Array"
                }
            ]
        },
        "springroll.easeljs.Texture": {
            "name": "springroll.easeljs.Texture",
            "shortname": "Texture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 182,
            "description": "A Texture - a specific portion of an image that can then be drawn by a Bitmap.\nThis class is hidden within TextureAtlas, and can't be manually created."
        },
        "springroll.easeljs.TextureAtlasTask": {
            "name": "springroll.easeljs.TextureAtlasTask",
            "shortname": "TextureAtlasTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 12,
            "description": "Internal class for loading a texture atlas, creating a 'springroll.easeljs.TextureAtlas'.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "The asset type must be \"easeljs\".",
                            "type": "String"
                        },
                        {
                            "name": "atlas",
                            "description": "The TextureAtlas source data",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "image",
                            "description": "The atlas image path",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "createjs.Container": {
            "name": "createjs.Container",
            "shortname": "Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "createjs",
            "file": "src/displays/easeljs/mixins/Container.js",
            "line": 12,
            "description": "Mixins for the CreateJS Container class"
        },
        "createjs.MovieClip": {
            "name": "createjs.MovieClip",
            "shortname": "MovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "createjs",
            "file": "src/displays/easeljs/mixins/MovieClip.js",
            "line": 15,
            "description": "Mixins for the CreateJS MovieClip class"
        },
        "createjs.Point": {
            "name": "createjs.Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "createjs",
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 8,
            "description": "Mixins for the CreateJS Point class, which include methods\nfor calculating the dot product, length, distance, normalize, etc."
        },
        "createjs.SpriteSheet": {
            "name": "createjs.SpriteSheet",
            "shortname": "SpriteSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "createjs",
            "file": "src/displays/easeljs/mixins/SpriteSheet.js",
            "line": 12,
            "description": "Mixins for the CreateJS SpriteSheet class"
        },
        "springroll.easeljs.Button": {
            "name": "springroll.easeljs.Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 20,
            "description": "A Multipurpose button class. It is designed to have one image, and an optional text label.\nThe button can be a normal button or a selectable button.\nThe button functions similarly with both EaselJS and PIXI, but slightly differently in\ninitialization and callbacks. Add event listeners for click and mouseover to know about\nbutton clicks and mouse overs, respectively.",
            "extends": "createjs.Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageSettings",
                    "description": "Information about the art to be used\n                                                    for button states, as well as if the\n                                                    button is selectable or not. If this\n                                                    is an Image or Canvas element, then\n                                                    the button assumes that the image is\n                                                    full width and 3 images tall, in the\n                                                    order (top to bottom) up, over, down.\n                                                    If so, then the properties of\n                                                    imageSettings are ignored.",
                    "type": "Object|Image|HTMLCanvasElement",
                    "optional": true,
                    "props": [
                        {
                            "name": "image",
                            "description": "The image to use for all of the button\n                                                   states.",
                            "type": "Image|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "priority",
                            "description": "The state priority order. If omitted, defaults to\n                                         <code>&#91;\"disabled\", \"down\", \"over\",\n                                         \"up\"&#93;</code>. Previous versions of Button\n                                         used a hard coded order:\n                                         <code>&#91;\"highlighted\", \"disabled\", \"down\",\n                                         \"over\", \"selected\", \"up\"&#93;</code>.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "up",
                            "description": "The visual information about the up state.",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "src",
                                    "description": "The sourceRect for the state within the\n                                               image.",
                                    "type": "createjs.Rectangle",
                                    "optional": true
                                },
                                {
                                    "name": "trim",
                                    "description": "Trim data about the state, where x &\n                                                     y are how many pixels were trimmed\n                                                     off the left and right, and height &\n                                                     width are the untrimmed size of the\n                                                     button.",
                                    "type": "createjs.Rectangle",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                          Properties on this parameter override data in\n                                          the label parameter for this button state only.\n                                          All values except \"text\" from the label\n                                          parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "over",
                            "description": "The visual information about the over state. If\n                                      omitted, uses the up state.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "src",
                                    "description": "The sourceRect for the state within the\n                                                 image.",
                                    "type": "createjs.Rectangle",
                                    "optional": true
                                },
                                {
                                    "name": "trim",
                                    "description": "Trim data about the state, where x\n                                                       & y are how many pixels were\n                                                       trimmed off the left and right, and\n                                                       height & width are the untrimmed\n                                                       size of the button.",
                                    "type": "createjs.Rectangle",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                            Properties on this parameter override data in\n                                            the label parameter for this button state\n                                            only. All values except \"text\" from the label\n                                            parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "down",
                            "description": "The visual information about the down state. If\n                                      omitted, uses the up state.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "src",
                                    "description": "The sourceRect for the state within the\n                                                 image.",
                                    "type": "createjs.Rectangle",
                                    "optional": true
                                },
                                {
                                    "name": "trim",
                                    "description": "Trim data about the state, where x\n                                                       & y are how many pixels were\n                                                       trimmed off the left and right, and\n                                                       height & width are the untrimmed\n                                                       size of the button.",
                                    "type": "createjs.Rectangle",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                            Properties on this parameter override data in\n                                            the label parameter for this button state\n                                            only. All values except \"text\" from the label\n                                            parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "disabled",
                            "description": "The visual information about the disabled state.\n                                          If omitted, uses the up state.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "src",
                                    "description": "The sourceRect for the state within\n                                                     the image.",
                                    "type": "createjs.Rectangle",
                                    "optional": true
                                },
                                {
                                    "name": "trim",
                                    "description": "Trim data about the state,\n                                                           where x & y are how many pixels\n                                                           were trimmed off the left and\n                                                           right, and height & width are\n                                                           the untrimmed size of the\n                                                           button.",
                                    "type": "createjs.Rectangle",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                                Properties on this parameter override data\n                                                in the label parameter for this button\n                                                state only. All values except \"text\" from\n                                                the label parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "<yourCustomState>",
                            "description": "The visual information about a custom\n                                                   state found in imageSettings.priority.\n                                                   Any state added this way has a property\n                                                   of the same name added to the button.\n                                                   Examples of previous states that have\n                                                   been moved to this system are\n                                                   \"selected\" and \"highlighted\".",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "src",
                                    "description": "The sourceRect for the state\n                                                              within the image.",
                                    "type": "createjs.Rectangle",
                                    "optional": true
                                },
                                {
                                    "name": "trim",
                                    "description": "Trim data about the\n                                                                    state, where x & y are\n                                                                    how many pixels were\n                                                                    trimmed off the left\n                                                                    and right, and height\n                                                                    & width are the\n                                                                    untrimmed size of the\n                                                                    button.",
                                    "type": "createjs.Rectangle",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to\n                                                         this state. Properties on this\n                                                         parameter override data in the\n                                                         label parameter for this button\n                                                         state only. All values except\n                                                         \"text\" from the label parameter\n                                                         may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "origin",
                            "description": "An optional offset for all button\n                                                graphics, in case you want button\n                                                positioning to not include a highlight\n                                                glow, or any other reason you would want\n                                                to offset the button art and label.",
                            "type": "createjs.Point",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                },
                {
                    "name": "label",
                    "description": "Information about the text label on the button. Omitting this\n                         makes the button not use a label.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null",
                    "props": [
                        {
                            "name": "text",
                            "description": "The text to display on the label.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "font",
                            "description": "The font name and size to use on the label, as createjs.Text\n                         expects.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color of the text to use on the label, as createjs.Text\n                          expects.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "textBaseline",
                            "description": "The baseline for the label text, as\n                                          createjs.Text expects.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"middle\""
                        },
                        {
                            "name": "stroke",
                            "description": "The stroke to use for the label text, if desired, as\n                                createjs.Text (springroll fork only) expects.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "shadow",
                            "description": "A shadow object to apply to the label text.",
                            "type": "createjs.Shadow",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "x",
                            "description": "An x position to place the label text at relative to\n                                      the button. If omitted, \"center\" is used, which\n                                      attempts to horizontally center the label on the\n                                      button.",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "\"center\""
                        },
                        {
                            "name": "y",
                            "description": "A y position to place the label text at relative to\n                                      the button. If omitted, \"center\" is used, which\n                                      attempts to vertically center the label on the\n                                      button. This may be unreliable - see documentation\n                                      for createjs.Text.getMeasuredLineHeight().",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "\"center\""
                        }
                    ]
                },
                {
                    "name": "enabled",
                    "description": "Whether or not the button is initially enabled.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ]
        },
        "springroll.easeljs.DragData": {
            "name": "springroll.easeljs.DragData",
            "shortname": "DragData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/ui/DragData.js",
            "line": 8,
            "description": "Data class for the Dragmanager",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "The object to drag",
                    "type": "*"
                }
            ]
        },
        "springroll.easeljs.DragManager": {
            "name": "springroll.easeljs.DragManager",
            "shortname": "DragManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 13,
            "description": "Drag manager is responsible for handling the dragging of stage elements.\nSupports click-n-stick (click to start, move mouse, click to release) and click-n-drag (standard dragging) functionality.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "display",
                    "description": "The display that this DragManager is handling objects on.\n                              Optionally, this parameter an be omitted and the\n                              Application's default display will be used.",
                    "type": "PixiDisplay"
                },
                {
                    "name": "startCallback",
                    "description": "The callback when when starting",
                    "type": "Function"
                },
                {
                    "name": "endCallback",
                    "description": "The callback when ending",
                    "type": "Function"
                }
            ]
        },
        "springroll.easeljs.SoundButton": {
            "name": "springroll.easeljs.SoundButton",
            "shortname": "SoundButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 11,
            "description": "A button with audio events for click and over mouse events",
            "extends": "springroll.easeljs.Button",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageSettings",
                    "description": "The loaded image element, see springroll.easeljs.Button constructor",
                    "type": "DOMElement|object"
                },
                {
                    "name": "label",
                    "description": "See springroll.easeljs.Button constructor",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "enabled",
                    "description": "If the button should be enabled by default",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "clickAlias",
                    "description": "The button click audio alias",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"ButtonClick\""
                },
                {
                    "name": "overAlias",
                    "description": "The button rollover audio alias",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"ButtonRollover\""
                }
            ]
        },
        "springroll.easeljs.BitmapUtils": {
            "name": "springroll.easeljs.BitmapUtils",
            "shortname": "BitmapUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/utils/BitmapUtils.js",
            "line": 12,
            "description": "Designed to provide utility related to Bitmaps."
        },
        "springroll.easeljs.DisplayAdapter": {
            "name": "springroll.easeljs.DisplayAdapter",
            "shortname": "DisplayAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs",
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 8,
            "description": "Provide a normalized way to get size, position, scale values\nas well as provide reference for different geometry classes."
        },
        "springroll.native.Circle": {
            "name": "springroll.native.Circle",
            "shortname": "Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/geom/Circle.js",
            "line": 8,
            "description": "The Circle object can be used to specify a hit area for displayobjects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the upper-left corner of the framing rectangle of this circle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the upper-left corner of the framing rectangle of this circle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle",
                    "type": "Number"
                }
            ]
        },
        "springroll.native.Ellipse": {
            "name": "springroll.native.Ellipse",
            "shortname": "Ellipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 8,
            "description": "The Ellipse object can be used to specify a hit area for displayobjects",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the upper-left corner of the framing rectangle of this ellipse",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the upper-left corner of the framing rectangle of this ellipse",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The overall width of this ellipse",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The overall height of this ellipse",
                    "type": "Number"
                }
            ]
        },
        "springroll.native.Point": {
            "name": "springroll.native.Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/geom/Point.js",
            "line": 8,
            "description": "The Point object represents a location in a two-dimensional coordinate system, where x represents the horizontal axis and y represents the vertical axis.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "position of the point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "position of the point",
                    "type": "Number"
                }
            ]
        },
        "springroll.native.Polygon": {
            "name": "springroll.native.Polygon",
            "shortname": "Polygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/geom/Polygon.js",
            "line": 8,
            "is_constructor": 1,
            "params": [
                {
                    "name": "points",
                    "description": "This can be an array of Points that form the polygon,\n    a flat array of numbers that will be interpreted as [x,y, x,y, ...], or the arguments passed can be\n    all the points of the polygon e.g. `new Polygon(new Point(), new Point(), ...)`, or the\n    arguments passed can be flat x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are\n    Numbers.",
                    "type": "Array<Point>|Array<Number>|Point...|Number...",
                    "multiple": true
                }
            ]
        },
        "springroll.native.Rectangle": {
            "name": "springroll.native.Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 8,
            "description": "the Rectangle object is an area defined by its position, as indicated by its top-left corner point (x, y) and by its width and its height.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the upper-left corner of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the upper-left corner of the rectangle",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The overall width of this rectangle",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The overall height of this rectangle",
                    "type": "Number"
                }
            ]
        },
        "springroll.native.DisplayAdapter": {
            "name": "springroll.native.DisplayAdapter",
            "shortname": "DisplayAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 9,
            "description": "Provide a normalized way to get size, position, scale values\nas well as provide reference for different geometry classes."
        },
        "springroll.native.NativeDisplay": {
            "name": "springroll.native.NativeDisplay",
            "shortname": "NativeDisplay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Native Display",
            "namespace": "springroll.native",
            "file": "src/displays/native/NativeDisplay.js",
            "line": 11,
            "description": "NativeDisplay is a display plugin for doing native rendering. This represents\nthe bare minimum needed by the Application to render.",
            "extends": "springroll.AbstractDisplay",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "The id of the canvas element on the page to draw to.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The setup data for the display.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "contextId",
                            "description": "Valid options are \"2d\" and \"webgl\"",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"2d\""
                        }
                    ]
                }
            ]
        },
        "springroll.pixi.AdvancedMovieClip": {
            "name": "springroll.pixi.AdvancedMovieClip",
            "shortname": "AdvancedMovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Animation",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 14,
            "description": "A class similar to PIXI.extras.MovieClip, but made to play animations _exclusively_ using\nthe Animator, with data exported by the BitmapMovieClip exporter.\n\nFormat for AdvancedMovieClip data (the same as BitmapMovieClip):\n\n\t{\n\t\tfps:30,\n\t\tlabels:\n\t\t{\n\t\t\tanimStart:0,\n\t\t\tanimStart_loop:15\n\t\t},\n\t\torigin:{ x: 20, y:30 },\n\t\tframes:\n\t\t[\n\t\t\t{\n\t\t\t\tname:\"myAnim#\",\n\t\t\t\tmin:1,\n\t\t\t\tmax:20,\n\t\t\t\tdigits:4\n\t\t\t}\n\t\t],\n\t\tscale:1\n\t}\n\nThe example object describes a 30 fps animation that is 20 frames long, and was originally\nmyAnim0001.png->myAnim0020.png, with frame labels on the first and 16th frames. 'digits' is\noptional, and defaults to 4.",
            "extends": "PIXI.Sprite",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Initialization data",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "fps",
                            "description": "Framerate to play the movieclip at. Omitting this will use the\n                        current framerate.",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "labels",
                            "description": "A dictionary of the labels in the movieclip to assist in\n                              playing animations.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "The origin of the movieclip.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "{x:0,y:0}"
                        },
                        {
                            "name": "frames",
                            "description": "An array of frame sequences to pull from the texture atlas.",
                            "type": "Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The name to use for the frame sequence. This should\n                                   include a \"#\" to be replaced with the image number.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "min",
                                    "description": "The first frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "max",
                                    "description": "The last frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "digits",
                                    "description": "The maximum number of digits in the names of the frames,\n                                    e.g. myAnim0001 has 4 digits.",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "4"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "description": "The scale at which the art was exported, e.g. a scale of 1.4\n                               means the art was increased in size to 140% before exporting\n                               and should be scaled back down before drawing to the screen.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                },
                {
                    "name": "atlas",
                    "description": "A TextureAtlas to pull frames from. If omitted,\n                                              frames are pulled from Pixi's global texture\n                                              cache.",
                    "type": "springroll.pixi.TextureAtlas",
                    "optional": true
                }
            ]
        },
        "springroll.pixi.AdvancedMovieClipInstance": {
            "name": "springroll.pixi.AdvancedMovieClipInstance",
            "shortname": "AdvancedMovieClipInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Animation",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 12,
            "description": "The plugin for working with AdvancedMovieClips and animator",
            "extends": "springroll.AnimatorInstance",
            "access": "private",
            "tagname": ""
        },
        "springroll.pixi.AdvancedMovieClipTask": {
            "name": "springroll.pixi.AdvancedMovieClipTask",
            "shortname": "AdvancedMovieClipTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Animation",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/animation/AdvancedMovieClipTask.js",
            "line": 11,
            "description": "Internal class for loading and instantiating an AdvancedMovieClip.",
            "extends": "springroll.TextureAtlasTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "This must be \"pixi\" to signify that this asset should be\n                           handled as an AdvancedMovieClip, instead of the otherwise\n                           identical BitmapMovieClip.",
                            "type": "String"
                        },
                        {
                            "name": "anim",
                            "description": "Path to the JSON configuration for AdvancedMovieClip",
                            "type": "String"
                        },
                        {
                            "name": "atlas",
                            "description": "The TextureAtlas source data",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "image",
                            "description": "The atlas image path",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.pixi.BitmapFontTask": {
            "name": "springroll.pixi.BitmapFontTask",
            "shortname": "BitmapFontTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/display/BitmapFontTask.js",
            "line": 16,
            "description": "Internal class for loading a bitmap font for Pixi.",
            "extends": "springroll.pixi.TextureTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "Must be \"pixi\" to signify that this asset should be parsed\n                           specifically for Pixi.",
                            "type": "String"
                        },
                        {
                            "name": "font",
                            "description": "The BitmapFont source data",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "image",
                            "description": "The atlas image path",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.pixi.TextureAtlas": {
            "name": "springroll.pixi.TextureAtlas",
            "shortname": "TextureAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/display/TextureAtlas.js",
            "line": 12,
            "description": "Handles a spritesheet. File extensions and folder paths are dropped from frame names upon\nloading.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The PIXI Texture that all sub-textures pull from.",
                    "type": "PIXI.Texture"
                },
                {
                    "name": "data",
                    "description": "The JSON object describing the frames in the atlas. This\n                     is expected to fit the JSON Hash format as exported from\n                     TexturePacker.",
                    "type": "Object"
                },
                {
                    "name": "useGlobalCache",
                    "description": "If sub-textures should be placed in Pixi's global\n                                  texture cache.",
                    "type": "Boolean",
                    "optional": true
                }
            ]
        },
        "springroll.pixi.TextureAtlasTask": {
            "name": "springroll.pixi.TextureAtlasTask",
            "shortname": "TextureAtlasTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/display/TextureAtlasTask.js",
            "line": 13,
            "description": "Internal class for loading a texture atlas for Pixi.",
            "extends": "springroll.pixi.TextureTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "Must be \"pixi\" to signify that this asset should be parsed\n                           specifically for Pixi.",
                            "type": "String"
                        },
                        {
                            "name": "atlas",
                            "description": "The TextureAtlas source data",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "image",
                            "description": "The atlas image path",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha image path, if not using image property",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.pixi.TextureTask": {
            "name": "springroll.pixi.TextureTask",
            "shortname": "TextureTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 16,
            "description": "TextureTask loads an image and sets it up for Pixi to use as a PIXI.Texture.",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset.type",
                    "description": "Must be \"pixi\" to signify that this asset should be parsed\n                           specifically for Pixi.",
                    "type": "String"
                },
                {
                    "name": "asset.image",
                    "description": "The texture image path.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.color",
                    "description": "The color image path, if not using image property.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.alpha",
                    "description": "The alpha image path, if not using image property.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.cache",
                    "description": "If we should cache the result - caching results in\n                                     caching in the global Pixi texture cache as well as\n                                     Application's asset cache.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "asset.id",
                    "description": "The id of the task.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.complete",
                    "description": "The callback to call when the load is completed.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "asset.sizes",
                    "description": "Define if certain sizes are not supported",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                }
            ]
        },
        "PIXI.BitmapText": {
            "name": "PIXI.BitmapText",
            "shortname": "BitmapText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "PIXI",
            "file": "src/displays/pixi/mixins/BitmapText.js",
            "line": 8,
            "description": "Mixins for the PIXI BitmapText class"
        },
        "PIXI.Container": {
            "name": "PIXI.Container",
            "shortname": "Container",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "PIXI",
            "file": "src/displays/pixi/mixins/Container.js",
            "line": 8,
            "description": "Mixins for the PIXI Container class"
        },
        "PIXI.InteractionManager": {
            "name": "PIXI.InteractionManager",
            "shortname": "InteractionManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "PIXI",
            "file": "src/displays/pixi/mixins/InteractionManager.js",
            "line": 8,
            "description": "Mixins for the PIXI InteractionManager class"
        },
        "PIXI.Point": {
            "name": "PIXI.Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "PIXI",
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 8,
            "description": "Mixins for the PIXI Point class, which include methods\nfor calculating the dot product, length, distance, normalize, etc."
        },
        "PIXI.Sector": {
            "name": "PIXI.Sector",
            "shortname": "Sector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "PIXI",
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 10,
            "description": "The Sector object can be used to specify a hit area for display objects.\nIt represents a sector of a circle, with angles expressed in degrees going\ncounterclockwise.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the center of the circle this sector is on",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the center of the circle this sector is on",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "The starting angle of the sector, in degrees",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "The ending angle of the sector, in degrees",
                    "type": "Number"
                }
            ]
        },
        "PIXI.Text": {
            "name": "PIXI.Text",
            "shortname": "Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "PIXI",
            "file": "src/displays/pixi/mixins/Text.js",
            "line": 8,
            "description": "Mixins for the PIXI Text class"
        },
        "springroll.pixi.ParallelSpineData": {
            "name": "springroll.pixi.ParallelSpineData",
            "shortname": "ParallelSpineData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Spine",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/spine/ParallelSpineData.js",
            "line": 8,
            "description": "Class for assisting in creating an array of Spine animations to play at the same time\non one skeleton through Animator. Concurrent animations will play until one non-looping\nanimation ends.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "anim",
                    "description": "The name of the animation on the skeleton.",
                    "type": "String"
                },
                {
                    "name": "loop",
                    "description": "If this animation should loop.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "speed",
                    "description": "The speed at which this animation should be played.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ]
        },
        "springroll.pixi.SpineAnimTask": {
            "name": "springroll.pixi.SpineAnimTask",
            "shortname": "SpineAnimTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Spine",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 18,
            "description": "SpineAnimTask loads a spine animation and the texture atlas(es) that it needs.",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset.spineAnim",
                    "description": "The Spine skeleton data image path.",
                    "type": "String"
                },
                {
                    "name": "asset.atlas",
                    "description": "The atlas for the skeleton. This can be a Pixi TextureAtlas\n                                 asset or a Spine specific atlas.",
                    "type": "Object"
                },
                {
                    "name": "asset.atlas.type",
                    "description": "Must be \"pixi\" to ensure that the atlas is loaded for Pixi.",
                    "type": "String"
                },
                {
                    "name": "asset.atlas.atlas",
                    "description": "(TextureAtlas) The source data path for a TextureAtlas.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.atlas.image",
                    "description": "(TextureAtlas) A image path for a TextureAtlas",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.atlas.color",
                    "description": "(TextureAtlas) The color image path, if not using image\n                                    property",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.atlas.alpha",
                    "description": "(TextureAtlas) The alpha image path, if not using image\n                                    property",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.atlas.spineAtlas",
                    "description": "(Spine Atlas) The source data path for an atlas\n                                         exported from Spine, with a .txt or .atlas\n                                         extension.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.atlas.images",
                    "description": "(Spine Atlas) A set of image paths for the spineAtlas\n                                    data file to pull from.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "asset.extraImages",
                    "description": "A dictionary of extra Texture assets to add to the atlas.\n                                    This should be useful if you have individual images not\n                                    added to a TextureAtlas.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "asset.cache",
                    "description": "If we should cache the result - caching results in\n                                     caching in the global Pixi texture cache as well as\n                                     Application's asset cache.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "asset.id",
                    "description": "The id of the task.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "asset.complete",
                    "description": "The callback to call when the load is completed.",
                    "type": "Function",
                    "optional": true
                }
            ]
        },
        "springroll.pixi.SpineAtlas": {
            "name": "springroll.pixi.SpineAtlas",
            "shortname": "SpineAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Spine",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/spine/SpineAtlas.js",
            "line": 15,
            "description": "Handles an atlas exported from Spine. This class is created during Spine loading, and\nshould probably never be used on its own. Code in this class is pulled from\nhttps://github.com/pixijs/pixi-spine/blob/master/src/SpineRuntime/Atlas.js",
            "is_constructor": 1,
            "params": [
                {
                    "name": "atlasText",
                    "description": "The Spine Atlas data",
                    "type": "String"
                },
                {
                    "name": "textureDictionary",
                    "description": "All of the images required by the atlas.",
                    "type": "Object"
                }
            ]
        },
        "springroll.pixi.SpineAtlasTask": {
            "name": "springroll.pixi.SpineAtlasTask",
            "shortname": "SpineAtlasTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Spine",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/spine/SpineAtlasTask.js",
            "line": 14,
            "description": "Internal class for loading a texture atlas in the format exported by Spine.",
            "extends": "springroll.pixi.TextureTask",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "Must be \"pixi\" to signify that this asset should be parsed\n                           specifically for Pixi.",
                            "type": "String"
                        },
                        {
                            "name": "spineAtlas",
                            "description": "The Spine Atlas source data url - a .txt or .atlas file.",
                            "type": "String"
                        },
                        {
                            "name": "images",
                            "description": "A number of Texture assets, as referenced by the Atlas data.\n                             The property used to index each asset in asset.images should be\n                             the file name used in the Atlas data.",
                            "type": "Object"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.pixi.SpineInstance": {
            "name": "springroll.pixi.SpineInstance",
            "shortname": "SpineInstance",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Spine",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 15,
            "description": "The plugin for working with Spine skeletons and animator",
            "extends": "springroll.AnimatorInstance",
            "access": "private",
            "tagname": ""
        },
        "springroll.pixi.Button": {
            "name": "springroll.pixi.Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI UI",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/ui/Button.js",
            "line": 17,
            "description": "A Multipurpose button class. It is designed to have one image, and an optional text label.\nThe button can be a normal button or a selectable button.\nThe button functions similarly with both EaselJS and PIXI, but slightly differently in\ninitialization and callbacks.\nUse the \"buttonPress\" and \"buttonOver\" events to know about button clicks and mouse overs,\nrespectively.",
            "extends": "PIXI.Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "imageSettings",
                    "description": "Information about the art to be used for button states, as\n                              well as if the button is selectable or not.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "up",
                            "description": "The texture for the up state of the button.\n                                                This can be either the texture itself, or an\n                                                object with 'tex' and 'label' properties.",
                            "type": "Object|PIXI.Texture",
                            "optional": true,
                            "props": [
                                {
                                    "name": "tex",
                                    "description": "The texture to use for the up state. If\n                                                    this is a string, Texture.fromImage()\n                                                    will be used.",
                                    "type": "PIXI.Texture|String",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                              Properties on this parameter override data in\n                                              the label parameter for this button state\n                                              only. All values except \"text\" and \"type\" from\n                                              the label parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "over",
                            "description": "The texture for the over state of the\n                                                       button. If omitted, uses the up\n                                                       state.",
                            "type": "Object|PIXI.Texture",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "tex",
                                    "description": "The texture to use for the over state.\n                                                      If this is a string,\n                                                      Texture.fromImage() will be used.",
                                    "type": "PIXI.Texture|String",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                                Properties on this parameter override data\n                                                in the label parameter for this button state\n                                                only. All values except \"text\" and \"type\"\n                                                from the label parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "down",
                            "description": "The texture for the down state of the\n                                                       button. If omitted, uses the up\n                                                       state.",
                            "type": "Object|PIXI.Texture",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "tex",
                                    "description": "The texture to use for the down state.\n                                                      If this is a string,\n                                                      Texture.fromImage() will be used.",
                                    "type": "PIXI.Texture|String",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this state.\n                                                Properties on this parameter override data\n                                                in the label parameter for this button state\n                                                only. All values except \"text\" and \"type\"\n                                                from the label parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "disabled",
                            "description": "The texture for the disabled\n                                                           state of the button. If omitted,\n                                                           uses the up state.",
                            "type": "Object|PIXI.Texture",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "tex",
                                    "description": "The texture to use for the disabled\n                                                          state. If this is a string,\n                                                          Texture.fromImage() will be used.",
                                    "type": "PIXI.Texture|String",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to this\n                                                    state. Properties on this parameter\n                                                    override data in the label parameter for\n                                                    this button state only. All values\n                                                    except \"text\" and \"type\" from the label\n                                                    parameter may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "<yourCustomState>",
                            "description": "The visual information\n                                                                    about a custom state\n                                                                    found in\n                                                                    imageSettings.priority.\n                                                                    Any state added this way\n                                                                    has a property of the\n                                                                    same name added to the\n                                                                    button. Examples of\n                                                                    previous states that\n                                                                    have been\n                                                                    moved to this system are\n                                                                    \"selected\" and\n                                                                    \"highlighted\".",
                            "type": "Object|PIXI.Texture",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "tex",
                                    "description": "The texture to use for\n                                                                   your custom state. If\n                                                                   this is a string,\n                                                                   Texture.fromImage()\n                                                                   will be used.",
                                    "type": "PIXI.Texture|String",
                                    "optional": true
                                },
                                {
                                    "name": "label",
                                    "description": "Label information specific to\n                                                             this state. Properties on this\n                                                             parameter override data in the\n                                                             label parameter for this button\n                                                             state only. All values except\n                                                             \"text\" from the label parameter\n                                                             may be overridden.",
                                    "type": "Object",
                                    "optional": true,
                                    "optdefault": "null"
                                }
                            ]
                        },
                        {
                            "name": "origin",
                            "description": "An optional offset for all button graphics,\n                                                in case you want button positioning to not\n                                                include a highlight glow, or any other\n                                                reason you would want to offset the button\n                                                art and label.",
                            "type": "PIXI.Point",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "scale",
                            "description": "The scale to use for the textures. This allows\n                                        smaller art assets than the designed size to be\n                                        used.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                },
                {
                    "name": "[imageSettings.priority=null] The state priority order. If omitted, defaults\n                                             to [\"disabled\", \"down\", \"over\", \"up\"]. Previous\n                                             versions of Button used a hard coded order:\n                                             [\"highlighted\", \"disabled\", \"down\", \"over\",\n                                             \"selected\", \"up\"]",
                    "description": ".",
                    "type": "Array"
                },
                {
                    "name": "label",
                    "description": "Information about the text label on the button. Omitting this\n                             makes the button not use a label.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null",
                    "props": [
                        {
                            "name": "type",
                            "description": "If label.type is \"bitmap\", then a PIXI.extras.BitmapText text\n                             is created, otherwise a PIXI.Text is created for the label.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "text",
                            "description": "The text to display on the label.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "style",
                            "description": "The style of the text field, in the format that\n                              PIXI.extras.BitmapText and PIXI.Text expect.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "x",
                            "description": "An x position to place the label text at relative\n                                          to the button.",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "\"center\""
                        },
                        {
                            "name": "y",
                            "description": "A y position to place the label text at relative\n                                          to the button. If omitted, \"center\" is used, which\n                                          attempts to vertically center the label on the\n                                          button.",
                            "type": "String|Number",
                            "optional": true,
                            "optdefault": "\"center\""
                        }
                    ]
                },
                {
                    "name": "enabled",
                    "description": "Whether or not the button is initially enabled.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ]
        },
        "springroll.pixi.DragData": {
            "name": "springroll.pixi.DragData",
            "shortname": "DragData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI UI",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/ui/DragData.js",
            "line": 8,
            "description": "The data for the drag manager",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "The object to drag",
                    "type": "*"
                }
            ]
        },
        "springroll.pixi.DragManager": {
            "name": "springroll.pixi.DragManager",
            "shortname": "DragManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI UI",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 14,
            "description": "Drag manager is responsible for handling the dragging of stage elements\nsupports click-n-stick and click-n-drag functionality.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "display",
                    "description": "The display that this DragManager is handling objects on.\n                              Optionally, this parameter can be omitted and the Application's\n                              default display will be used.",
                    "type": "PixiDisplay"
                },
                {
                    "name": "startCallback",
                    "description": "The callback when when starting",
                    "type": "Function"
                },
                {
                    "name": "endCallback",
                    "description": "The callback when ending",
                    "type": "Function"
                }
            ]
        },
        "springroll.pixi.DisplayAdapter": {
            "name": "springroll.pixi.DisplayAdapter",
            "shortname": "DisplayAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PIXI Display",
            "namespace": "springroll.pixi",
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 8,
            "description": "Provide a normalized way to get size, position, scale values\nas well as provide reference for different geometry classes."
        },
        "springroll.AbstractDisplay": {
            "name": "springroll.AbstractDisplay",
            "shortname": "AbstractDisplay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/displays/AbstractDisplay.js",
            "line": 9,
            "description": "The display provides the base properties for all custom display. A display\nis a specialized view for the application. As the name suggests, this class\nshould not be instanciated directly.",
            "extends": "springroll.EventDispatcher",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the canvas element on the page to draw to.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The setup data for the display.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "contextId",
                            "description": "Valid options are \"2d\" and \"webgl\"",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"2d\""
                        }
                    ]
                }
            ]
        },
        "springroll.Property": {
            "name": "springroll.Property",
            "shortname": "Property",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/events/PropertyDispatcher.js",
            "line": 150,
            "description": "Internal class for managing the property",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the property",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The initial value",
                    "type": "*",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "readOnly",
                    "description": "If property is read-only",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ]
        },
        "springroll.AbstractHint": {
            "name": "springroll.AbstractHint",
            "shortname": "AbstractHint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hints",
            "namespace": "springroll",
            "file": "src/hints/AbstractHint.js",
            "line": 8,
            "description": "Abstract base class for hints used by HintPlayer",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "hints",
                    "description": "The instance of the hints",
                    "type": "springroll.HintsPlayer"
                },
                {
                    "name": "done",
                    "description": "called on hint complete",
                    "type": "Function"
                }
            ]
        },
        "springroll.AnimatorHint": {
            "name": "springroll.AnimatorHint",
            "shortname": "AnimatorHint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hints",
            "namespace": "springroll",
            "file": "src/hints/AnimatorHint.js",
            "line": 11,
            "description": "Handle the hinting played with the Animator, usually\na lip-synced animation.",
            "extends": "springroll.AbstractHint",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "hints",
                    "description": "The instance of the hints",
                    "type": "springroll.HintsPlayer"
                },
                {
                    "name": "done",
                    "description": "called on hint complete",
                    "type": "Function"
                },
                {
                    "name": "instance",
                    "description": "The media instance to play",
                    "type": "createjs.MovieClip|*"
                },
                {
                    "name": "events",
                    "description": "The event or events to play",
                    "type": "String|object|Array"
                },
                {
                    "name": "onComplete",
                    "description": "Callback when finished",
                    "type": "Function"
                },
                {
                    "name": "onCancel",
                    "description": "If the call is cancelled, true set onComplete\n     to also be the cancelled callback",
                    "type": "Function|boolean"
                }
            ]
        },
        "springroll.FunctionHint": {
            "name": "springroll.FunctionHint",
            "shortname": "FunctionHint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hints",
            "namespace": "springroll",
            "file": "src/hints/FunctionHint.js",
            "line": 11,
            "description": "Generic function to act as a hint",
            "extends": "springroll.AbstractHint",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "hints",
                    "description": "The instance of the hints",
                    "type": "springroll.HintsPlayer"
                },
                {
                    "name": "done",
                    "description": "called on hint done",
                    "type": "Function"
                },
                {
                    "name": "onStart",
                    "description": "Function to call\n                          should accept 2 arguments (callbacks: \n                          onComplete and onCancelled\n                          and call them when complete or cancelled",
                    "type": "Function"
                }
            ]
        },
        "springroll.GroupHint": {
            "name": "springroll.GroupHint",
            "shortname": "GroupHint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hints",
            "namespace": "springroll",
            "file": "src/hints/GroupHint.js",
            "line": 14,
            "description": "Class to create tiered hinting or randomized hinting.\n this.app.hints.group()\n \t.vo('Something', onCompleted)\n \t.vo('Another', onComplete)\n \t.addTier()\n \t.vo('DetailedSomething', onComplete)\n \t.vo('DetailedAnother', onComplete);",
            "access": "private",
            "tagname": "",
            "extends": "springroll.AbstractHint",
            "is_constructor": 1,
            "params": [
                {
                    "name": "hints",
                    "description": "The instance of the hints",
                    "type": "springroll.HintsPlayer"
                },
                {
                    "name": "done",
                    "description": "called on hint done",
                    "type": "Function"
                }
            ]
        },
        "springroll.HintsPlayer": {
            "name": "springroll.HintsPlayer",
            "shortname": "HintsPlayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hints",
            "namespace": "springroll",
            "file": "src/hints/HintsPlayer.js",
            "line": 15,
            "description": "Design to handle the setting and playing of hints",
            "is_constructor": 1,
            "params": [
                {
                    "name": "app",
                    "description": "Reference to the current app",
                    "type": "springroll.Application"
                }
            ]
        },
        "springroll.VOHint": {
            "name": "springroll.VOHint",
            "shortname": "VOHint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Hints",
            "namespace": "springroll",
            "file": "src/hints/VOHint.js",
            "line": 11,
            "description": "A hint designed to be played with the VOPlayer, typically\noff-screen voice-over.",
            "extends": "springroll.AbstractHint",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "hints",
                    "description": "The instance of the hints",
                    "type": "springroll.Application"
                },
                {
                    "name": "done",
                    "description": "called on hint complete",
                    "type": "Function"
                },
                {
                    "name": "idOrList",
                    "description": "",
                    "type": "String|Array"
                },
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "onCancel",
                    "description": "",
                    "type": "Function"
                }
            ]
        },
        "springroll.Languages": {
            "name": "springroll.Languages",
            "shortname": "Languages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Languages",
            "namespace": "springroll",
            "file": "src/languages/Languages.js",
            "line": 13,
            "description": "Keeps track of the user locale, by auto-detecting the browser language, allowing a user\nselection, and automatically modifying any url that runs through the CacheManager.",
            "extends": "springroll.EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "The language settings to be used.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "default",
                            "description": "The default language name to use if asked for one that is\n                            not present.",
                            "type": "String"
                        },
                        {
                            "name": "languages",
                            "description": "An array of all supported languages, with entries being\n                             locale ids (dialects allowed). Locale ids should be lower\n                             case.",
                            "type": "Array"
                        },
                        {
                            "name": "replace",
                            "description": "A string to replace in urls with the current\n                                       language.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"%LANG%\""
                        }
                    ]
                }
            ]
        },
        "springroll.ColorAlphaTask": {
            "name": "springroll.ColorAlphaTask",
            "shortname": "ColorAlphaTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/tasks/ColorAlphaTask.js",
            "line": 9,
            "description": "Internal class for loading an image that has been split into an alpha channel image and a\nRGB only color image.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "color",
                            "description": "The source path to the color image",
                            "type": "String"
                        },
                        {
                            "name": "alpha",
                            "description": "The source path to the alpha image",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.FunctionTask": {
            "name": "springroll.FunctionTask",
            "shortname": "FunctionTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/tasks/FunctionTask.js",
            "line": 9,
            "description": "Internal class for dealing with async function calls with AssetManager.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "async",
                            "description": "The required function to call",
                            "type": "Function"
                        },
                        {
                            "name": "complete",
                            "description": "The function to call when we're done",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "id",
                            "description": "The task id for mapping the result, if any",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "springroll.ListTask": {
            "name": "springroll.ListTask",
            "shortname": "ListTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/tasks/ListTask.js",
            "line": 9,
            "description": "Internal class for grouping a list of tasks into one task.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "assets",
                            "description": "The collection of assets to load",
                            "type": "Array|Object"
                        },
                        {
                            "name": "cacheAll",
                            "description": "If we should cache each item in assets.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "progress",
                            "description": "The event to call when progress is updated",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.LoadTask": {
            "name": "springroll.LoadTask",
            "shortname": "LoadTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 9,
            "description": "Internal class for dealing with async load assets through Loader.",
            "extends": "springroll.Task",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "The source",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "advanced",
                            "description": "If we should return the LoaderResult",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "data",
                            "description": "Optional data",
                            "type": "*",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "progress",
                            "description": "The event to call on load progress",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.Task": {
            "name": "springroll.Task",
            "shortname": "Task",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/tasks/Task.js",
            "line": 10,
            "description": "Internal class for dealing with async load assets",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The asset data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "id",
                            "description": "The task ID",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "complete",
                            "description": "Call when complete",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "sizes",
                            "description": "Define if certain sizes are not supported.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                },
                {
                    "name": "fallbackId",
                    "description": "The ID to set if no ID is explicitly set\n     this can be used for caching something that has no id",
                    "type": "String"
                }
            ]
        },
        "springroll.AssetCache": {
            "name": "springroll.AssetCache",
            "shortname": "AssetCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/AssetCache.js",
            "line": 9,
            "description": "A class that remembers the assets loaded by the AssetManager",
            "access": "private",
            "tagname": ""
        },
        "springroll.AssetLoad": {
            "name": "springroll.AssetLoad",
            "shortname": "AssetLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/AssetLoad.js",
            "line": 11,
            "description": "Class that represents a single multi load",
            "access": "private",
            "tagname": "",
            "extends": "springroll.EventDispatcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "manager",
                    "description": "Reference to the manager",
                    "type": "springroll.AssetManager"
                }
            ]
        },
        "springroll.AssetManager": {
            "name": "springroll.AssetManager",
            "shortname": "AssetManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/AssetManager.js",
            "line": 13,
            "description": "Handle the asynchronous loading of multiple assets.",
            "is_constructor": 1
        },
        "springroll.AssetSizes": {
            "name": "springroll.AssetSizes",
            "shortname": "AssetSizes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/AssetSizes.js",
            "line": 10,
            "description": "Manages filtering of loads to load assets sized for the current device.",
            "access": "private",
            "tagname": ""
        },
        "springroll.CacheManager": {
            "name": "springroll.CacheManager",
            "shortname": "CacheManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/CacheManager.js",
            "line": 11,
            "description": "Used for managing the browser cache of loading external elements\ncan easily load version manifest and apply it to the media loader\nsupports cache busting all media load requests\nuses the query string to bust browser versions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "app",
                    "description": "Reference to application",
                    "type": "springroll.Application"
                }
            ]
        },
        "springroll.LoaderItem": {
            "name": "springroll.LoaderItem",
            "shortname": "LoaderItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/LoaderItem.js",
            "line": 11,
            "description": "Represents a single item in the loader queue",
            "extends": "createjs.LoadQueue"
        },
        "springroll.LoaderResult": {
            "name": "springroll.LoaderResult",
            "shortname": "LoaderResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "springroll",
            "file": "src/loaders/LoaderResult.js",
            "line": 7,
            "description": "The return result of the Loader load",
            "is_constructor": 1,
            "params": [
                {
                    "name": "content",
                    "description": "The dynamic content loaded",
                    "type": "*"
                },
                {
                    "name": "url",
                    "description": "The url that was loaded",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Optional data associated with object",
                    "type": "*",
                    "optional": true
                }
            ]
        },
        "springroll.Animator": {
            "name": "springroll.Animator",
            "shortname": "Animator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "springroll",
            "file": "src/media/Animator.js",
            "line": 12,
            "description": "Animator is a static class designed to provided\nbase animation functionality, using frame labels of MovieClips",
            "is_constructor": 1,
            "params": [
                {
                    "name": "app",
                    "description": "Reference to the application",
                    "type": "springroll.Application"
                }
            ]
        },
        "springroll.AnimatorTimeline": {
            "name": "springroll.AnimatorTimeline",
            "shortname": "AnimatorTimeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Animation",
            "namespace": "springroll",
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 11,
            "description": "Animator Instance is a wrapper for different types of media\nfiles. They need to extend some basic methods."
        },
        "springroll.Captions": {
            "name": "springroll.Captions",
            "shortname": "Captions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Captions",
            "namespace": "springroll",
            "file": "src/media/Captions.js",
            "line": 12,
            "description": "A class that creates captioning for multimedia content. Captions are\ncreated from a dictionary of captions and can be played by alias.",
            "example": [
                "\n\t\tvar captionsData = {\n\t\t\t\"Alias1\": [\n\t\t\t\t{\"start\":0, \"end\":2000, \"content\":\"Ohh that looks awesome!\"}\n\t\t\t],\n\t\t\t\"Alias2\": [\n\t\t\t\t{\"start\":0, \"end\":2000, \"content\":\"Love it, absolutely love it!\"}\n\t\t\t]\n\t\t};\n\n\t\t//initialize the captions\n\t\tvar captions = new springroll.Captions();\n\t\tcaptions.data = captionsData;\n\t\tcaptions.textField = document.getElementById(\"captions\");\n\t\tcaptions.play(\"Alias1\");"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "The captions dictionary",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "textField",
                    "description": "The output text field",
                    "type": "String|DOMElement",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "selfUpdate",
                    "description": "If the captions playback should update itself",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ]
        },
        "springroll.SoundContext": {
            "name": "springroll.SoundContext",
            "shortname": "SoundContext",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sound",
            "namespace": "springroll",
            "file": "src/media/SoundContext.js",
            "line": 8,
            "description": "A private class that represents a sound context.",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "The name of the sound context.",
                    "type": "String"
                }
            ]
        },
        "springroll.SoundTask": {
            "name": "springroll.SoundTask",
            "shortname": "SoundTask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Sound",
            "namespace": "springroll",
            "file": "src/media/SoundTask.js",
            "line": 11,
            "description": "Internal task for preloading a list of sounds. When the result of the load is\ndestroyed (destroy()), then the list of sounds are unloaded.",
            "extends": "springroll.Task",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The data properties",
                    "type": "Object",
                    "props": [
                        {
                            "name": "sounds",
                            "description": "The list of Sound aliases",
                            "type": "Array"
                        },
                        {
                            "name": "cache",
                            "description": "If we should cache the result",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "id",
                            "description": "Id of asset",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "complete",
                            "description": "The event to call when done",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "window.Array": {
            "name": "window.Array",
            "shortname": "Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/mixins/Array.js",
            "line": 7,
            "description": "Add methods to Array\nSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"
        },
        "window.Math": {
            "name": "window.Math",
            "shortname": "Math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/mixins/Math.js",
            "line": 7,
            "description": "Add methods to Math"
        },
        "window.Number": {
            "name": "window.Number",
            "shortname": "Number",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/mixins/Number.js",
            "line": 7,
            "description": "Add methods to Number"
        },
        "window.Object": {
            "name": "window.Object",
            "shortname": "Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/mixins/Object.js",
            "line": 8,
            "description": "Add methods to Object"
        },
        "window.RequestUtils": {
            "name": "window.RequestUtils",
            "shortname": "RequestUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/mixins/RequestUtils.js",
            "line": 12,
            "description": "Mixins for the CreateJS RequestUtils static class"
        },
        "window.String": {
            "name": "window.String",
            "shortname": "String",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/mixins/String.js",
            "line": 7,
            "description": "Add methods to String\nSee https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"
        },
        "springroll.State": {
            "name": "springroll.State",
            "shortname": "State",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "States",
            "namespace": "springroll",
            "file": "src/states/State.js",
            "line": 13,
            "description": "Defines the base functionality for a state used by the state manager",
            "is_constructor": 1,
            "params": [
                {
                    "name": "panel",
                    "description": "The panel to associate with\n\tthis state.",
                    "type": "createjs.Container|PIXI.DisplayObjectContainer"
                },
                {
                    "name": "options",
                    "description": "The list of options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "next",
                            "description": "The next state alias or function to call when going to the next state.",
                            "type": "String|Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "previous",
                            "description": "The previous state alias to call when going to the previous state.",
                            "type": "String|Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "delayLoad",
                            "description": "The number of frames to delay the loading for cases where\n heavy object instaniation slow the game dramatically.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "preload",
                            "description": "The assets to preload before the state loads",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "[]"
                        },
                        {
                            "name": "scaling",
                            "description": "The scaling items to use with the ScaleManager.\n      If options.scaling is `\"panel\"` then the entire panel will be scaled as a title-safe\n      item. See `ScaleManager.addItems` for more information about the\n      format of the scaling objects. (UI Module only)",
                            "type": "Object|String",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ]
        },
        "springroll.StateEvent": {
            "name": "springroll.StateEvent",
            "shortname": "StateEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "States",
            "namespace": "springroll",
            "file": "src/states/StateEvent.js",
            "line": 9,
            "description": "A state-related event used by the State Manager",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "The type of event.",
                    "type": "String"
                },
                {
                    "name": "currentState",
                    "description": "The currentState of the state manager",
                    "type": "BaseState"
                },
                {
                    "name": "visibleState",
                    "description": "The current state being transitioned or changing visibility,\n                              default to currentState",
                    "type": "BaseState"
                }
            ]
        },
        "springroll.Positioner": {
            "name": "springroll.Positioner",
            "shortname": "Positioner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "springroll",
            "file": "src/ui/Positioner.js",
            "line": 8,
            "description": "Initially layouts all interface elements",
            "static": 1,
            "access": "private",
            "tagname": ""
        },
        "springroll.ScaleImage": {
            "name": "springroll.ScaleImage",
            "shortname": "ScaleImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "springroll",
            "file": "src/ui/ScaleImage.js",
            "line": 11,
            "description": "A bitmap to scale with the ScaleManager",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "image",
                    "description": "The image to resize",
                    "type": "PIXI.Sprite|createjs.Bitmap"
                },
                {
                    "name": "size",
                    "description": "The original screen the item was designed for",
                    "type": "Object"
                },
                {
                    "name": "adapter",
                    "description": "The display adapter",
                    "type": "DisplayAdapter"
                }
            ]
        },
        "springroll.ScaleItem": {
            "name": "springroll.ScaleItem",
            "shortname": "ScaleItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "springroll",
            "file": "src/ui/ScaleItem.js",
            "line": 11,
            "description": "A single UI item that needs to be resized,\nthis is an internal class that you would not need to interact with.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "display",
                    "description": "The item to affect",
                    "type": "PIXI.DisplayObject|createjs.DisplayObject"
                },
                {
                    "name": "align",
                    "description": "The vertical-horizontal alignment shorthand",
                    "type": "String"
                },
                {
                    "name": "size",
                    "description": "The original screen the item was designed for",
                    "type": "Object"
                },
                {
                    "name": "adapter",
                    "description": "The display adapter",
                    "type": "DisplayAdapter"
                }
            ]
        },
        "window.extend": {
            "name": "window.extend",
            "shortname": "extend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/utils/extend.js",
            "line": 5,
            "description": "Use to do class inheritence",
            "static": 1
        },
        "window.include": {
            "name": "window.include",
            "shortname": "include",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/utils/include.js",
            "line": 5,
            "description": "Used to include required classes by name",
            "static": 1
        },
        "window.mixin": {
            "name": "window.mixin",
            "shortname": "mixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/utils/mixin.js",
            "line": 5,
            "description": "Static class for mixing in functionality into objects.",
            "static": 1
        },
        "window.namespace": {
            "name": "window.namespace",
            "shortname": "namespace",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "window",
            "file": "src/utils/namespace.js",
            "line": 5,
            "description": "Static class for namespacing objects and adding\nclasses to it.",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 23,
            "description": "Send a message to let the site know that this has\nbeen loaded, if the site is there",
            "itemtype": "property",
            "name": "container",
            "type": "Bellhop",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 31,
            "description": "The API for saving user data, default is to save\ndata to the container, if not connected, it will\nsave user data to local cookies",
            "itemtype": "property",
            "name": "userData",
            "type": "springroll.UserData",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 39,
            "description": "This option tells the container to always keep focus on the iframe even\nwhen the focus is lost. This is useful mostly if your Application\nrequires keyboard input.",
            "itemtype": "property",
            "name": "options.keepFocus",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 66,
            "description": "The default play-mode for the application is continuous, if the application is\nrunning as part of a sequence is it considered in \"single play\" mode\nand the application will therefore close itself.",
            "itemtype": "property",
            "name": "singlePlay",
            "type": "Boolean",
            "readonly": "",
            "default": "false",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 76,
            "description": "The optional play options to use if the application is played in \"single play\"\nmode. These options are passed from the application container to specify\noptions that are used for this single play session. For instance,\nif you want the single play to focus on a certain level or curriculum\nsuch as `{ \"shape\": \"square\" }`",
            "itemtype": "property",
            "name": "playOptions",
            "type": "Object",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 87,
            "description": "When a application is in singlePlay mode it will end.\nIt's unnecessary to check `if (this.singlePlay)` just\ncall the method and it will end the application if it can.",
            "itemtype": "method",
            "name": "singlePlayEnd",
            "return": {
                "description": "If endGame is called",
                "type": "Boolean"
            },
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 104,
            "description": "Manually close the application, this can happen when playing through once",
            "itemtype": "method",
            "name": "endGame",
            "params": [
                {
                    "name": "exitType",
                    "description": "The type of exit",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'game_completed'"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 146,
            "description": "Handler for when a window is unloaded",
            "itemtype": "method",
            "name": "onWindowUnload",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 159,
            "description": "Handle the window uncaught errors with the container",
            "itemtype": "method",
            "name": "onWindowError",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "error",
                    "description": "Uncaught Error",
                    "type": "Error"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 225,
            "description": "When the container pauses the application",
            "itemtype": "method",
            "name": "onPause",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "The Bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 240,
            "description": "Handler when the sound is muted",
            "itemtype": "method",
            "name": "onSoundMuted",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "The bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 254,
            "description": "Handler when the captions are muted",
            "itemtype": "method",
            "name": "onCaptionsMuted",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "The bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 268,
            "description": "Handler when the context is muted",
            "itemtype": "method",
            "name": "onContextMuted",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "context",
                    "description": "The name of the sound context",
                    "type": "String"
                },
                {
                    "name": "e",
                    "description": "The bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 283,
            "description": "The captions style is being set",
            "itemtype": "method",
            "name": "onCaptionsStyles",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "The bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 308,
            "description": "Handler when a application enters single play mode",
            "itemtype": "method",
            "name": "onPlayOptions",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "The Bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 320,
            "description": "Handler when a application enters single play mode",
            "itemtype": "method",
            "name": "onSinglePlay",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "The Bellhop event",
                    "type": "Event"
                }
            ],
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/ContainerClientPlugin.js",
            "line": 331,
            "description": "Game container requests closing the application",
            "itemtype": "method",
            "name": "onClose",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/UserData.js",
            "line": 21,
            "description": "Reference to the container. If the app is not connected\nto the Container (running standalone) then the container\nis set to be `null`.",
            "itemtype": "property",
            "name": "container",
            "type": "Bellhop",
            "default": "null",
            "readonly": "",
            "class": "springroll.UserData",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/UserData.js",
            "line": 31,
            "description": "The name to preprend to each property name, this is set\nby default as the Application's name, which is required\nfor the Container Client module.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "default": "\"\"",
            "class": "springroll.UserData",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/UserData.js",
            "line": 44,
            "description": "Read a saved setting",
            "itemtype": "method",
            "name": "read",
            "params": [
                {
                    "name": "prop",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback when save completes, returns the value",
                    "type": "Function"
                }
            ],
            "class": "springroll.UserData",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/UserData.js",
            "line": 67,
            "description": "Write a setting",
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "prop",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The property value to save",
                    "type": "*"
                },
                {
                    "name": "callback",
                    "description": "Callback when write completes",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.UserData",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/UserData.js",
            "line": 96,
            "description": "Delete a saved setting by name",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "prop",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback when remove completes",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.UserData",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/container-client/UserData.js",
            "line": 121,
            "description": "Destroy and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.UserData",
            "module": "Container Client",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/CombinedCallback.js",
            "line": 17,
            "description": "Creates a callback function for use.",
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "params": [
                {
                    "name": "call",
                    "description": "The callback to call when everything is complete.",
                    "type": "Function"
                },
                {
                    "name": "callCount",
                    "description": "The number of times this function should expect to be called.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "2"
                }
            ],
            "return": {
                "description": "The callback to pass to your asynchronous actions. For reuse,\n                   this function has a reset() function.",
                "type": "Function"
            },
            "class": "springroll.CombinedCallback",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 55,
            "description": "The function to call when the delay is completed.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_callback",
            "type": "Function",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 62,
            "description": "The delay time, in milliseconds.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_delay",
            "type": "Int",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 69,
            "description": "The timer counting down from _delay, in milliseconds.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_timer",
            "type": "Int",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 76,
            "description": "If the DelayedCall should repeat itself automatically.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_repeat",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 84,
            "description": "If the DelayedCall should destroy itself after completing",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_autoDestroy",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 92,
            "description": "If the DelayedCall should use frames instead of milliseconds for the delay.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_useFrames",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 100,
            "description": "If the DelayedCall is currently paused (not stopped).",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 116,
            "description": "The callback supplied to the Application for an update each frame.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_update",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame.",
                    "type": "Int"
                }
            ],
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 143,
            "description": "Restarts the DelayedCall, whether it is running or not.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "restart",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 158,
            "description": "Stops the DelayedCall, without destroying it.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "stop",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 169,
            "description": "If the DelayedCall is paused or not.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/async/DelayedCall.js",
            "line": 201,
            "description": "Stops and cleans up the DelayedCall. Do not use it after calling\ndestroy().",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.DelayedCall",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 24,
            "description": "The name of the value, for reflection or logging purposes.",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "springroll.EnumValue",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 30,
            "description": "The integer value of this enum entry.",
            "itemtype": "property",
            "name": "_value",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.EnumValue",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 37,
            "description": "A string for toString() to return, instead of the name.",
            "itemtype": "property",
            "name": "_toString",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.EnumValue",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 45,
            "description": "The integer value of this enum entry.",
            "itemtype": "property",
            "name": "asInt",
            "type": "Int",
            "class": "springroll.EnumValue",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 98,
            "description": "A potentially sparse array of each enum value, stored by integer values.",
            "itemtype": "property",
            "name": "_byValue",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 110,
            "description": "The values that this Enum was initialized with. We save this so\nthat we can potentially pass this via Bellhop and re-initialize.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "rawEnumValues",
            "type": "Array",
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 176,
            "description": "The count of values the enum was initialized with.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "length",
            "type": "Int",
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 188,
            "description": "Retrieves the next EnumValue in the Enum (loops to first value at end).",
            "itemtype": "method",
            "name": "next",
            "type": "EnumValue",
            "params": [
                {
                    "name": "input",
                    "description": "An EnumValue to retrieve the value that follows.",
                    "type": "EnumValue"
                }
            ],
            "return": {
                "description": "",
                "type": "EnumValue"
            },
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 210,
            "description": "Retrieves the first EnumValue in the Enum",
            "itemtype": "method",
            "name": "first",
            "type": "EnumValue",
            "return": {
                "description": "",
                "type": "EnumValue"
            },
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 222,
            "description": "Retrieves the last EnumValue in the Enum",
            "itemtype": "method",
            "name": "last",
            "type": "EnumValue",
            "return": {
                "description": "",
                "type": "EnumValue"
            },
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/Enum.js",
            "line": 237,
            "description": "Gets an enum value by integer value. If you have multiple enum values with the same integer\nvalue, this will always retrieve the first enum value.",
            "itemtype": "method",
            "name": "valueFromInt",
            "type": "Array",
            "params": [
                {
                    "name": "input",
                    "description": "The integer value to get an enum value for.",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "The EnumValue that represents the input integer.",
                "type": "EnumValue"
            },
            "class": "springroll.Enum",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/SavedData.js",
            "line": 15,
            "description": "A constant to determine if we can use localStorage and \nsessionStorage",
            "static": 1,
            "itemtype": "property",
            "name": "WEB_STORAGE_SUPPORT",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SavedData",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/SavedData.js",
            "line": 25,
            "description": "A constant for cookie fallback for `SavedData.clear()`",
            "static": 1,
            "itemtype": "property",
            "name": "ERASE_COOKIE",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "default": "-1",
            "class": "springroll.SavedData",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/SavedData.js",
            "line": 49,
            "description": "Remove a saved variable by name.",
            "itemtype": "method",
            "name": "remove",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the value to remove",
                    "type": "String"
                }
            ],
            "class": "springroll.SavedData",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/SavedData.js",
            "line": 66,
            "description": "Save a variable.",
            "itemtype": "method",
            "name": "write",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the value to save",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to save. This will be run through JSON.stringify().",
                    "type": "Mixed"
                },
                {
                    "name": "tempOnly",
                    "description": "If the value should be saved only in the current browser session.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.SavedData",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/SavedData.js",
            "line": 100,
            "description": "Read the value of a saved variable",
            "itemtype": "method",
            "name": "read",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the variable",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The value (run through `JSON.parse()`) or null if it doesn't exist",
                "type": "Mixed"
            },
            "class": "springroll.SavedData",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/SavedData.js",
            "line": 134,
            "description": "When restoring from JSON via `JSON.parse`, we may pass a reviver function.\nIn our case, this will check if the object has a specially-named property (`__classname`).\nIf it does, we will attempt to construct a new instance of that class, rather than using a\nplain old Object. Note that this recurses through the object.",
            "itemtype": "method",
            "name": "reviver",
            "static": 1,
            "see": [
                "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"
            ],
            "params": [
                {
                    "name": "key",
                    "description": "each key name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Object that we wish to restore",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The object that was parsed - either cast to a class, or not",
                "type": "Object"
            },
            "class": "springroll.SavedData",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/TimeUtils.js",
            "line": 30,
            "description": "This method gets timestamp in micromilliseconds for doing performance\nintense operations. Fallback support is to `Date.now()`. We aren't overridding\n`performance.now()` incase dependencies on this actually demand \nthe optimization and accuracy that performance actually provides.",
            "static": 1,
            "itemtype": "method",
            "name": "now",
            "return": {
                "description": "The number of micromilliseconds of the current timestamp",
                "type": "Int"
            },
            "class": "springroll.TimeUtils",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/utils/WeightedRandom.js",
            "line": 38,
            "description": "Picks an item at random.",
            "itemtype": "method",
            "name": "random",
            "return": {
                "description": "The randomly chosen value.",
                "type": "String"
            },
            "class": "springroll.WeightedRandom",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptions.js",
            "line": 23,
            "description": "The user input options",
            "itemtype": "property",
            "name": "_options",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.ApplicationOptions",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptions.js",
            "line": 31,
            "description": "Reference to the application",
            "itemtype": "property",
            "name": "_app",
            "type": "springroll.Application",
            "access": "private",
            "tagname": "",
            "class": "springroll.ApplicationOptions",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptions.js",
            "line": 42,
            "description": "Initialize the values in the options",
            "itemtype": "method",
            "name": "init",
            "class": "springroll.ApplicationOptions",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptions.js",
            "line": 77,
            "description": "Get the query string as an object",
            "itemtype": "property",
            "name": "getQueryString",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.ApplicationOptions",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptions.js",
            "line": 112,
            "description": "Convert a string into a DOM Element",
            "itemtype": "method",
            "name": "asDOMElement",
            "params": [
                {
                    "name": "name",
                    "description": "The property name to fetch",
                    "type": "String"
                }
            ],
            "class": "springroll.ApplicationOptions",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptions.js",
            "line": 126,
            "description": "Override a default value",
            "itemtype": "method",
            "name": "override",
            "params": [
                {
                    "name": "name",
                    "description": "The property name to fetch",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Instance of this options for chaining",
                "type": "springroll.ApplicationOptions"
            },
            "class": "springroll.ApplicationOptions",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 15,
            "description": "Use Request Animation Frame API",
            "itemtype": "property",
            "name": "options.raf",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 22,
            "description": "The framerate to use for rendering the stage",
            "itemtype": "property",
            "name": "options.fps",
            "type": "Int",
            "default": "60",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 29,
            "description": "Use the query string parameters for options overrides",
            "itemtype": "property",
            "name": "options.useQueryString",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 36,
            "description": "The default display DOM ID name",
            "itemtype": "property",
            "name": "options.canvasId",
            "type": "String",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 42,
            "description": "The name of the class to automatically instantiate as the\ndisplay (e.g. `springroll.PixiDisplay`)",
            "itemtype": "property",
            "name": "options.display",
            "type": "Function",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 49,
            "description": "Display specific setup options",
            "itemtype": "property",
            "name": "options.displayOptions",
            "type": "Object",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 55,
            "description": "If using TweenJS, the Application will update the Tween itself.",
            "itemtype": "property",
            "name": "options.updateTween",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationOptionsPlugin.js",
            "line": 78,
            "description": "The name of the application",
            "itemtype": "property",
            "name": "options.name",
            "type": "String",
            "default": "''",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationPlugin.js",
            "line": 31,
            "description": "The priority of the plugin. Higher numbers handled first. This should be set\nin the constructor of the extending ApplicationPlugin.",
            "itemtype": "property",
            "name": "priority",
            "type": "Int",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.ApplicationPlugin",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationPlugin.js",
            "line": 40,
            "description": "When the application is being initialized. This function \nis bound to the Application. This should be overridden.",
            "itemtype": "method",
            "name": "setup",
            "class": "springroll.ApplicationPlugin",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationPlugin.js",
            "line": 47,
            "description": "The function to call right before the application is initailized. \nThis function is bound to the Application. `preload` takes\na single parameter which is a call back to call when\nthe asyncronous event is completed.",
            "itemtype": "method",
            "name": "preload",
            "params": [
                {
                    "name": "done",
                    "description": "The event to call when complete",
                    "type": "Function"
                }
            ],
            "class": "springroll.ApplicationPlugin",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ApplicationPlugin.js",
            "line": 57,
            "description": "When the application is being destroyed. This function \nis bound to the Application. This should be overridden.",
            "itemtype": "method",
            "name": "teardown",
            "class": "springroll.ApplicationPlugin",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 20,
            "description": "Callback when the page becomes visible",
            "itemtype": "property",
            "name": "_onFocus",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 27,
            "description": "Callback when the page loses visibility",
            "itemtype": "property",
            "name": "_onBlur",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 34,
            "description": "If this object is enabled.",
            "itemtype": "property",
            "name": "_enabled",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 44,
            "description": "The visibility toggle listener function",
            "itemtype": "property",
            "name": "_onToggle",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 63,
            "description": "The name of the visibility change event for the browser",
            "itemtype": "property",
            "name": "_visibilityChange",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 91,
            "description": "If this object is enabled.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibility.js",
            "line": 141,
            "description": "Disable the detection",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.PageVisibility",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibilityPlugin.js",
            "line": 17,
            "description": "Handles the page visiblity changes automatically\nto pause and resume the application",
            "itemtype": "property",
            "name": "_visibility",
            "type": "springroll.PageVisibility",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibilityPlugin.js",
            "line": 29,
            "description": "The application pauses automatically when the window loses focus.",
            "itemtype": "property",
            "name": "options.autoPause",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibilityPlugin.js",
            "line": 44,
            "description": "Setter for if the application is being automatically paused, \nusually by the PageVisibility plugin or the ContainerClient plugin.",
            "itemtype": "property",
            "name": "autoPaused",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibilityPlugin.js",
            "line": 63,
            "description": "Private listener for when the page is hidden.",
            "itemtype": "method",
            "name": "onHidden",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/PageVisibilityPlugin.js",
            "line": 73,
            "description": "Private listener for when the page is shown.",
            "itemtype": "method",
            "name": "onVisible",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 15,
            "description": "Dom element (or the window) to attach resize listeners and read the size from",
            "itemtype": "property",
            "name": "_resizeElement",
            "type": "DOMElement|Window|null",
            "access": "private",
            "tagname": "",
            "default": "null",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 23,
            "description": "The maximum width of the primary display, compared to the original height.",
            "itemtype": "property",
            "name": "_maxWidth",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 30,
            "description": "The maximum height of the primary display, compared to the original width.",
            "itemtype": "property",
            "name": "_maxHeight",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 37,
            "description": "The original width of the primary display, used to calculate the aspect ratio.",
            "itemtype": "property",
            "name": "_originalWidth",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 44,
            "description": "The original height of the primary display, used to calculate the aspect ratio.",
            "itemtype": "property",
            "name": "_originalHeight",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 51,
            "description": "A helper object to avoid object creation each resize event.",
            "itemtype": "property",
            "name": "_resizeHelper",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 63,
            "description": "The timeout when the window is being resized",
            "itemtype": "property",
            "name": "_windowResizer",
            "type": "springroll.DelayedCall",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 75,
            "description": "Fired when a resize is called",
            "itemtype": "event",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The width of the resize element",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "The height of the resize element",
                    "type": "Int"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 82,
            "description": "If doing uniform resizing, optional parameter to add\na maximum width relative to the original height. This\nallows for \"title-safe\" responsiveness. Must be greater\nthan the original width of the canvas.",
            "itemtype": "property",
            "name": "options.maxWidth",
            "type": "Int",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 91,
            "description": "If doing uniform resizing, optional parameter to add\na maximum height relative to the original width. This\nallows for \"title-safe\" responsiveness. Must be greater\nthan the original height of the canvas.",
            "itemtype": "property",
            "name": "options.maxHeight",
            "type": "Int",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 100,
            "description": "Whether to resize the displays to the original aspect ratio",
            "itemtype": "property",
            "name": "options.uniformResize",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 107,
            "description": "If responsive is true, the width and height properties\nare adjusted on the `<canvas>` element. It's assumed that\nresponsive applications will adjust their own elements.\nIf responsive is false then the style properties are changed.",
            "itemtype": "property",
            "name": "options.responsive",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 117,
            "description": "The element that the canvas is resized to fit.",
            "itemtype": "property",
            "name": "options.resizeElement",
            "type": "DOMElement|String",
            "default": "'frame'",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 124,
            "description": "Whether to account for devicePixelRatio when rendering game",
            "itemtype": "property",
            "name": "options.enableHiDPI",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 153,
            "description": "The current width of the application, in real point values",
            "itemtype": "property",
            "name": "realWidth",
            "type": "Int",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 159,
            "description": "The current height of the application, in real point values",
            "itemtype": "property",
            "name": "realHeight",
            "type": "Int",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 165,
            "description": "Fire a resize event with the current width and height of the display",
            "itemtype": "method",
            "name": "triggerResize",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 231,
            "description": "Handle the window resize events",
            "itemtype": "method",
            "name": "onWindowResize",
            "access": "protected",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/ResizePlugin.js",
            "line": 256,
            "description": "Calculates the resizing of displays. By default, this limits the new size\nto the initial aspect ratio of the primary display. Override this function\nif you need variable aspect ratios.",
            "itemtype": "method",
            "name": "calculateDisplaySize",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "A size object containing the width and height of the resized container.\n                    The size parameter is also the output of the function, so the size\n                    properties are edited in place.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "width",
                            "description": "The width of the resized container.",
                            "type": "Int"
                        },
                        {
                            "name": "height",
                            "description": "The height of the resized container.",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/StringFilters.js",
            "line": 14,
            "description": "Dictionary of filters",
            "itemtype": "property",
            "name": "_filters",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.StringFilters",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/StringFilters.js",
            "line": 25,
            "description": "Register a filter",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "replace",
                    "description": "The string or regex to replace",
                    "type": "String|RegExp"
                },
                {
                    "name": "replacement",
                    "description": "String to repalce with",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "springroll.StringFilters",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/StringFilters.js",
            "line": 70,
            "description": "Test a string against all registered filters",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "str",
                    "description": "The string to check",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "springroll.StringFilters",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/StringFilters.js",
            "line": 91,
            "itemtype": "method",
            "name": "destroy",
            "static": 1,
            "class": "springroll.StringFilters",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/core/StringFiltersPlugin.js",
            "line": 17,
            "description": "The StringFilters instance",
            "itemtype": "property",
            "name": "filters",
            "type": "springroll.StringFilters",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 21,
            "description": "If we have a console",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_hasConsole",
            "type": "Boolean",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 29,
            "description": "If the console supports coloring",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_consoleSupportsColors",
            "type": "Boolean",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 83,
            "description": "The levels of logging",
            "itemtype": "property",
            "name": "Levels",
            "type": "springroll.Enum",
            "static": 1,
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 90,
            "description": "The most basic general log level",
            "itemtype": "property",
            "name": "Levels.GENERAL",
            "type": "Int",
            "static": 1,
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 97,
            "description": "The debug log level, more priority than GENERAL",
            "itemtype": "property",
            "name": "Levels.DEBUG",
            "type": "Int",
            "static": 1,
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 104,
            "description": "The info log level, more priority than DEBUG",
            "itemtype": "property",
            "name": "Levels.DEBUG",
            "type": "Int",
            "static": 1,
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 111,
            "description": "The warn log level, more priority than WARN",
            "itemtype": "property",
            "name": "Levels.WARN",
            "type": "Int",
            "static": 1,
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 118,
            "description": "The error log level, the most priority log level",
            "itemtype": "property",
            "name": "Levels.ERROR",
            "type": "Int",
            "static": 1,
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 126,
            "description": "The minimum log level to show, by default it's set to\nshow all levels of logging.",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "property",
            "name": "minLogLevel",
            "type": "Int",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 135,
            "description": "Boolean to turn on or off the debugging",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 143,
            "description": "The DOM element to output debug messages to",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "property",
            "name": "output",
            "type": "DOMElement",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 152,
            "description": "Browser port for the websocket - browsers tend to block lower ports",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "NET_PORT",
            "type": "Int",
            "default": "1026",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 161,
            "description": "If the WebSocket is connected",
            "static": 1,
            "access": "private",
            "tagname": "",
            "default": "false",
            "itemtype": "property",
            "name": "_useSocket",
            "type": "Boolean",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 170,
            "description": "The socket connection",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_socket",
            "type": "WebSocket",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 178,
            "description": "The current message object being sent to the `WebSocket`",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_socketMessage",
            "type": "Object",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 186,
            "description": "The `WebSocket` message queue",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_socketQueue",
            "type": "Array",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 201,
            "description": "Methods names to use to strip out lines from stack traces\nin remote logging.",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "methodsToStrip",
            "type": "Array",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 242,
            "description": "Regular expression to get the line number and column from a stack trace line.",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "lineLocationFinder",
            "type": "RegEx",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 250,
            "description": "Connect to the `WebSocket`",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "connect",
            "params": [
                {
                    "name": "host",
                    "description": "The remote address to connect to, IP address or host name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If a connection was attempted",
                "type": "Boolean"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 281,
            "description": "Disconnect from the `WebSocket`",
            "access": "public",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "disconnect",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 296,
            "description": "Callback when the `WebSocket` is connected",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "onConnect",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 326,
            "description": "Global window error handler, used for remote connections.",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "globalErrorHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The error message",
                    "type": "String"
                },
                {
                    "name": "file",
                    "description": "The url of the file",
                    "type": "String"
                },
                {
                    "name": "line",
                    "description": "The line within the file",
                    "type": "Int"
                },
                {
                    "name": "column",
                    "description": "The column within the line",
                    "type": "Int"
                },
                {
                    "name": "error",
                    "description": "The error itself",
                    "type": "Error"
                }
            ],
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 344,
            "description": "Callback for when the websocket is closed",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "onClose",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 363,
            "description": "Sent to the output",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "domOutput",
            "params": [
                {
                    "name": "level",
                    "description": "The log level",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Additional arguments",
                    "type": "String"
                }
            ],
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 379,
            "description": "Send a remote log message using the socket connection",
            "access": "private",
            "tagname": "",
            "static": 1,
            "itemtype": "method",
            "name": "_remoteLog",
            "params": [
                {
                    "name": "message",
                    "description": "The message to send",
                    "type": "Array"
                },
                {
                    "name": "level",
                    "description": "The log level to send",
                    "type": "Level",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "stack",
                    "description": "A stack to use for the message. A stack will be created if stack\n                      is omitted.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 549,
            "description": "An array for preventing circular references",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "circularArray",
            "type": "Array",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 557,
            "description": "Strip out known circular references",
            "itemtype": "method",
            "name": "removeCircular",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to remove references from",
                    "type": "Object"
                }
            ],
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 640,
            "description": "Log something in the console or remote",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "params",
                    "description": "The statement or object to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 670,
            "description": "Debug something in the console or remote",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "debug",
            "params": [
                {
                    "name": "params",
                    "description": "The statement or object to debug",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 711,
            "description": "Info something in the console or remote",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "params",
                    "description": "The statement or object to info",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 741,
            "description": "Warn something in the console or remote",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "params",
                    "description": "The statement or object to warn",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 771,
            "description": "Error something in the console or remote",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "params",
                    "description": "The statement or object to error",
                    "type": "*"
                }
            ],
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 800,
            "description": "Assert that something is true",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "assert",
            "params": [
                {
                    "name": "truth",
                    "description": "As statement that is assumed true",
                    "type": "Boolean"
                },
                {
                    "name": "params",
                    "description": "The message to error if the assert is false",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 828,
            "description": "Method to describe an object in the console",
            "static": 1,
            "itemtype": "method",
            "name": "dir",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "params",
                    "description": "The object to describe in the console",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 855,
            "description": "Method to clear the console",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 882,
            "description": "Generate a stack track in the output",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "trace",
            "params": [
                {
                    "name": "params",
                    "description": "Optional parameters to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 909,
            "description": "Starts a new logging group with an optional title. All console output that\noccurs after calling this method and calling `Debug.groupEnd()` appears in\nthe same visual group.",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "group",
            "params": [
                {
                    "name": "params",
                    "description": "Optional parameters to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 933,
            "description": "Creates a new logging group that is initially collapsed instead of open,\nas with `Debug.group()`.",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "groupCollapsed",
            "params": [
                {
                    "name": "params",
                    "description": "Optional parameters to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 956,
            "description": "Starts a new logging group with an optional title. All console output that\noccurs after calling this method and calling console.groupEnd() appears in\nthe same visual group.",
            "static": 1,
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "groupEnd",
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 979,
            "description": "List of hex colors to create Debug shortcuts for.\nEach key will become a function Debug[key]() that outputs\nthe message in the specified color to the console if\nthe browsers allows colored logging.\nColor Palette pulled from \"Better CSS Defaults\"\n(https://github.com/mrmrs/colors)",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_palette",
            "type": "Object",
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 992,
            "description": "Output a general log colored as navy",
            "itemtype": "method",
            "name": "navy",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1001,
            "description": "Output a general log colored as blue",
            "itemtype": "method",
            "name": "blue",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1010,
            "description": "Output a general log colored as aqua",
            "itemtype": "method",
            "name": "aqua",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1019,
            "description": "Output a general log colored as teal",
            "itemtype": "method",
            "name": "teal",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1028,
            "description": "Output a general log colored as olive",
            "itemtype": "method",
            "name": "olive",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1036,
            "description": "Output a general log colored as green",
            "itemtype": "method",
            "name": "green",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1045,
            "description": "Output a general log colored as lime",
            "itemtype": "method",
            "name": "lime",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1054,
            "description": "Output a general log colored as yellow",
            "itemtype": "method",
            "name": "yellow",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1063,
            "description": "Output a general log colored as orange",
            "itemtype": "method",
            "name": "orange",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1072,
            "description": "Output a general log colored as red",
            "itemtype": "method",
            "name": "red",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1081,
            "description": "Output a general log colored as pink",
            "itemtype": "method",
            "name": "pink",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1090,
            "description": "Output a general log colored as purple",
            "itemtype": "method",
            "name": "purple",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1099,
            "description": "Output a general log colored as maroon",
            "itemtype": "method",
            "name": "maroon",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1108,
            "description": "Output a general log colored as silver",
            "itemtype": "method",
            "name": "silver",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1117,
            "description": "Output a general log colored as gray",
            "itemtype": "method",
            "name": "gray",
            "static": 1,
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The instance of debug for chaining",
                "type": "Debug"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/Debug.js",
            "line": 1138,
            "description": "Due to the way closures and variables work, _colorClosure returns\nthe color logging function needed for the color that you pass it.",
            "itemtype": "method",
            "name": "_colorClosure",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "hex",
                    "description": "Hex value to apply to CSS color",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "springroll.Debug",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 14,
            "description": "The space between columns",
            "itemtype": "property",
            "name": "COLUMN_BUFFER",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "final": 1,
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 23,
            "description": "The collections of options",
            "itemtype": "property",
            "name": "_options",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 30,
            "description": "The maximum length of the label column",
            "itemtype": "property",
            "name": "_maxLabel",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 37,
            "description": "The maximum length of the type column",
            "itemtype": "property",
            "name": "_maxType",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 44,
            "description": "Config object for the CSS styles throughout",
            "itemtype": "property",
            "name": "CSS",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "final": 1,
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 58,
            "description": "The header for the final log",
            "itemtype": "property",
            "name": "HEADER",
            "type": "String",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "final": 1,
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 67,
            "description": "The map of different basic types of options.",
            "itemtype": "property",
            "name": "TYPES",
            "type": "String",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "final": 1,
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 81,
            "description": "Define a int query parameter.",
            "itemtype": "method",
            "name": "int",
            "params": [
                {
                    "name": "label",
                    "description": "The label for the options",
                    "type": "String"
                },
                {
                    "name": "desc",
                    "description": "Description of values the option can accept",
                    "type": "String"
                }
            ],
            "static": 1,
            "return": {
                "description": "instance of this DebugOptions for chaining",
                "type": "springroll.DebugOptions"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 94,
            "description": "Define a boolean query parameter",
            "itemtype": "method",
            "name": "boolean",
            "params": [
                {
                    "name": "label",
                    "description": "The label for the options",
                    "type": "String"
                },
                {
                    "name": "desc",
                    "description": "Description of values the option can accept",
                    "type": "String"
                }
            ],
            "static": 1,
            "return": {
                "description": "instance of this DebugOptions for chaining",
                "type": "springroll.DebugOptions"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 107,
            "description": "Define a string query parameter",
            "itemtype": "method",
            "name": "string",
            "params": [
                {
                    "name": "label",
                    "description": "The label for the options",
                    "type": "String"
                },
                {
                    "name": "desc",
                    "description": "Description of values the option can accept",
                    "type": "String"
                }
            ],
            "static": 1,
            "return": {
                "description": "instance of this DebugOptions for chaining",
                "type": "springroll.DebugOptions"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 120,
            "description": "Define a number query parameter",
            "itemtype": "method",
            "name": "number",
            "params": [
                {
                    "name": "label",
                    "description": "The label for the options",
                    "type": "String"
                },
                {
                    "name": "desc",
                    "description": "Description of values the option can accept",
                    "type": "String"
                }
            ],
            "static": 1,
            "return": {
                "description": "instance of this DebugOptions for chaining",
                "type": "springroll.DebugOptions"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 133,
            "description": "Define a number query parameter",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "label",
                    "description": "The label for the options",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The type of value the option accepts",
                    "type": "String"
                },
                {
                    "name": "desc",
                    "description": "Description of values the option can accept",
                    "type": "String",
                    "optional": true
                }
            ],
            "static": 1,
            "return": {
                "description": "instance of this DebugOptions for chaining",
                "type": "springroll.DebugOptions"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 155,
            "description": "Build the log and final argument array for the\noptions output console.log();",
            "itemtype": "method",
            "name": "log",
            "static": 1,
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 220,
            "description": "Forget all the options that have been remembered",
            "itemtype": "method",
            "name": "reset",
            "static": 1,
            "return": {
                "description": "instance of this DebugOptions for chaining",
                "type": "springroll.DebugOptions"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugOptions.js",
            "line": 235,
            "description": "Generate a spacer slug. Returned object is concatenated\nspace character, i.e. ' ', to the specified count.",
            "itemtype": "method",
            "name": "spacer",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "count",
                    "description": "How many characters the spacer needs",
                    "type": "Int"
                },
                {
                    "name": "str",
                    "description": "The input string to add spaces to",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "springroll.DebugOptions",
            "module": "Debug",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugPlugin.js",
            "line": 19,
            "description": "Enable the Debug class. After initialization, this\nis a pass-through to Debug.enabled.",
            "itemtype": "property",
            "name": "options.debug",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugPlugin.js",
            "line": 27,
            "description": "Minimum log level from 0 to 4",
            "itemtype": "property",
            "name": "options.minLogLevel",
            "type": "Int",
            "default": "0",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugPlugin.js",
            "line": 34,
            "description": "The framerate container",
            "itemtype": "property",
            "name": "options.framerate",
            "type": "String|DOMElement",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugPlugin.js",
            "line": 40,
            "description": "The framerate container",
            "itemtype": "property",
            "name": "_framerate",
            "type": "DOMElement",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/debug/DebugPlugin.js",
            "line": 47,
            "description": "The host computer for remote debugging, the debug\nmodule must be included to use this feature. Can be an\nIP address or host name. After initialization, setting\nthis will still connect or disconect Debug for remote\ndebugging. This is a write-only property.",
            "itemtype": "property",
            "name": "options.debugRemote",
            "type": "String",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/core.js",
            "line": 16,
            "description": "See {{#crossLink \"springroll.Application/displays:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "getDisplays",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.5",
            "params": [
                {
                    "name": "each",
                    "description": "Iterator function, param is each method",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "The collection of displays",
                "type": "Array"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/core.js",
            "line": 37,
            "description": "See {{#crossLink \"window.mixin\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "mixIn",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/core.js",
            "line": 53,
            "description": "See {{#crossLink \"springroll.Application/loader:property\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "property",
            "name": "instance",
            "type": "springroll.Loader#instance",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/core.js",
            "line": 71,
            "description": "Turn on read-only for properties",
            "itemtype": "method",
            "name": "readOnly",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "prop",
                    "description": "The property or properties to make readonly",
                    "type": "String",
                    "multiple": true
                }
            ],
            "return": {
                "description": "The instance for chaining",
                "type": "springroll.PropertyDispatcher"
            },
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 17,
            "description": "If an instance can be animated, See {{#crossLink \"springroll.Animator/canAnimate:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "canAnimate",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If the instance is animate-able",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 31,
            "description": "Get the duration for an instance by event, see {{#crossLink \"springroll.Animator/getDuration:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "getDuration",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The length in milliseconds",
                "type": "Int"
            },
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 46,
            "description": "Get a timeline by instance, see {{#crossLink \"springroll.Animator/getTimeline:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "getTimeline",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The timeline instance",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 60,
            "description": "If an instance has an animation event label, see {{#crossLink \"springroll.Animator/hasAnimation:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "instanceHasAnimation",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The event label to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the instance has the event",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 75,
            "description": "Pause all animations in a group, see {{#crossLink \"springroll.Animator/pauseInGroup:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "pauseInGroup",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "paused",
                    "description": "The paused state",
                    "type": "Boolean"
                },
                {
                    "name": "container",
                    "description": "The container of instances",
                    "type": "PIXI.Container"
                }
            ],
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 89,
            "description": "Resume all animations, see {{#crossLink \"springroll.Animator/resume:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "resume",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 101,
            "description": "Stop all animations, see {{#crossLink \"springroll.Animator/stopAll:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "stopAll",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 113,
            "description": "Destroy the animator, see {{#crossLink \"springroll.Animator/destroy:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "destroy",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 125,
            "description": "Get the paused state of instance, see {{#crossLink \"springroll.Animator/paused:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to get",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Is paused",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 139,
            "description": "Initialize the animator, see {{#crossLink \"springroll.Application/animator:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "return": {
                "description": "The animator instance",
                "type": "springroll.Animator"
            },
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 152,
            "description": "Pause all animations, see {{#crossLink \"springroll.Animator/pause:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "pause",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 164,
            "description": "Play an instance event, see {{#crossLink \"springroll.Animator/play:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "play",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                },
                {
                    "name": "eventList",
                    "description": "The event information to play",
                    "type": "Object|String"
                },
                {
                    "name": "onComplete",
                    "description": "The completed function",
                    "type": "Function"
                },
                {
                    "name": "onCancelled",
                    "description": "The cancelled function",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 180,
            "description": "See {{#crossLink \"springroll.Animator/stop:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip to play",
                    "type": "*"
                },
                {
                    "name": "removeCallbacks",
                    "description": "If we should remove callbacks",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 194,
            "itemtype": "method",
            "name": "toString",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 207,
            "description": "See {{#crossLink \"springroll.Animator/captions:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "captions",
            "type": "springroll.Captions",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-animation.js",
            "line": 221,
            "description": "See {{#crossLink \"springroll.Animator/debug:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "debug",
            "type": "Boolean",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.Animator",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-display.js",
            "line": 15,
            "description": "See {{#crossLink \"springroll.Application/animator:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "animator",
            "type": "springroll.Animator",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-states.js",
            "line": 15,
            "description": "See {{#crossLink \"springroll.BasePanel/app:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "game",
            "type": "springroll.Application",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-states.js",
            "line": 32,
            "description": "See {{#crossLink \"springroll.BaseState/app:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "game",
            "type": "springroll.Application",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "class": "springroll.easeljs.BaseState",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-states.js",
            "line": 46,
            "description": "See {{#crossLink \"springroll.State/preload:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "manifest",
            "type": "Array",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.easeljs.BaseState",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/easeljs-states.js",
            "line": 60,
            "description": "See {{#crossLink \"springroll.State/preloaded:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "assetsLoaded",
            "type": "Boolean",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "readonly": "",
            "class": "springroll.easeljs.BaseState",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 17,
            "description": "If an instance can be animated, See {{#crossLink \"springroll.Animator/canAnimate:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "canAnimate",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If the instance is animate-able",
                "type": "Boolean"
            },
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 31,
            "description": "Get the duration for an instance by event, see {{#crossLink \"springroll.Animator/getDuration:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "getDuration",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The length in milliseconds",
                "type": "Int"
            },
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 46,
            "description": "Get a timeline by instance, see {{#crossLink \"springroll.Animator/getTimeline:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "getTimeline",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The timeline instance",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 60,
            "description": "If an instance has an animation event label, see {{#crossLink \"springroll.Animator/hasAnimation:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "instanceHasAnimation",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The event label to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If the instance has the event",
                "type": "Boolean"
            },
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 75,
            "description": "Pause all animations in a group, see {{#crossLink \"springroll.Animator/pauseInGroup:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "pauseInGroup",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "paused",
                    "description": "The paused state",
                    "type": "Boolean"
                },
                {
                    "name": "container",
                    "description": "The container of instances",
                    "type": "PIXI.Container"
                }
            ],
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 89,
            "description": "Resume all animations, see {{#crossLink \"springroll.Animator/resume:method\"}}{{/crossLink}}",
            "static": 1,
            "itemtype": "method",
            "name": "resume",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 101,
            "description": "Stop all animations, see {{#crossLink \"springroll.Animator/stopAll:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "stopAll",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 113,
            "description": "Destroy the animator, see {{#crossLink \"springroll.Animator/destroy:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "destroy",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 125,
            "description": "Get the paused state of instance, see {{#crossLink \"springroll.Animator/paused:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "getPaused",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to get",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Is paused",
                "type": "Boolean"
            },
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 139,
            "description": "Initialize the animator, see {{#crossLink \"springroll.Application/animator:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "return": {
                "description": "The animator instance",
                "type": "springroll.Animator"
            },
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 152,
            "description": "Pause all animations, see {{#crossLink \"springroll.Animator/pause:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "pause",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 164,
            "description": "Play an instance event, see {{#crossLink \"springroll.Animator/play:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "play",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip instance",
                    "type": "*"
                },
                {
                    "name": "eventList",
                    "description": "The event information to play",
                    "type": "Object|String"
                },
                {
                    "name": "onComplete",
                    "description": "The completed function",
                    "type": "Function"
                },
                {
                    "name": "onCancelled",
                    "description": "The cancelled function",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 180,
            "description": "See {{#crossLink \"springroll.Animator/stop:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "instance",
                    "description": "The clip to play",
                    "type": "*"
                },
                {
                    "name": "removeCallbacks",
                    "description": "If we should remove callbacks",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 194,
            "itemtype": "method",
            "name": "toString",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 207,
            "description": "See {{#crossLink \"springroll.Animator/captions:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "captions",
            "type": "springroll.Captions",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-animation.js",
            "line": 221,
            "description": "See {{#crossLink \"springroll.Animator/debug:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "debug",
            "type": "Boolean",
            "static": 1,
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.Animator",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/pixi-display.js",
            "line": 15,
            "description": "See {{#crossLink \"springroll.Application/animator:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "animator",
            "type": "springroll.Animator",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 18,
            "description": "If sound is supported on the device/browser, see {{#crossLink \"springroll.Sound/isSupported:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "soundEnabled",
            "type": "Boolean",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.10",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 33,
            "description": "Add a configuration to the load, see {{#crossLink \"springroll.Sound/addContext:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "loadConfig",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "params": [
                {
                    "name": "config",
                    "description": "The configuration",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Sound object for chaining",
                "type": "springroll.Sound"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 46,
            "description": "Preload a single sound, see {{#crossLink \"springroll.Sound/preload:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "preloadSound",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "params": [
                {
                    "name": "alias",
                    "description": "The sound to preload",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback when complete",
                    "type": "Function"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 59,
            "description": "Unpauses all sounds, see {{#crossLink \"springroll.Sound/resumeAll:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "unpauseAll",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "access": "public",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 71,
            "description": "Unpauses a specific sound, see {{#crossLink \"springroll.Sound/resume:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "unpauseSound",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to resume.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 84,
            "description": "Unpauses a specific sound, see {{#crossLink \"springroll.Sound/pause:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "pauseSound",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to pause.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 102,
            "description": "Unpauses this SoundInstance, see {{#crossLink \"springroll.SoundInstance/resume:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "unpause",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/sound.js",
            "line": 119,
            "description": "Get the current list of VO sounds, see {{#crossLink \"springroll.VOPlayer/voList:property\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "soundList",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/states.js",
            "line": 18,
            "description": "See see {{#crossLink \"springroll.StateManager/transition:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "changeTransition",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "params": [
                {
                    "name": "transition",
                    "description": "The transition clip",
                    "type": "*"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/states.js",
            "line": 30,
            "description": "Get the current state, see see {{#crossLink \"springroll.StateManager/currentState:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "getCurrentState",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "return": {
                "description": "The current state",
                "type": "springroll.State"
            },
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/states.js",
            "line": 42,
            "description": "Set the current state, see {{#crossLink \"springroll.StateManager/state:property\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "setState",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "params": [
                {
                    "name": "id",
                    "description": "The state id",
                    "type": "String"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/states.js",
            "line": 54,
            "description": "Goto the next state, see {{#crossLink \"springroll.State/nextState:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "next",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/states.js",
            "line": 65,
            "description": "Goto the previous state, see {{#crossLink \"springroll.State/previousState:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "previous",
            "deprecated": true,
            "deprecationMessage": "since version 0.3.0",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/ui.js",
            "line": 14,
            "description": "See {{#crossLink \"springroll.ScaleManager/addItem:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "addBackground",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/deprecation/ui.js",
            "line": 26,
            "description": "See {{#crossLink \"springroll.ScaleManager/removeItem:method\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "removeBackground",
            "deprecated": true,
            "deprecationMessage": "since version 0.4.0",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 72,
            "description": "Indicates whether this BitmapMovieClip should loop when it reaches the end of its timeline.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 80,
            "description": "The current frame of the movieclip.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 89,
            "description": "If true, the BitmapMovieClip's position will not advance when ticked.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 97,
            "description": "Boundaries of the animation, like the nominalBounds produced by Flash's HTML5 exporter.\nThis uses the full, untrimmed size of the first frame.",
            "itemtype": "property",
            "name": "nominalBounds",
            "type": "createjs.Rectangle",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 107,
            "description": "By default BitmapMovieClip instances advance one frame per tick. Specifying a framerate\nfor the BitmapMovieClip will cause it to advance based on elapsed time between ticks as\nappropriate to maintain the target framerate.",
            "itemtype": "property",
            "name": "_framerate",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 119,
            "description": "When the BitmapMovieClip is framerate independent, this is the total time in seconds for\nthe animation.",
            "itemtype": "property",
            "name": "_duration",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 130,
            "description": "When the BitmapMovieClip is framerate independent, this is the time elapsed from frame 0 in\nseconds.",
            "itemtype": "property",
            "name": "_t",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 140,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 148,
            "description": "The Bitmap used to render the current frame of the animation.",
            "itemtype": "property",
            "name": "_bitmap",
            "type": "createjs.Bitmap",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 156,
            "description": "An array of frame labels.",
            "itemtype": "property",
            "name": "_labels",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 164,
            "description": "An array of event labels.",
            "itemtype": "property",
            "name": "_events",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 172,
            "description": "An array of textures.",
            "itemtype": "property",
            "name": "_frames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 180,
            "description": "The current texture.",
            "itemtype": "property",
            "name": "_currentTexture",
            "type": "createjs.TextureAtlas.Texture",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 188,
            "description": "The origin point of the BitmapMovieClip.",
            "itemtype": "property",
            "name": "_origin",
            "type": "Point",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 196,
            "description": "A scale to apply to the images in the BitmapMovieClip\nto restore normal size (if spritesheet was exported at a smaller or larger size).",
            "itemtype": "property",
            "name": "_scale",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 219,
            "description": "By default BitmapMovieClip instances advance one frame per tick. Specifying a framerate for\nthe BitmapMovieClip will cause it to advance based on elapsed time between ticks as\nappropriate to maintain the target framerate.\n\nFor example, if a BitmapMovieClip with a framerate of 10 is placed on a Stage being updated\nat 40fps, then the BitmapMovieClip will advance roughly one frame every 4 ticks. This will\nnot be exact, because the time between each tick will vary slightly between frames.\n\nThis feature is dependent on the tick event object (or an object with an appropriate \"delta\"\nproperty) being passed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "0",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 252,
            "description": "When the BitmapMovieClip is framerate independent, this is the time elapsed from frame 0 in\nseconds.",
            "itemtype": "property",
            "name": "elapsedTime",
            "type": "Number",
            "default": "0",
            "access": "public",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 272,
            "description": "(Read-Only) The total number of frames in the timeline",
            "itemtype": "property",
            "name": "totalFrames",
            "type": "Int",
            "default": "0",
            "readonly": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 287,
            "description": "(Read-Only) The Texture of the current frame",
            "itemtype": "property",
            "name": "currentTexture",
            "type": "createjs.TextureAtlas.Texture",
            "readonly": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 303,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a\ncanvas. This does not account for whether it would be visible within the boundaries of the\nstage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 317,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and\ntransform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current\n                           cache. For example, used for drawing the cache (to prevent it\n                           from simply drawing an existing cache back into itself).",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 340,
            "description": "Sets paused to false.",
            "itemtype": "method",
            "name": "play",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 349,
            "description": "Sets paused to true.",
            "itemtype": "method",
            "name": "stop",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 358,
            "description": "Advances this movie clip to the specified position or label and sets paused to false.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 369,
            "description": "Advances this movie clip to the specified position or label and sets paused to true.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation or frame name to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 380,
            "description": "To provide feature parity with the createjs.MovieClip mixin",
            "itemtype": "method",
            "name": "gotoAndCache",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 386,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in ms to advance by. If 0 or null, time is not\n                     advanced but the timeline is still updated.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 413,
            "description": "Returns a sorted list of the labels defined on this BitmapMovieClip.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "A sorted array of objects with label and position (aka frame)\n                      properties.",
                "type": "Array[Object]"
            },
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 424,
            "description": "Returns a sorted list of the labels which can be played with Animator.",
            "itemtype": "method",
            "name": "getEvents",
            "return": {
                "description": "A sorted array of objects with label, length and position (aka frame)\n  properties.",
                "type": "Array"
            },
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 435,
            "description": "Returns the name of the label on or immediately before the current frame.",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "The name of the current label or null if there is no label.",
                "type": "String"
            },
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 454,
            "description": "Initializes or re-initializes the BitmapMovieClip.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "atlas",
                    "description": "The texture atlas to pull frames from.",
                    "type": "springroll.easeljs.TextureAtlas"
                },
                {
                    "name": "data",
                    "description": "Initialization data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fps",
                            "description": "Framerate to play the movieclip at. Omitting this will use the\n                       current framerate.",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "labels",
                            "description": "A dictionary of the labels in the movieclip to assist in\n                             playing animations.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "The origin of the movieclip.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "{x:0,y:0}"
                        },
                        {
                            "name": "frames",
                            "description": "An array of frame sequences to pull from the texture atlas.",
                            "type": "Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The name to use for the frame sequence. This should\n                                  include a \"#\" to be replaced with the image number.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "min",
                                    "description": "The first frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "max",
                                    "description": "The last frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "digits",
                                    "description": "The maximum number of digits in the names of the frames,\n                                   e.g. myAnim0001 has 4 digits.",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "4"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "description": "The scale at which the art was exported, e.g. a scale of 1.4\n                              means the art was increased in size to 140% before exporting\n                              and should be scaled back down before drawing to the screen.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                }
            ],
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 572,
            "description": "Copies the labels, textures, origin, and framerate from another BitmapMovieClip.\nThe labels and textures are copied by reference, instead of a deep copy.",
            "itemtype": "method",
            "name": "copyFrom",
            "params": [
                {
                    "name": "other",
                    "description": "The movieclip to copy data from.",
                    "type": "BitmapMovieClip"
                }
            ],
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 590,
            "description": "Clone a sprite. Creates a shallow copy of loaded element",
            "itemtype": "method",
            "name": "clone",
            "static": 1,
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite to clone",
                    "type": "springroll.easeljs.BitmapMovieClip"
                },
                {
                    "name": "x",
                    "description": "The initial x position",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "y",
                    "description": "The initial y position",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "springroll.easeljs.BitmapMovieClip"
            },
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 608,
            "description": "Destroys the BitmapMovieClip, removing all children and nulling all reference variables.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 623,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "props",
                    "description": "Properties to copy to the DisplayObject {{#crossLink \"DisplayObject/tick\"}}{{/crossLink}} event object.\nfunction.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 635,
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 666,
            "itemtype": "method",
            "name": "_updateTimeline",
            "access": "protected",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClip.js",
            "line": 697,
            "itemtype": "method",
            "name": "_reset",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.BitmapMovieClip",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClipInstance.js",
            "line": 23,
            "description": "Required to test clip",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The object to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If the clip is compatible with this plugin",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.BitmapMovieClipInstance",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClipTask.js",
            "line": 32,
            "description": "The BitmapMovieClip data source path",
            "itemtype": "property",
            "name": "anim",
            "type": "String",
            "class": "springroll.easeljs.BitmapMovieClipTask",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClipTask.js",
            "line": 42,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.BitmapMovieClipTask",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/BitmapMovieClipTask.js",
            "line": 54,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.BitmapMovieClipTask",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/MovieClipInstance.js",
            "line": 23,
            "description": "Required to test clip",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The object to test",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If the clip is compatible with this plugin",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.MovieClipInstance",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 24,
            "description": "The animation clip to play",
            "itemtype": "property",
            "name": "clip",
            "type": "createjs.MovieClip",
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 30,
            "description": "The framerate which to playback the clip",
            "itemtype": "property",
            "name": "frameRate",
            "type": "Int",
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 36,
            "description": "The list of frame events",
            "itemtype": "property",
            "name": "frameDictionary",
            "type": "Object",
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 49,
            "description": "Build a dictionary of all animations start and end\nframe positions'",
            "itemtype": "method",
            "name": "_buildDictionary",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 91,
            "description": "Play the specificied animation",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "label",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 108,
            "description": "Go to the previous frame of the animation",
            "itemtype": "method",
            "name": "goToPreviousFrame",
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 123,
            "description": "Update the animation when framerate matches animation's framerate",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "elapsed",
                    "description": "Time in milleseconds since last frame update",
                    "type": "Number"
                }
            ],
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/animation/ReversePlayback.js",
            "line": 138,
            "description": "End the frame update loop",
            "itemtype": "method",
            "name": "stop",
            "class": "springroll.easeljs.ReversePlayback",
            "module": "EaselJS Animation",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 47,
            "description": "Reference to the display we are drawing on",
            "itemtype": "property",
            "name": "display",
            "type": "Display",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 54,
            "description": "The designed width of the animation",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 61,
            "description": "The designed height of the animation",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 68,
            "description": "The time elapsed in seconds.",
            "itemtype": "property",
            "name": "_elapsedTime",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 75,
            "description": "Time sorted list of audio that needs to be played, as well as information on if they\nshould be synced or not.",
            "itemtype": "property",
            "name": "_audio",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 84,
            "description": "Index of the sound that is next up in _audio.",
            "itemtype": "property",
            "name": "_audioIndex",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 91,
            "description": "The clip that is being animated.",
            "itemtype": "property",
            "name": "_clip",
            "type": "createjs.MovieClip",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 98,
            "description": "The queue of sound instances of playing audio that the animation should be synced to.\nOnly the most recent active one will be synced to.",
            "itemtype": "property",
            "name": "_activeSyncAudio",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 106,
            "description": "The time in seconds into the animation that the current synced audio started.",
            "itemtype": "property",
            "name": "_soundStartTime",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 113,
            "description": "Array of active SoundInstances that are not the currently synced one.",
            "itemtype": "property",
            "name": "_activeAudio",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 120,
            "description": "If the audio has finished playing.",
            "itemtype": "property",
            "name": "_audioFinished",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 127,
            "description": "The function to call when playback is complete.",
            "itemtype": "property",
            "name": "_endCallback",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 134,
            "description": "The Captions object to use to manage captions.",
            "itemtype": "property",
            "name": "_captions",
            "type": "Captions",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 169,
            "description": "Audio sort based on the start time",
            "itemtype": "method",
            "name": "audioSorter",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 179,
            "description": "Listener for when the Application is resized.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width of the display.",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "The new height of the display.",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 210,
            "description": "Starts playing the cutscene.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call when playback is complete.",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 265,
            "description": "Callback for when the audio has finished playing.",
            "itemtype": "method",
            "name": "_audioCallback",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 319,
            "description": "Listener for frame updates.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "elapsed",
                    "description": "Time in milliseconds",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 426,
            "description": "Stops playback of the cutscene.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "doCallback",
                    "description": "If the end callback should be performed.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/Cutscene.js",
            "line": 463,
            "description": "Destroys the cutscene.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.Cutscene",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 39,
            "description": "The path to the flash asset",
            "itemtype": "property",
            "name": "anim",
            "type": "String|Object",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 45,
            "description": "The framerate, defaults to Application framerate",
            "itemtype": "property",
            "name": "fps",
            "type": "Int",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 51,
            "description": "The name of the animation class",
            "itemtype": "property",
            "name": "animClass",
            "type": "String",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 57,
            "description": "The designed width of the animation",
            "itemtype": "property",
            "name": "width",
            "type": "Int",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 63,
            "description": "The designed height of the animation",
            "itemtype": "property",
            "name": "height",
            "type": "Int",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 69,
            "description": "The collection of objects with alias, start and sync property",
            "itemtype": "property",
            "name": "audio",
            "type": "Array",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 75,
            "description": "The collection of images to preload, will be cached",
            "itemtype": "property",
            "name": "images",
            "type": "Object",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 81,
            "description": "The name of the window object library items hang on",
            "itemtype": "property",
            "name": "libName",
            "type": "String",
            "default": "'lib'",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 88,
            "description": "The name of the window object images hang on",
            "itemtype": "property",
            "name": "imagesName",
            "type": "String",
            "default": "'images'",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 95,
            "description": "The display to use, defaults to main App's main display",
            "itemtype": "property",
            "name": "display",
            "type": "springroll.AbstractDisplay",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 107,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 120,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/cutscene/CutsceneTask.js",
            "line": 193,
            "description": "Destroy",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.CutsceneTask",
            "module": "EaselJS Cutscene",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/BitmapTask.js",
            "line": 33,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.BitmapTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/BitmapTask.js",
            "line": 47,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.BitmapTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 26,
            "description": "Reference to the node element",
            "itemtype": "property",
            "name": "dom",
            "type": "NodeElement",
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 32,
            "description": "The collection of loaded symbols by name",
            "itemtype": "property",
            "name": "symbols",
            "type": "Array",
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 38,
            "description": "The name of the output lib name",
            "itemtype": "property",
            "name": "libName",
            "type": "String",
            "default": "'lib'",
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 45,
            "description": "The name of the output lib name",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 58,
            "description": "The collection of all symbols and assets",
            "itemtype": "property",
            "name": "globalSymbols",
            "type": "Object",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 66,
            "description": "Get the name of all the library elements of the dom text",
            "itemtype": "method",
            "name": "parseSymbols",
            "params": [
                {
                    "name": "text",
                    "description": "The DOM text contents",
                    "type": "String"
                }
            ],
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArt.js",
            "line": 115,
            "description": "Cleanup the Flash library that's been loaded",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.FlashArt",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 36,
            "description": "The TextureAtlas data source path",
            "itemtype": "property",
            "name": "atlas",
            "type": "String",
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 42,
            "description": "The atlas source path",
            "itemtype": "property",
            "name": "image",
            "type": "String",
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 48,
            "description": "The atlas color source path",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 54,
            "description": "The atlas alpha source path",
            "itemtype": "property",
            "name": "alpha",
            "type": "String",
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 66,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 82,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtAtlasTask.js",
            "line": 93,
            "description": "Load a texture atlas from the properties",
            "itemtype": "method",
            "name": "loadAtlas",
            "params": [
                {
                    "name": "assets",
                    "description": "The assets object to load",
                    "type": "Object"
                },
                {
                    "name": "done",
                    "description": "Callback when complete, returns new TextureAtlas",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.FlashArtAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtImageTask.js",
            "line": 33,
            "description": "The atlas color source path",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "springroll.FlashArtImageTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtImageTask.js",
            "line": 39,
            "description": "The atlas alpha source path",
            "itemtype": "property",
            "name": "alpha",
            "type": "String",
            "class": "springroll.FlashArtImageTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtImageTask.js",
            "line": 51,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.FlashArtImageTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtImageTask.js",
            "line": 65,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.FlashArtImageTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 37,
            "description": "The path to the flash asset",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "springroll.easeljs.FlashArtTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 43,
            "description": "Any image, atlas, or SpriteSheet assets that should be loaded along with this piece\nof flash art.",
            "itemtype": "property",
            "name": "images",
            "type": "Array",
            "class": "springroll.easeljs.FlashArtTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 58,
            "description": "The name of the window object library items hang on",
            "itemtype": "property",
            "name": "libName",
            "type": "String",
            "default": "'lib'",
            "class": "springroll.easeljs.FlashArtTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 65,
            "description": "The name of the window object images hang on",
            "itemtype": "property",
            "name": "imagesName",
            "type": "String",
            "default": "'images'",
            "class": "springroll.easeljs.FlashArtTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 76,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.FlashArtTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashArtTask.js",
            "line": 91,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.FlashArtTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashSpriteSheetTask.js",
            "line": 30,
            "description": "The name of the window object library items hang on",
            "itemtype": "property",
            "name": "globalProperty",
            "type": "String",
            "default": "'ss'",
            "class": "springroll.easeljs.FlashSpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashSpriteSheetTask.js",
            "line": 42,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.FlashSpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/FlashSpriteSheetTask.js",
            "line": 56,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.FlashSpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/SpriteSheetTask.js",
            "line": 30,
            "description": "The collection of images paths",
            "itemtype": "property",
            "name": "images",
            "type": "String",
            "class": "springroll.easeljs.SpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/SpriteSheetTask.js",
            "line": 36,
            "description": "The frame definitions as used by the createjs.SpriteSheet object",
            "itemtype": "property",
            "name": "frames",
            "type": "Array|Object",
            "class": "springroll.easeljs.SpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/SpriteSheetTask.js",
            "line": 42,
            "description": "The name of the window object library items hang on",
            "itemtype": "property",
            "name": "globalProperty",
            "type": "String",
            "default": "'ss'",
            "class": "springroll.easeljs.SpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/SpriteSheetTask.js",
            "line": 53,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.SpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/SpriteSheetTask.js",
            "line": 68,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.SpriteSheetTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 25,
            "description": "The an array of image elements (Image|HTMLCanvasElement) that frames in texture atlas use.",
            "itemtype": "property",
            "name": "_image",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.TextureAtlas",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 40,
            "description": "The dictionary of Textures that this atlas consists of.",
            "itemtype": "property",
            "name": "frames",
            "type": "Object",
            "class": "springroll.easeljs.TextureAtlas",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 46,
            "description": "The scale of the texture atlas, if available in spritesheet metadata. Defaults to 1,\notherwise",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "class": "springroll.easeljs.TextureAtlas",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 85,
            "description": "Gets a frame by name.",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "name",
                    "description": "The frame name to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The texture by that name, or null if it doesn't exist.",
                "type": "createjs.TextureAtlas.Texture"
            },
            "class": "springroll.easeljs.TextureAtlas",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 96,
            "description": "Get an array of Textures that match a specific name. If a frame in a sequence is not in the\natlas, the previous frame in the sequence is used in place of it.",
            "itemtype": "method",
            "name": "getFrames",
            "params": [
                {
                    "name": "name",
                    "description": "The base name of all frames to look for, like \"anim_#\" to search for an\n                 animation exported as anim_0001.png (the \".png\" is dropped when the\n                 TextureAtlas is loaded).",
                    "type": "String"
                },
                {
                    "name": "numberMin",
                    "description": "The number to start on while looking for frames. Flash PNG sequences\n                   generally start at 1.",
                    "type": "Int"
                },
                {
                    "name": "numberMax",
                    "description": "The number to go until while looking for frames. If your animation runs\n                   from frame 0001 to frame 0014, numberMax would be 14.",
                    "type": "Int"
                },
                {
                    "name": "maxDigits",
                    "description": "Maximum number of digits, like 4 for an animation exported as\n                       anim_0001.png",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "4"
                },
                {
                    "name": "outArray",
                    "description": "If already using an array, this can fill it instead of creating a\n                      new one.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The collection of createjs.TextureAtlas.Textures.",
                "type": "Array"
            },
            "class": "springroll.easeljs.TextureAtlas",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 169,
            "description": "Destroys the TextureAtlas by nulling the image and frame dictionary references.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.TextureAtlas",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 189,
            "description": "The image element that this texture references.",
            "itemtype": "property",
            "name": "image",
            "type": "Image|HTMLCanvasElement",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 194,
            "description": "If this texture has been rotated (90 degrees clockwise).",
            "itemtype": "property",
            "name": "rotated",
            "type": "Boolean",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 201,
            "description": "The frame rectangle within the image.",
            "itemtype": "property",
            "name": "frame",
            "type": "createjs.Rectangle",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 206,
            "description": "If this texture has been trimmed.",
            "itemtype": "property",
            "name": "trimmed",
            "type": "Boolean",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 211,
            "description": "The offset that the trimmed sprite should be placed at to restore it to the untrimmed position.",
            "itemtype": "property",
            "name": "offset",
            "type": "createjs.Point",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 216,
            "description": "The width of the untrimmed texture.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlas.js",
            "line": 221,
            "description": "The height of the untrimmed texture.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "springroll.easeljs.Texture",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 33,
            "description": "The TextureAtlas data source path",
            "itemtype": "property",
            "name": "atlas",
            "type": "String",
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 39,
            "description": "The atlas source path",
            "itemtype": "property",
            "name": "image",
            "type": "String",
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 45,
            "description": "The atlas color source path",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 51,
            "description": "The atlas alpha source path",
            "itemtype": "property",
            "name": "alpha",
            "type": "String",
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 61,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 76,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/display/TextureAtlasTask.js",
            "line": 87,
            "description": "Load a texture atlas from the properties",
            "itemtype": "method",
            "name": "loadAtlas",
            "params": [
                {
                    "name": "assets",
                    "description": "The assets object to load",
                    "type": "Object"
                },
                {
                    "name": "done",
                    "description": "Callback when complete, returns new TextureAtlas",
                    "type": "Function"
                }
            ],
            "class": "springroll.easeljs.TextureAtlasTask",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/mixins/Container.js",
            "line": 18,
            "description": "Does a cache by the nominalBounds set from Flash",
            "itemtype": "method",
            "name": "cacheByBounds",
            "params": [
                {
                    "name": "buffer",
                    "description": "The space around the nominal bounds to include in cache image",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "scale",
                    "description": "The scale to cache the container by.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "createjs.Container",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Container.js",
            "line": 29,
            "description": "Does a cache by a given rectangle",
            "itemtype": "method",
            "name": "cacheByRect",
            "params": [
                {
                    "name": "rect",
                    "description": "The rectangle to cache with.",
                    "type": "createjs.Rectangle"
                },
                {
                    "name": "buffer",
                    "description": "Additional space around the rectangle to include in cache image",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "scale",
                    "description": "The scale to cache the container by.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "createjs.Container",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/MovieClip.js",
            "line": 21,
            "description": "Combines gotoAndStop and cache in createjs to cache right away. This caches by the bounds\nexported from Flash, preferring frameBounds and falling back to nominalBounds.",
            "itemtype": "method",
            "name": "gotoAndCacheByBounds",
            "params": [
                {
                    "name": "frame",
                    "description": "The 0-index frame number or frame label",
                    "type": "String|int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "buffer",
                    "description": "The space around the bounds to include in cache image",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "scale",
                    "description": "The scale to cache the container by.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ],
            "class": "createjs.MovieClip",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 19,
            "description": "Returns the dot product between this point and another one.",
            "itemtype": "method",
            "name": "dotProd",
            "params": [
                {
                    "name": "other",
                    "description": "The point to form a dot product with",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The dot product between the two points."
            },
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 30,
            "description": "Returns the length (or magnitude) of this point.",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length of this point."
            },
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 40,
            "description": "Returns the squared length (or magnitude) of this point. This is faster than length().",
            "itemtype": "method",
            "name": "lengthSq",
            "return": {
                "description": "The length squared of this point."
            },
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 50,
            "description": "Reduces the point to a length of 1.",
            "itemtype": "method",
            "name": "normalize",
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 61,
            "description": "Subtracts the x and y values of a point from this point.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "other",
                    "description": "The point to subtract from this one",
                    "type": "Point"
                }
            ],
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 72,
            "description": "Adds the x and y values of a point to this point.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "other",
                    "description": "The point to add to this one",
                    "type": "Point"
                }
            ],
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 83,
            "description": "Truncate the length of the point to a maximum.",
            "itemtype": "method",
            "name": "truncate",
            "params": [
                {
                    "name": "maxLength",
                    "description": "The maximum length to allow in this point.",
                    "type": "Number"
                }
            ],
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 99,
            "description": "Multiplies the x and y values of this point by a value.",
            "itemtype": "method",
            "name": "scaleBy",
            "params": [
                {
                    "name": "value",
                    "description": "The value to scale by.",
                    "type": "Number"
                }
            ],
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 110,
            "description": "Calculates the distance between this and another point.",
            "itemtype": "method",
            "name": "distance",
            "params": [
                {
                    "name": "other",
                    "description": "The point to calculate the distance to.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The distance.",
                "type": "Number"
            },
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/Point.js",
            "line": 123,
            "description": "Calculates the squared distance between this and another point.",
            "itemtype": "method",
            "name": "distanceSq",
            "params": [
                {
                    "name": "other",
                    "description": "The point to calculate the distance to.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The distance squared.",
                "type": "Number"
            },
            "class": "createjs.Point",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/mixins/SpriteSheet.js",
            "line": 18,
            "description": "Destroy this spritesheet and release references, \ndon't use after this.",
            "itemtype": "method",
            "name": "destroy",
            "class": "createjs.SpriteSheet",
            "module": "EaselJS Display",
            "namespace": "createjs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 29,
            "description": "Reference to the app",
            "itemtype": "property",
            "name": "app",
            "type": "Application",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 35,
            "description": "Reference to the app's config",
            "itemtype": "property",
            "name": "config",
            "type": "Object",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 41,
            "description": "All panel should probably have a background image",
            "itemtype": "property",
            "name": "background",
            "type": "createjs.Bitmap",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 51,
            "description": "Should be called whenever a state enters this panel, Implementation-specific",
            "itemtype": "method",
            "name": "setup",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 60,
            "description": "Should be called whenever a state exits this panel, the default\nbehavior is to remove all children of the panel. It will stop\nany movieclip, destroy any objects, remove DwellTimers, etc.",
            "itemtype": "method",
            "name": "teardown",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 72,
            "description": "Removes a collection of objects from the stage and destroys them if we cant.",
            "example": [
                " this.removeChildren(this.skipButton, this.character);"
            ],
            "itemtype": "method",
            "name": "cleanupChildren",
            "params": [
                {
                    "name": "children",
                    "description": "Assets to clean can either be individual children or collections of children",
                    "type": "Array|*"
                }
            ],
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BasePanel.js",
            "line": 117,
            "description": "Destroy and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.BasePanel",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BaseState.js",
            "line": 55,
            "description": "The global images loaded",
            "itemtype": "property",
            "name": "_images",
            "type": "Array",
            "access": "protected",
            "tagname": "",
            "class": "springroll.easeljs.BaseState",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BaseState.js",
            "line": 117,
            "description": "Implementation specific for override. When you need to add additional preload\ntasks to your state, override this function.",
            "itemtype": "method",
            "name": "addTasks",
            "see": [
                "{@link springroll.State#preloading}"
            ],
            "deprecated": true,
            "deprecationMessage": "since 0.4.0",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "tasks",
                    "description": "The list of preload tasks",
                    "type": "Array"
                }
            ],
            "class": "springroll.easeljs.BaseState",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/BaseState.js",
            "line": 128,
            "description": "Implementation specific for override. When all the assets, scaling and panel\nsetup have completed.",
            "itemtype": "method",
            "name": "onAssetsLoaded",
            "see": [
                "{@link springroll.State#loaded}"
            ],
            "deprecated": true,
            "deprecationMessage": "since 0.4.0",
            "access": "protected",
            "tagname": "",
            "class": "springroll.easeljs.BaseState",
            "module": "EaselJS States",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/states/ManifestsPlugin.js",
            "line": 21,
            "description": "Event when the manifest is finished loading",
            "itemtype": "event",
            "name": "manifestLoaded",
            "params": [
                {
                    "name": "assets",
                    "description": "The object of additional assets to load",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "EaselJS States",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/states/ManifestsPlugin.js",
            "line": 27,
            "description": "The path to the concatinated FLA exported manifests. It's useful\nto load all the manifests at once. This JSON object contains a\ndictionary of state alias and contains an array of manifest assets\n(e.g. `{\"id\": \"PlayButton\", \"src\": \"assets/images/button.png\"}`.\nSet to null and no manifest will be auto-loaded.",
            "itemtype": "property",
            "name": "options.manifestsPath",
            "type": "String",
            "readonly": "",
            "default": "null",
            "class": "springroll.Application",
            "module": "EaselJS States",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/states/ManifestsPlugin.js",
            "line": 51,
            "description": "The collection of loading assets by state",
            "itemtype": "property",
            "name": "_manifests",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "EaselJS States",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/states/ManifestsPlugin.js",
            "line": 58,
            "description": "Read-only getter to return _manifests",
            "itemtype": "property",
            "name": "manifests",
            "type": "Object",
            "readonly": "",
            "class": "springroll.Application",
            "module": "EaselJS States",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/states/ManifestsPlugin.js",
            "line": 92,
            "description": "Callback to when manifests have been loaded",
            "itemtype": "method",
            "name": "onManifestsLoaded",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "tasks",
                    "description": "The collection of preload tasks",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "EaselJS States",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 165,
            "description": "The sprite that is the body of the button.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "back",
            "type": "createjs.Bitmap",
            "readonly": "",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 173,
            "description": "The text field of the button. The label is centered by both width and height on the\nbutton.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "label",
            "type": "createjs.Text",
            "readonly": "",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 183,
            "description": "Callback for mouse over, bound to this button.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_overCB",
            "type": "Function",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 190,
            "description": "Callback for mouse out, bound to this button.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_outCB",
            "type": "Function",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 197,
            "description": "Callback for mouse down, bound to this button.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_downCB",
            "type": "Function",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 204,
            "description": "Callback for press up, bound to this button.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_upCB",
            "type": "Function",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 211,
            "description": "Callback for click, bound to this button.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_clickCB",
            "type": "Function",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 218,
            "description": "A dictionary of state booleans, keyed by state name.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_stateFlags",
            "type": "Object",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 225,
            "description": "An array of state names (Strings), in their order of priority.\nThe standard order previously was\n[\"highlighted\", \"disabled\", \"down\", \"over\", \"selected\", \"up\"].",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_statePriority",
            "type": "Array",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 234,
            "description": "A dictionary of state graphic data, keyed by state name.\nEach object contains the sourceRect (src) and optionally 'trim', another Rectangle.\nAdditionally, each object will contain a 'label' object if the button has a text label.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_stateData",
            "type": "Object",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 243,
            "description": "The width of the button art, independent of the scaling of the button itself.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_width",
            "type": "Number",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 250,
            "description": "The height of the button art, independent of the scaling of the button itself.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_height",
            "type": "Number",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 257,
            "description": "An offset to button positioning, generally used to adjust for a highlight around the\nbutton.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_offset",
            "type": "createjs.Point",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 424,
            "description": "An event for when the button is pressed (while enabled).",
            "static": 1,
            "itemtype": "property",
            "name": "BUTTON_PRESS",
            "type": "String",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 431,
            "description": "An event for when the button is moused over (while enabled).",
            "static": 1,
            "itemtype": "property",
            "name": "BUTTON_OVER",
            "type": "String",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 438,
            "description": "An event for when the button is moused out (while enabled).",
            "static": 1,
            "itemtype": "property",
            "name": "BUTTON_OUT",
            "type": "String",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 479,
            "description": "The width of the button, based on the width of back. This value is affected by scale.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 495,
            "description": "The height of the button, based on the height of back. This value is affected by scale.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 511,
            "description": "Sets the text of the label. This does nothing if the button was not initialized with a label.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": "The text to set the label to.",
                    "type": "String"
                }
            ],
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 545,
            "description": "Whether or not the button is enabled.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 583,
            "description": "Adds a property to the button. Setting the property sets the value in\n_stateFlags and calls _updateState().",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_addProperty",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The property name to add to the button.",
                    "type": "String"
                }
            ],
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 614,
            "description": "Updates back based on the current button state.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_updateState",
            "return": {
                "description": "The state data for the active button state, so that subclasses can use the\n                 value picked by this function without needing to calculate it themselves.",
                "type": "Object"
            },
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 685,
            "description": "The callback for when the button receives a mouse down event.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onMouseDown",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 698,
            "description": "The callback for when the button for when the mouse/touch is released on the button\n- only when the button was held down initially.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onMouseUp",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 713,
            "description": "The callback for when the button the button is clicked or tapped on. This is\nthe most reliable way of detecting mouse up/touch end events that are on this button\nwhile letting the pressup event handle the mouse up/touch ends on and outside the button.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onClick",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 725,
            "description": "The callback for when the button is moused over.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onMouseOver",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 738,
            "description": "The callback for when the mouse leaves the button area.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onMouseOut",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 751,
            "description": "Destroys the button.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 771,
            "description": "Generates a desaturated up state as a disabled state, and an update with a solid colored\nglow for a highlighted state.",
            "itemtype": "method",
            "name": "generateDefaultStates",
            "static": 1,
            "params": [
                {
                    "name": "image",
                    "description": "The image to use for all of the button states, in the\n                                       standard up/over/down format.",
                    "type": "Image|HTMLCanvasElement"
                },
                {
                    "name": "disabledSettings",
                    "description": "The settings object for the disabled state. If omitted, no\n                                   disabled state is created.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "saturation",
                            "description": "The saturation adjustment for the disabled\n                                              state. 100 is fully saturated, 0 is unchanged,\n                                              -100 is desaturated.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "brightness",
                            "description": "The brightness adjustment for the disabled\n                                              state. 100 is fully bright, 0 is unchanged,\n                                              -100 is completely dark.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "contrast",
                            "description": "The contrast adjustment for the disabled state.\n                                            100 is full contrast, 0 is unchanged, -100 is no\n                                            contrast.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "highlightSettings",
                    "description": "The settings object for the highlight state. If omitted,\n                                    no state is created.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "size",
                            "description": "How many pixels to make the glow, eg 8 for an\n                                         8 pixel increase on each side.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "red",
                            "description": "The red value for the glow, from 0 to 255.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "The green value for the glow, from 0 to 255.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "The blue value for the glow, from 0 to 255.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "The alpha value for the glow, from 0 to 255,\n                                              with 0 being transparent and 255 fully opaque.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "255"
                        },
                        {
                            "name": "rgba",
                            "description": "An array of values to use for red, green, blue, and\n                                        optionally alpha that can be used instead of\n                                        providing separate properties on highlightSettings.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "An object for use as the 'imageSettings' parameter on a new Button.",
                "type": "Object"
            },
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/Button.js",
            "line": 952,
            "description": "Generates an 'imageSettings' from a TextureAtlas, a base name for all frames, and a list\nof state priorities.",
            "itemtype": "method",
            "name": "generateSettingsFromAtlas",
            "static": 1,
            "params": [
                {
                    "name": "atlas",
                    "description": "The TextureAtlas to pull all frames from.",
                    "type": "springroll.easeljs.TextureAtlas"
                },
                {
                    "name": "baseName",
                    "description": "The base name for all frames in the atlas.",
                    "type": "String"
                },
                {
                    "name": "statePriority",
                    "description": "The state order, as well as determining frame names in the\n                           atlas. Each state frame name in the atlas should be\n                           <code>baseName + \"_\" + statePriority[i]</code>.",
                    "type": "Array"
                }
            ],
            "class": "springroll.easeljs.Button",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 40,
            "description": "The object that's being dragged, or a dictionary of DragData being dragged\nby id if multitouch is true.",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "draggedObj",
            "type": "createjs.DisplayObject|Dictionary",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 49,
            "description": "The radius in pixel to allow for dragging, or else does sticky click",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "dragStartThreshold",
            "default": "20",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 57,
            "description": "The position x, y of the mouse down on the stage. This is only used\nwhen multitouch is false - the DragData has it when multitouch is true.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "mouseDownStagePos",
            "type": "Object",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 68,
            "description": "The position x, y of the object when interaction with it started. If multitouch is\ntrue, then this will only be set during a drag stop callback, for the object that just\nstopped getting dragged.",
            "itemtype": "property",
            "name": "mouseDownObjPos",
            "type": "Object",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 79,
            "description": "If sticky click dragging is allowed.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "allowStickyClick",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 87,
            "description": "Is the move touch based",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "isTouchMove",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 96,
            "description": "Is the drag being held on mouse down (not sticky clicking)",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "isHeldDrag",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 105,
            "description": "Is the drag a sticky clicking (click on a item, then mouse the mouse)",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "isStickyClick",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 114,
            "description": "Settings for snapping.\n\nFormat for snapping to a list of points:\n{\n\tmode:\"points\",\n\tdist:20,//snap when within 20 pixels/units\n\tpoints:[\n\t\t{ x: 20, y:30 },\n\t\t{ x: 50, y:10 }\n\t]\n}",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "snapSettings",
            "type": "Object",
            "default": "null",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 133,
            "description": "Reference to the stage",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_theStage",
            "type": "createjs.Stage",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 143,
            "description": "The offset from the dragged object's position that the initial mouse event\nwas at. This is only used when multitouch is false - the DragData has\nit when multitouch is true.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragOffset",
            "type": "createjs.Point",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 152,
            "description": "The pointer id that triggered the drag. This is only used when multitouch is false\n- the DragData is indexed by pointer id when multitouch is true.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragPointerID",
            "type": "Number",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 160,
            "description": "Callback when we start dragging",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragStartCallback",
            "type": "Function",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 167,
            "description": "Callback when we are done dragging",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragEndCallback",
            "type": "Function",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 179,
            "description": "The collection of draggable objects",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_draggableObjects",
            "type": "Array",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 186,
            "description": "A point for reuse instead of lots of object creation.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_helperPoint",
            "type": "createjs.Point",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 193,
            "description": "If this DragManager is using multitouch for dragging.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_multitouch",
            "type": "Boolean",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 204,
            "description": "If the DragManager allows multitouch dragging. Setting this stops any current\ndrags.",
            "itemtype": "property",
            "name": "multitouch",
            "type": "Boolean",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 235,
            "description": "Manually starts dragging an object. If a mouse down event is not\nsupplied as the second argument, it defaults to a held drag, that ends as\nsoon as the mouse is released. When using multitouch, passing a mouse event is\nrequired.",
            "itemtype": "method",
            "name": "startDrag",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object that should be dragged.",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "ev",
                    "description": "A mouse down event that should be considered to have\n                               started the drag, to determine what type of drag should be\n                               used.",
                    "type": "createjs.MouseEvent"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 252,
            "description": "Mouse down on an obmect",
            "itemtype": "method",
            "name": "_objMouseDown",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ev",
                    "description": "A mouse down event to listen to to determine\n                               what type of drag should be used.",
                    "type": "createjs.MouseEvent"
                },
                {
                    "name": "object",
                    "description": "The object that should be dragged.",
                    "type": "createjs.DisplayObject"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 340,
            "description": "Start the sticky click",
            "itemtype": "method",
            "name": "_triggerStickyClick",
            "params": [
                {
                    "name": "ev",
                    "description": "The mouse down event",
                    "type": "createjs.MouseEvent"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 355,
            "description": "Start hold dragging",
            "itemtype": "method",
            "name": "_triggerHeldDrag",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ev",
                    "description": "The mouse down event",
                    "type": "createjs.MouseEvent"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 386,
            "description": "Internal start dragging on the stage",
            "itemtype": "method",
            "name": "_startDrag",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 408,
            "description": "Stops dragging the currently dragged object.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "stopDrag",
            "params": [
                {
                    "name": "doCallback",
                    "description": "If the drag end callback should be called.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "obj",
                    "description": "A specific object to stop dragging, if multitouch\n                                    is true. If this is omitted, it stops all drags.",
                    "type": "createjs.DisplayObject",
                    "optional": true
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 434,
            "description": "Internal stop dragging on the stage",
            "itemtype": "method",
            "name": "_stopDrag",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ev",
                    "description": "Mouse up event",
                    "type": "createjs.MouseEvent"
                },
                {
                    "name": "doCallback",
                    "description": "If we should do the callback",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 510,
            "description": "Update the object position based on the mouse",
            "itemtype": "method",
            "name": "_updateObjPosition",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "ev",
                    "description": "Mouse move event",
                    "type": "createjs.MouseEvent"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 565,
            "description": "Handles snapping the dragged object to the nearest among a list of points",
            "itemtype": "method",
            "name": "_handlePointSnap",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "localMousePos",
                    "description": "The mouse position in the same\n                                    space as the dragged object.",
                    "type": "createjs.Point"
                },
                {
                    "name": "dragOffset",
                    "description": "The drag offset for the dragged object.",
                    "type": "createjs.Point"
                },
                {
                    "name": "obj",
                    "description": "The object to snap.",
                    "type": "createjs.DisplayObject"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 627,
            "description": "Adds properties and functions to the object - use enableDrag() and disableDrag() on\nobjects to enable/disable them (they start out disabled). Properties added to objects:\n_dragBounds (Rectangle), _dragOffset (Point), _onMouseDownListener (Function),\n_dragMan (springroll.DragManager) reference to the DragManager\nthese will override any existing properties of the same name",
            "itemtype": "method",
            "name": "addObject",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "The display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "bounds",
                    "description": "The rectangle bounds. 'right' and 'bottom' properties\n                                   will be added to this object.",
                    "type": "createjs.Rectangle",
                    "optional": true
                },
                {
                    "name": "dragOffset",
                    "description": "A specific drag offset to use each time, instead of\n                                     the mousedown/touchstart position relative to the\n                                     object. This is useful if you want something to always\n                                     be dragged from a specific position, like the base of\n                                     a torch.",
                    "type": "createjs.Point",
                    "optional": true
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 665,
            "description": "Removes properties and functions added by addObject().",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "removeObject",
            "params": [
                {
                    "name": "obj",
                    "description": "The display object",
                    "type": "createjs.DisplayObject"
                }
            ],
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/DragManager.js",
            "line": 687,
            "description": "Destroy the manager",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.DragManager",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 26,
            "description": "The audio alias to use for click events",
            "itemtype": "property",
            "name": "clickAlias",
            "type": "String",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 32,
            "description": "The audio alias to use for mouse over events",
            "itemtype": "property",
            "name": "overAlias",
            "type": "String",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 38,
            "description": "If the audio is enabled",
            "itemtype": "property",
            "name": "_audioEnabled",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 58,
            "description": "Handler for the BUTTON_PRESS event",
            "itemtype": "method",
            "name": "_onButtonPress",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 71,
            "description": "Handler for rollover event.",
            "itemtype": "method",
            "name": "_onRollover",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 84,
            "description": "If audio should be played for this button.",
            "itemtype": "property",
            "name": "audioEnabled",
            "type": "Boolean",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/ui/SoundButton.js",
            "line": 121,
            "description": "Don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.SoundButton",
            "module": "EaselJS UI",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/utils/BitmapUtils.js",
            "line": 18,
            "description": "Replaces Bitmaps in the global lib dictionary with a faux Bitmap\nthat pulls the image from a spritesheet. This function should be\ncalled after you have loaded up javascript assets exported from Flash,\nbut before you have instantiated those assets.",
            "itemtype": "method",
            "name": "loadSpriteSheet",
            "static": 1,
            "params": [
                {
                    "name": "spritesheetData",
                    "description": "The JSON object describing the frames in the atlas. This is\n                                expected to fit the JSON Hash format as exported from\n                                TexturePacker.",
                    "type": "Object"
                },
                {
                    "name": "spritesheetImage",
                    "description": "The spritesheet image that contains all of\n                                                  the frames.",
                    "type": "Image|HTMLCanvasElement"
                },
                {
                    "name": "scale",
                    "description": "The scale to apply to all sprites from the spritesheet. For\n                          example, a half sized spritesheet should have a scale of 2.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "libName",
                    "description": "The global dictionary to add items to.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'lib'"
                }
            ],
            "class": "springroll.easeljs.BitmapUtils",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/utils/BitmapUtils.js",
            "line": 138,
            "description": "Creates a faux Bitmap from a TextureAtlas entry.",
            "itemtype": "method",
            "name": "bitmapFromTexture",
            "static": 1,
            "params": [
                {
                    "name": "texture",
                    "description": "The texture from a TextureAtlas to create the Bitmap analogue from.",
                    "type": "Texture"
                },
                {
                    "name": "scale",
                    "description": "A scale for the spritesheet to undo, e.g. a half sized spritesheet\n                    gets a scale of 2 to restore it to normal size.",
                    "type": "Number"
                }
            ],
            "class": "springroll.easeljs.BitmapUtils",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/utils/BitmapUtils.js",
            "line": 181,
            "description": "Replaces Bitmaps in the global lib dictionary with a faux Bitmap\nthat uses a scaled bitmap, so you can load up smaller bitmaps behind\nthe scenes that are scaled back up to normal size, or high res bitmaps\nthat are scaled down.",
            "itemtype": "method",
            "name": "replaceWithScaledBitmap",
            "static": 1,
            "params": [
                {
                    "name": "idOrDict",
                    "description": "A dictionary of Bitmap ids to replace, or a single id.",
                    "type": "String|Object"
                },
                {
                    "name": "scale",
                    "description": "The scale to apply to the image(s).",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                },
                {
                    "name": "libName",
                    "description": "The global dictionary to add items to.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'lib'"
                }
            ],
            "class": "springroll.easeljs.BitmapUtils",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 15,
            "description": "The geometry class for Circle",
            "itemtype": "property",
            "name": "Circle",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "createjs.Circle",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 24,
            "description": "The geometry class for Ellipse",
            "itemtype": "property",
            "name": "Ellipse",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "createjs.Ellipse",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 33,
            "description": "The geometry class for Rectangle",
            "itemtype": "property",
            "name": "Rectangle",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "createjs.Rectangle",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 42,
            "description": "The geometry class for Sector",
            "itemtype": "property",
            "name": "Sector",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "createjs.Sector",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 51,
            "description": "The geometry class for point",
            "itemtype": "property",
            "name": "Point",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "createjs.Point",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 60,
            "description": "The geometry class for Polygon",
            "itemtype": "property",
            "name": "Polygon",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "createjs.Polygon",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 69,
            "description": "If the rotation is expressed in radians",
            "itemtype": "property",
            "name": "useRadians",
            "type": "Boolean",
            "readonly": "",
            "static": 1,
            "default": "false",
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 78,
            "description": "Gets the object's boundaries in its local coordinate space, without any scaling or\nrotation applied.",
            "itemtype": "method",
            "name": "getLocalBounds",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs display object",
                    "type": "createjs.DisplayObject"
                }
            ],
            "return": {
                "description": "A rectangle with additional right and bottom properties.",
                "type": "createjs.Rectangle"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 128,
            "description": "Normalize the object scale",
            "itemtype": "method",
            "name": "getScale",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" to return a specific value",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "A scale object with x and y keys or a single number if direction is set",
                "type": "Object|Number"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 148,
            "description": "Normalize the object position setting",
            "itemtype": "method",
            "name": "setPosition",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "position",
                    "description": "The position object or the value\nif the direction is set.",
                    "type": "Object|Number",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x value",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The y value",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" value",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "createjs.DisplayObject"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 176,
            "description": "Normalize the object position getting",
            "itemtype": "method",
            "name": "getPosition",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\", default is an object of both",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The position as an object with x and y keys if\nno direction value is set, or the value of the specific direction",
                "type": "Object|Number"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 197,
            "description": "Normalize the object scale setting",
            "itemtype": "method",
            "name": "setScale",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs Display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "scale",
                    "description": "The scaling object or scale value for x and y",
                    "type": "Number"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" if setting a specific value, default\nsets both the scale x and scale y.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "createjs.DisplayObject"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 220,
            "description": "Set the pivot or registration point of an object",
            "itemtype": "method",
            "name": "setPivot",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs Display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "pivot",
                    "description": "The object pivot point or the value if the direction is set",
                    "type": "Object|Number",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the pivot point",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The y position of the pivot point",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" the value for specific direction,\ndefault will set using the object.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "createjs.DisplayObject"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 243,
            "description": "Set the hit area of the shape",
            "itemtype": "method",
            "name": "setHitArea",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs Display object",
                    "type": "createjs.DisplayObject"
                },
                {
                    "name": "shape",
                    "description": "The geometry object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "createjs.DisplayObject"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 257,
            "description": "Get the original size of a bitmap",
            "itemtype": "method",
            "name": "getBitmapSize",
            "static": 1,
            "params": [
                {
                    "name": "bitmap",
                    "description": "The bitmap to measure",
                    "type": "createjs.Bitmap"
                }
            ],
            "return": {
                "description": "The width (w) and height (h) of the actual bitmap size",
                "type": "Object"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 297,
            "description": "Remove all children from a display object",
            "itemtype": "method",
            "name": "removeChildren",
            "static": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The display object container",
                    "type": "createjs.Container"
                }
            ],
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/DisplayAdapter.js",
            "line": 308,
            "description": "If a container contains a child",
            "itemtype": "method",
            "name": "contains",
            "static": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The container",
                    "type": "createjs.Container"
                },
                {
                    "name": "child",
                    "description": "The object to test",
                    "type": "createjs.DisplayObject"
                }
            ],
            "return": {
                "description": "If the child contained within the container",
                "type": "Boolean"
            },
            "class": "springroll.easeljs.DisplayAdapter",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 43,
            "description": "The rate at which EaselJS calculates mouseover events, in times/second.",
            "itemtype": "property",
            "name": "mouseOverRate",
            "type": "Int",
            "access": "public",
            "tagname": "",
            "default": "30",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 51,
            "description": "If the display should keep mouse move events running when the display is disabled.",
            "itemtype": "property",
            "name": "keepMouseover",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 58,
            "description": "If preventDefault() should be called on all touch events and mousedown events. Defaults\nto true.",
            "itemtype": "property",
            "name": "_autoPreventDefault",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 74,
            "description": "The rendering library's stage element, the root display object",
            "itemtype": "property",
            "name": "stage",
            "type": "createjs.Stage|createjs.SpriteStage",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 91,
            "description": "An internal helper to avoid creating an object each render\nwhile telling EaselJS the amount of time elapsed.",
            "itemtype": "property",
            "name": "DELTA_HELPER",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 102,
            "description": "If input is enabled on the stage for this display. The default is true.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 142,
            "description": "If preventDefault() should be called on all touch events and mousedown events. Defaults\nto true.",
            "itemtype": "property",
            "name": "autoPreventDefault",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 169,
            "description": "Updates the stage and draws it. This is only called by the Application.\nThis method does nothing if paused is true or visible is false.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame.",
                    "type": "Int"
                },
                {
                    "name": "force",
                    "description": "Will re-render even if the game is paused or not visible",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/easeljs/EaselJSDisplay.js",
            "line": 185,
            "description": "Destroys the display. This method is called by the Application and should\nnot be called directly, use Application.removeDisplay(id).\nThe stage recursively removes all display objects here.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.easeljs.EaselJSDisplay",
            "module": "EaselJS Display",
            "namespace": "springroll.easeljs"
        },
        {
            "file": "src/displays/native/geom/Circle.js",
            "line": 19,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Circle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Circle.js",
            "line": 26,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Circle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Circle.js",
            "line": 33,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Circle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Circle.js",
            "line": 43,
            "description": "Creates a clone of this Circle instance",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the polygon",
                "type": "Circle"
            },
            "class": "springroll.native.Circle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Circle.js",
            "line": 54,
            "description": "Checks if the x, and y coords passed to this function are contained within this circle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the point to test",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the point to test",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if the x/y coords are within this polygon",
                "type": "Boolean"
            },
            "class": "springroll.native.Circle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 20,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Ellipse",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 27,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Ellipse",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 34,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Ellipse",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 41,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Ellipse",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 51,
            "description": "Creates a clone of this Ellipse instance",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the ellipse",
                "type": "Ellipse"
            },
            "class": "springroll.native.Ellipse",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Ellipse.js",
            "line": 62,
            "description": "Checks if the x, and y coords passed to this function are contained within this ellipse",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the point to test",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the point to test",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if the x/y coords are within this ellipse",
                "type": "Boolean"
            },
            "class": "springroll.native.Ellipse",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 18,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 25,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 35,
            "description": "Creates a clone of this point",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the point",
                "type": "Point"
            },
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 46,
            "description": "Returns the dot product between this point and another one.",
            "itemtype": "method",
            "name": "dotProd",
            "params": [
                {
                    "name": "other",
                    "description": "The point to form a dot product with",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The dot product between the two points."
            },
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 57,
            "description": "Returns the length (or magnitude) of this point.",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length of this point."
            },
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 67,
            "description": "Returns the squared length (or magnitude) of this point. This is faster than length().",
            "itemtype": "method",
            "name": "lengthSq",
            "return": {
                "description": "The length squared of this point."
            },
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 77,
            "description": "Reduces the point to a length of 1.",
            "itemtype": "method",
            "name": "normalize",
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 88,
            "description": "Subtracts the x and y values of a point from this point.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "other",
                    "description": "The point to subtract from this one",
                    "type": "Point"
                }
            ],
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 99,
            "description": "Adds the x and y values of a point to this point.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "other",
                    "description": "The point to add to this one",
                    "type": "Point"
                }
            ],
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 110,
            "description": "Truncate the length of the point to a maximum.",
            "itemtype": "method",
            "name": "truncate",
            "params": [
                {
                    "name": "maxLength",
                    "description": "The maximum length to allow in this point.",
                    "type": "Number"
                }
            ],
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 126,
            "description": "Multiplies the x and y values of this point by a value.",
            "itemtype": "method",
            "name": "scaleBy",
            "params": [
                {
                    "name": "value",
                    "description": "The value to scale by.",
                    "type": "Number"
                }
            ],
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 137,
            "description": "creates a serializable form of this object so it may be saved or passed via Bellhop.\nNote that it adds a special property named `__classname` to tell the Reviver\nhow to restore a pristine `Object`",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "serializable object",
                "type": "Object"
            },
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Point.js",
            "line": 153,
            "description": "Works with a reviver function to restore from a native Object \nto an instance of this type.",
            "params": [
                {
                    "name": "inputObj",
                    "description": "serialized object",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "fromJSON",
            "class": "springroll.native.Point",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Polygon.js",
            "line": 42,
            "description": "Creates a clone of this polygon",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the polygon",
                "type": "Polygon"
            },
            "class": "springroll.native.Polygon",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Polygon.js",
            "line": 59,
            "description": "Checks if the x, and y coords passed to this function are contained within this polygon",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the point to test",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the point to test",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if the x/y coords are within this polygon",
                "type": "Boolean"
            },
            "class": "springroll.native.Polygon",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 20,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Rectangle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 27,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Rectangle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 34,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Rectangle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 41,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "default": "0",
            "class": "springroll.native.Rectangle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 51,
            "description": "Creates a clone of this Rectangle",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the rectangle",
                "type": "Rectangle"
            },
            "class": "springroll.native.Rectangle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/geom/Rectangle.js",
            "line": 62,
            "description": "Checks if the x, and y coords passed to this function are contained within this Rectangle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the point to test",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the point to test",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if the x/y coords are within this Rectangle",
                "type": "Boolean"
            },
            "class": "springroll.native.Rectangle",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 16,
            "description": "The geometry class for Circle",
            "itemtype": "property",
            "name": "Circle",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Circle",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 25,
            "description": "The geometry class for Ellipse",
            "itemtype": "property",
            "name": "Ellipse",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Ellipse",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 34,
            "description": "The geometry class for Rectangle",
            "itemtype": "property",
            "name": "Rectangle",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Rectangle",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 43,
            "description": "The geometry class for Sector",
            "itemtype": "property",
            "name": "Sector",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Sector",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 52,
            "description": "The geometry class for point",
            "itemtype": "property",
            "name": "Point",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Point",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 61,
            "description": "The geometry class for Polygon",
            "itemtype": "property",
            "name": "Polygon",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Polygon",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 70,
            "description": "If the rotation is expressed in radians",
            "itemtype": "property",
            "name": "useRadians",
            "type": "Boolean",
            "readonly": "",
            "static": 1,
            "default": "true",
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 79,
            "description": "Gets the object's boundaries in its local coordinate space, without any scaling or\nrotation applied.",
            "itemtype": "method",
            "name": "getLocalBounds",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs display object",
                    "type": "createjs.DisplayObject"
                }
            ],
            "return": {
                "description": "A rectangle with additional right and bottom properties.",
                "type": "createjs.Rectangle"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 93,
            "description": "Normalize the object scale",
            "itemtype": "method",
            "name": "getScale",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The display object",
                    "type": "DisplayObject"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" to return a specific value",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "A scale object with x and y keys or a single number if direction is set",
                "type": "Object|Number"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 110,
            "description": "Normalize the object position setting",
            "itemtype": "method",
            "name": "setPosition",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The display object",
                    "type": "DisplayObject"
                },
                {
                    "name": "position",
                    "description": "The position object or the value\n\t\tif the direction is set.",
                    "type": "Object|Number",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x value",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The y value",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" value",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "DisplayObject"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 128,
            "description": "Normalize the object position getting",
            "itemtype": "method",
            "name": "getPosition",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The display object",
                    "type": "DisplayObject"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\", default is an object of both",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The position as an object with x and y keys if no direction\n\t\tvalue is set, or the value of the specific direction",
                "type": "Object|Number"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 142,
            "description": "Normalize the object scale setting",
            "itemtype": "method",
            "name": "setScale",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The Display object",
                    "type": "DisplayObject"
                },
                {
                    "name": "scale",
                    "description": "The scaling object or scale value for x and y",
                    "type": "Number"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" if setting a specific value, default\n\t\tsets both the scale x and scale y.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "DisplayObject"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 157,
            "description": "Set the pivot or registration point of an object",
            "itemtype": "method",
            "name": "setPivot",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The Display object",
                    "type": "DisplayObject"
                },
                {
                    "name": "pivot",
                    "description": "The object pivot point or the value if the direction is set",
                    "type": "Object|Number",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the pivot point",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The y position of the pivot point",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" the value for specific direction, default\n\t\twill set using the object.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "DisplayObject"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 174,
            "description": "Set the hit area of the shape",
            "itemtype": "method",
            "name": "setHitArea",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The  Display object",
                    "type": "DisplayObject"
                },
                {
                    "name": "shape",
                    "description": "The geometry object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "DisplayObject"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 187,
            "description": "Get the original size of a bitmap",
            "itemtype": "method",
            "name": "getBitmapSize",
            "static": 1,
            "params": [
                {
                    "name": "bitmap",
                    "description": "The bitmap to measure",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "The width (w) and height (h) of the actual bitmap size",
                "type": "Object"
            },
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/DisplayAdapter.js",
            "line": 202,
            "description": "Remove all children from a display object",
            "itemtype": "method",
            "name": "removeChildren",
            "static": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The display object container",
                    "type": "DisplayObjectContainer"
                }
            ],
            "class": "springroll.native.DisplayAdapter",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/native/NativeDisplay.js",
            "line": 29,
            "description": "The main rendering context, typically either `CanvasRenderingContext2d` \nor `WebGLRenderingContext`",
            "itemtype": "property",
            "name": "",
            "type": "RenderingContext",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.native.NativeDisplay",
            "module": "Native Display",
            "namespace": "springroll.native"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 72,
            "description": "The current frame of the movieclip.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 83,
            "description": "The speed at which the AdvancedMovieClip should play.",
            "itemtype": "property",
            "name": "_framerate",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 93,
            "description": "The total time in seconds for the animation.",
            "itemtype": "property",
            "name": "_duration",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 103,
            "description": "The time elapsed from frame 0 in seconds.",
            "itemtype": "property",
            "name": "_t",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 112,
            "description": "An array of frame labels.",
            "itemtype": "property",
            "name": "_labels",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 120,
            "description": "An array of event labels.",
            "itemtype": "property",
            "name": "_events",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 128,
            "description": "The array of Textures that are the MovieClip's frames.",
            "itemtype": "property",
            "name": "_textures",
            "access": "private",
            "tagname": "",
            "type": "Array",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 145,
            "description": "The speed at which the AdvancedMovieClip should play.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "0",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 169,
            "description": "When the BitmapMovieClip is framerate independent, this is the time elapsed from frame 0 in\nseconds.",
            "itemtype": "property",
            "name": "elapsedTime",
            "type": "Number",
            "default": "0",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 196,
            "description": "(Read-Only) The total number of frames in the timeline",
            "itemtype": "property",
            "name": "totalFrames",
            "type": "Int",
            "default": "0",
            "readonly": "",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 213,
            "description": "Advances this movie clip to the specified position or label.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation or frame name to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 247,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in milliseconds to advance by.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 267,
            "description": "Returns a sorted list of the labels defined on this AdvancedMovieClip.",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "A sorted array of objects with label and position (aka frame)\n                       properties.",
                "type": "Array[Object]"
            },
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 278,
            "description": "Returns a sorted list of the labels which can be played with Animator.",
            "itemtype": "method",
            "name": "getEvents",
            "return": {
                "description": "A sorted array of objects with label, length and position (aka frame)\n   properties.",
                "type": "Array"
            },
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 289,
            "description": "Returns the name of the label on or immediately before the current frame.",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "The name of the current label or null if there is no label.",
                "type": "String"
            },
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 308,
            "description": "Initializes or re-initializes the AdvancedMovieClip.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "data",
                    "description": "Initialization data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fps",
                            "description": "Framerate to play the movieclip at. Omitting this will use the\n                        current framerate.",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "labels",
                            "description": "A dictionary of the labels in the movieclip to assist in\n                              playing animations.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "The origin of the movieclip.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "{x:0,y:0}"
                        },
                        {
                            "name": "frames",
                            "description": "An array of frame sequences to pull from the texture atlas.",
                            "type": "Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The name to use for the frame sequence. This should\n                                   include a \"#\" to be replaced with the image number.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "min",
                                    "description": "The first frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "max",
                                    "description": "The last frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "digits",
                                    "description": "The maximum number of digits in the names of the frames,\n                                    e.g. myAnim0001 has 4 digits.",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "4"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "description": "The scale at which the art was exported, e.g. a scale of 1.4\n                               means the art was increased in size to 140% before exporting\n                               and should be scaled back down before drawing to the screen.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                },
                {
                    "name": "atlas",
                    "description": "A TextureAtlas to pull frames from. If omitted,\n                                              frames are pulled from Pixi's global texture\n                                              cache.",
                    "type": "springroll.pixi.TextureAtlas",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 493,
            "description": "Copies the labels, textures, origin, and framerate from another AdvancedMovieClip.\nThe labels and textures are copied by reference, instead of a deep copy.",
            "itemtype": "method",
            "name": "copyFrom",
            "params": [
                {
                    "name": "other",
                    "description": "The movieclip to copy data from.",
                    "type": "AdvancedMovieClip"
                }
            ],
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClip.js",
            "line": 510,
            "description": "Destroys the AdvancedMovieClip.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.AdvancedMovieClip",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 22,
            "description": "The start time of the current animation on the movieclip's timeline.",
            "itemtype": "property",
            "name": "startTime",
            "type": "Number",
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 28,
            "description": "Length of current animation in frames.",
            "itemtype": "property",
            "name": "length",
            "type": "Int",
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 35,
            "description": "The frame number of the first frame of the current animation. If this is -1, then the\nanimation is currently a pause instead of an animation.",
            "itemtype": "property",
            "name": "firstFrame",
            "type": "Int",
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 43,
            "description": "The frame number of the last frame of the current animation.",
            "itemtype": "property",
            "name": "lastFrame",
            "type": "Int",
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 54,
            "description": "The initialization method",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "clip",
                    "description": "The movieclip",
                    "type": "*"
                }
            ],
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 138,
            "description": "Ends animation playback.",
            "itemtype": "method",
            "name": "endAnim",
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 147,
            "description": "Updates position to a new value, and does anything that the clip needs, like updating\ntimelines.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "newPos",
                    "description": "The new position in the animation.",
                    "type": "Number"
                }
            ],
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 159,
            "description": "Check to see if a clip is compatible with this",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "return": {
                "description": "if the clip is supported by this instance",
                "type": "Boolean"
            },
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 170,
            "description": "Checks if animation exists",
            "itemtype": "method",
            "name": "hasAnimation",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check for an animation.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose_stop\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "does this animation exist?",
                "type": "Boolean"
            },
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 209,
            "description": "Calculates the duration of an animation or list of animations.",
            "itemtype": "method",
            "name": "getDuration",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The animation or animation list.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Animation duration in milliseconds.",
                "type": "Number"
            },
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipInstance.js",
            "line": 260,
            "description": "Reset this animator instance\nso it can be re-used.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.AdvancedMovieClipInstance",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipTask.js",
            "line": 35,
            "description": "The AdvancedMovieClip data source path",
            "itemtype": "property",
            "name": "anim",
            "type": "String",
            "class": "springroll.pixi.AdvancedMovieClipTask",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipTask.js",
            "line": 45,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.pixi.AdvancedMovieClipTask",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/animation/AdvancedMovieClipTask.js",
            "line": 57,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.pixi.AdvancedMovieClipTask",
            "module": "PIXI Animation",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/BitmapFontTask.js",
            "line": 38,
            "description": "The BitmapFont data source path",
            "itemtype": "property",
            "name": "font",
            "type": "String",
            "class": "springroll.pixi.BitmapFontTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/BitmapFontTask.js",
            "line": 48,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.pixi.BitmapFontTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/BitmapFontTask.js",
            "line": 89,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.pixi.BitmapFontTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlas.js",
            "line": 30,
            "description": "The dictionary of Textures that this atlas consists of.",
            "itemtype": "property",
            "name": "frames",
            "type": "Object",
            "class": "springroll.pixi.TextureAtlas",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlas.js",
            "line": 105,
            "description": "Gets a frame by name.",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "name",
                    "description": "The frame name to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The texture by that name, or null if it doesn't\n                                        exist.",
                "type": "createjs.TextureAtlas.Texture"
            },
            "class": "springroll.pixi.TextureAtlas",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlas.js",
            "line": 117,
            "description": "Get an array of Textures that match a specific name. If a frame in a sequence is not in the\natlas, the previous frame in the sequence is used in place of it.",
            "itemtype": "method",
            "name": "getFrames",
            "params": [
                {
                    "name": "name",
                    "description": "The base name of all frames to look for, like \"anim_#\" to search for an\n                     animation exported as anim_0001.png (the \".png\" is dropped when the\n                     TextureAtlas is loaded).",
                    "type": "String"
                },
                {
                    "name": "numberMin",
                    "description": "The number to start on while looking for frames. Flash PNG sequences\n                       generally start at 1.",
                    "type": "Int"
                },
                {
                    "name": "numberMax",
                    "description": "The number to go until while looking for frames. If your animation\n                       runs from frame 0001 to frame 0014, numberMax would be 14.",
                    "type": "Int"
                },
                {
                    "name": "maxDigits",
                    "description": "Maximum number of digits, like 4 for an animation exported as\n                           anim_0001.png",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "4"
                },
                {
                    "name": "outArray",
                    "description": "If already using an array, this can fill it instead of creating a\n                          new one.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "The collection of createjs.TextureAtlas.Textures.",
                "type": "Array"
            },
            "class": "springroll.pixi.TextureAtlas",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlas.js",
            "line": 194,
            "description": "Destroys the TextureAtlas by nulling the image and frame dictionary references.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.TextureAtlas",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlasTask.js",
            "line": 35,
            "description": "The TextureAtlas data source path",
            "itemtype": "property",
            "name": "atlas",
            "type": "String",
            "class": "springroll.pixi.TextureAtlasTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlasTask.js",
            "line": 45,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.pixi.TextureAtlasTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlasTask.js",
            "line": 58,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.pixi.TextureAtlasTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureAtlasTask.js",
            "line": 69,
            "description": "Load a texture atlas from the properties",
            "itemtype": "method",
            "name": "loadAtlas",
            "params": [
                {
                    "name": "assets",
                    "description": "The assets object to load",
                    "type": "Object"
                },
                {
                    "name": "done",
                    "description": "Callback when complete, returns new TextureAtlas",
                    "type": "Function"
                },
                {
                    "name": "ignoreCacheSetting",
                    "description": "If the setting to cache results should be ignored\n                                      because this task is still returning stuff to another\n                                      task.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.TextureAtlasTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 39,
            "description": "The atlas source path",
            "itemtype": "property",
            "name": "image",
            "type": "String",
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 45,
            "description": "The atlas color source path",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 51,
            "description": "The atlas alpha source path",
            "itemtype": "property",
            "name": "alpha",
            "type": "String",
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 57,
            "description": "If the texture should be uploaded to the GPU immediately.",
            "itemtype": "property",
            "name": "uploadToGPU",
            "type": "Boolean",
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 67,
            "description": "Test to see if we should load an asset",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to test",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If this qualifies for this task",
                "type": "Boolean"
            },
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 79,
            "description": "Start the load",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback to call when the load is done"
                }
            ],
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 90,
            "description": "Load the texture from the properties",
            "itemtype": "method",
            "name": "loadImage",
            "params": [
                {
                    "name": "assets",
                    "description": "The assets object to load",
                    "type": "Object"
                },
                {
                    "name": "done",
                    "description": "Callback when complete, returns new TextureAtlas",
                    "type": "Function"
                },
                {
                    "name": "ignoreCacheSetting",
                    "description": "If the setting to cache results should be ignored\n                                      because this task is still returning stuff to another\n                                      task.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/display/TextureTask.js",
            "line": 186,
            "description": "Destroy this load task and don't use after this.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.TextureTask",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/mixins/BitmapText.js",
            "line": 18,
            "description": "Determines if the text object's pivot property will reflect the text's alignment, e.g.\na BitmapText with align of 'right' will have pivot.x set to the text's width, so that the\nright edge of the text is at the text's position. Setting to false uses PIXI's default\nalignment.",
            "itemtype": "property",
            "name": "setPivotToAlign",
            "type": "{Boolean}",
            "default": "false",
            "class": "PIXI.BitmapText",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Container.js",
            "line": 18,
            "description": "Determines if width and height will calculate bounds of all children using getLocalBounds(),\nor only use the internal _width or _height. This should really only be set once, when the\ndisplay object is initialized. Note that without this property, the default would be to\nuse getLocalBounds();",
            "itemtype": "property",
            "name": "useBoundsForSize",
            "type": "{Boolean}",
            "default": "true",
            "class": "PIXI.Container",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/InteractionManager.js",
            "line": 18,
            "description": "Removes mousedown, mouseup, etc. events, but leaves the mousemove events. This allows a\ncustom cursor to continue to update its position while disabling any real interaction.",
            "itemtype": "method",
            "name": "removeClickEvents",
            "class": "PIXI.InteractionManager",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 19,
            "description": "Returns the dot product between this point and another one.",
            "itemtype": "method",
            "name": "dotProd",
            "params": [
                {
                    "name": "other",
                    "description": "The point to form a dot product with",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The dot product between the two points."
            },
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 30,
            "description": "Returns the length (or magnitude) of this point.",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "The length of this point."
            },
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 40,
            "description": "Returns the squared length (or magnitude) of this point. This is faster than length().",
            "itemtype": "method",
            "name": "lengthSq",
            "return": {
                "description": "The length squared of this point."
            },
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 50,
            "description": "Reduces the point to a length of 1.",
            "itemtype": "method",
            "name": "normalize",
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 61,
            "description": "Subtracts the x and y values of a point from this point.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "other",
                    "description": "The point to subtract from this one",
                    "type": "Point"
                }
            ],
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 72,
            "description": "Adds the x and y values of a point to this point.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "other",
                    "description": "The point to add to this one",
                    "type": "Point"
                }
            ],
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 83,
            "description": "Truncate the length of the point to a maximum.",
            "itemtype": "method",
            "name": "truncate",
            "params": [
                {
                    "name": "maxLength",
                    "description": "The maximum length to allow in this point.",
                    "type": "Number"
                }
            ],
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 99,
            "description": "Multiplies the x and y values of this point by a value.",
            "itemtype": "method",
            "name": "scaleBy",
            "params": [
                {
                    "name": "value",
                    "description": "The value to scale by.",
                    "type": "Number"
                }
            ],
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 110,
            "description": "Calculates the distance between this and another point.",
            "itemtype": "method",
            "name": "distance",
            "params": [
                {
                    "name": "other",
                    "description": "The point to calculate the distance to.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The distance.",
                "type": "Number"
            },
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Point.js",
            "line": 123,
            "description": "Calculates the squared distance between this and another point.",
            "itemtype": "method",
            "name": "distanceSq",
            "params": [
                {
                    "name": "other",
                    "description": "The point to calculate the distance to.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The distance squared.",
                "type": "Number"
            },
            "class": "PIXI.Point",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 25,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "0",
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 32,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "0",
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 39,
            "itemtype": "property",
            "name": "radius",
            "type": "Number",
            "default": "0",
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 46,
            "itemtype": "property",
            "name": "startAngle",
            "type": "Number",
            "default": "0",
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 56,
            "itemtype": "property",
            "name": "endAngle",
            "type": "Number",
            "default": "0",
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 69,
            "description": "Creates a clone of this Sector instance",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "a copy of the polygon",
                "type": "Sector"
            },
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Sector.js",
            "line": 80,
            "description": "Checks if the x, and y coords passed to this function are contained within this circle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "x",
                    "description": "The X coord of the point to test",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coord of the point to test",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if the x/y coords are within this polygon",
                "type": "Boolean"
            },
            "class": "PIXI.Sector",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/mixins/Text.js",
            "line": 18,
            "description": "Determines if the text object's pivot property will reflect the text's alignment, e.g.\na Text with align of 'right' will have pivot.x set to the text's width, so that the\nright edge of the text is at the text's position. Setting to false uses PIXI's default\nalignment.",
            "itemtype": "property",
            "name": "setPivotToAlign",
            "type": "{Boolean}",
            "default": "false",
            "class": "PIXI.Text",
            "module": "PIXI Display",
            "namespace": "PIXI"
        },
        {
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 51,
            "description": "The skeleton data source path",
            "itemtype": "property",
            "name": "spineAnim",
            "type": "String",
            "class": "springroll.pixi.SpineAnimTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 57,
            "description": "The spine atlas data source path",
            "itemtype": "property",
            "name": "atlas",
            "type": "String",
            "class": "springroll.pixi.SpineAnimTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 63,
            "description": "Extra images to be added to the atlas",
            "itemtype": "property",
            "name": "extraImages",
            "type": "String",
            "class": "springroll.pixi.SpineAnimTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 73,
            "description": "Test to see if we should load an asset",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to test",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If this qualifies for this task",
                "type": "Boolean"
            },
            "class": "springroll.pixi.SpineAnimTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 96,
            "description": "Start the load",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback to call when the load is done"
                }
            ],
            "class": "springroll.pixi.SpineAnimTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAnimTask.js",
            "line": 167,
            "description": "Destroy this load task and don't use after this.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.SpineAnimTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAtlas.js",
            "line": 179,
            "description": "Adds a standalone image as a page and region",
            "itemtype": "method",
            "name": "addImage",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the texture, so it can get recognized by the Spine\n                      skeleton data.",
                    "type": "String"
                },
                {
                    "name": "texture",
                    "description": "The loaded texture for the image to add.",
                    "type": "PIXI.Texture"
                }
            ],
            "class": "springroll.pixi.SpineAtlas",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAtlas.js",
            "line": 222,
            "description": "Sets up this SpineAtlas from an instance of our TextureAtlas class to allow for\nthe use of atlases exported from TexturePacker.",
            "itemtype": "method",
            "name": "fromTextureAtlas",
            "params": [
                {
                    "name": "atlas",
                    "description": "The atlas to generate from",
                    "type": "springroll.pixi.TextureAtlas"
                },
                {
                    "name": "name",
                    "description": "The name to use for the name of the singular AtlasPage.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.SpineAtlas",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAtlas.js",
            "line": 295,
            "description": "Destroys the SpineAtlas by nulling the image and frame dictionary references.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.SpineAtlas",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAtlasTask.js",
            "line": 36,
            "description": "The Spine Atlas data source path",
            "itemtype": "property",
            "name": "spineAtlas",
            "type": "String",
            "class": "springroll.pixi.SpineAtlasTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAtlasTask.js",
            "line": 48,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.pixi.SpineAtlasTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineAtlasTask.js",
            "line": 63,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.pixi.SpineAtlasTask",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 31,
            "description": "The initialization method",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "clip",
                    "description": "The movieclip",
                    "type": "*"
                }
            ],
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 129,
            "description": "Ends animation playback.",
            "itemtype": "method",
            "name": "endAnim",
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 138,
            "description": "Updates position to a new value, and does anything that the clip needs, like updating\ntimelines.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "newPos",
                    "description": "The new position in the animation.",
                    "type": "Number"
                }
            ],
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 153,
            "description": "Check to see if a clip is compatible with this",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "return": {
                "description": "if the clip is supported by this instance",
                "type": "Boolean"
            },
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 164,
            "description": "Checks if animation exists",
            "itemtype": "method",
            "name": "hasAnimation",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check for an animation.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose_stop\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "does this animation exist?",
                "type": "Boolean"
            },
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 209,
            "description": "Calculates the duration of an animation or list of animations.",
            "itemtype": "method",
            "name": "getDuration",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The animation or animation list.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Animation duration in milliseconds.",
                "type": "Number"
            },
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/spine/SpineInstance.js",
            "line": 271,
            "description": "Reset this animator instance\nso it can be re-used.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.SpineInstance",
            "module": "PIXI Spine",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 138,
            "description": "The sprite that is the body of the button.",
            "itemtype": "property",
            "name": "back",
            "type": "PIXI.Sprite",
            "readonly": "",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 145,
            "description": "The text field of the button. The label is centered by both width and height on the\nbutton.",
            "itemtype": "property",
            "name": "label",
            "type": "PIXI.Text|PIXI.BitmapText",
            "readonly": "",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 153,
            "description": "A dictionary of state booleans, keyed by state name.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_stateFlags",
            "type": "Object",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 160,
            "description": "An array of state names (Strings), in their order of priority.\nThe standard order previously was [\"highlighted\", \"disabled\", \"down\", \"over\",\n\"selected\", \"up\"].",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_statePriority",
            "type": "Array",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 169,
            "description": "A dictionary of state graphic data, keyed by state name.\nEach object contains the sourceRect (src) and optionally 'trim', another Rectangle.\nAdditionally, each object will contain a 'label' object if the button has a text label.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_stateData",
            "type": "Object",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 178,
            "description": "The current style for the label, to avoid setting this if it is unchanged.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_currentLabelStyle",
            "type": "Object",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 185,
            "description": "An offset to button positioning, generally used to adjust for a highlight\naround the button.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_offset",
            "type": "PIXI.Point",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 193,
            "description": "The width of the button art, independent of the scaling of the button itself.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_width",
            "type": "Number",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 200,
            "description": "The height of the button art, independent of the scaling of the button itself.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_height",
            "type": "Number",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 350,
            "description": "An event for when the button is pressed (while enabled).",
            "static": 1,
            "itemtype": "property",
            "name": "BUTTON_PRESS",
            "type": "String",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 357,
            "description": "An event for when the button is moused over (while enabled).",
            "static": 1,
            "itemtype": "property",
            "name": "BUTTON_OVER",
            "type": "String",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 364,
            "description": "An event for when the button is moused out (while enabled).",
            "static": 1,
            "itemtype": "property",
            "name": "BUTTON_OUT",
            "type": "String",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 432,
            "description": "Sets the text of the label. This does nothing if the button was not initialized with a\nlabel.",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": "The text to set the label to.",
                    "type": "String"
                }
            ],
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 489,
            "description": "Whether or not the button is enabled.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 535,
            "description": "Adds a property to the button. Setting the property sets the value in\n_stateFlags and calls _updateState().",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_addProperty",
            "params": [
                {
                    "name": "propertyName",
                    "description": "The property name to add to the button.",
                    "type": "String"
                }
            ],
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 566,
            "description": "Updates back based on the current button state.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_updateState",
            "return": {
                "description": "The state data for the active button state, so that subclasses can use the\n                 value picked by this function without needing to calculate it themselves.",
                "type": "Object"
            },
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 653,
            "description": "The callback for when the button is moused over.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onOver",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 666,
            "description": "The callback for when the mouse leaves the button area.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onOut",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 679,
            "description": "The callback for when the button receives a mouse down event.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onDown",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 695,
            "description": "The callback for when the button for when the mouse/touch is released on the button\n- only when the button was held down initially.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onUp",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 721,
            "description": "The callback for when the mouse/touch is released outside the button when the button was\nheld down.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onUpOutside",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/Button.js",
            "line": 738,
            "description": "Destroys the button.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.Button",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 42,
            "description": "The object that's being dragged, or a dictionary of DragData being dragged\nby id if multitouch is true.",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "draggedObj",
            "type": "PIXI.DisplayObject|Dictionary",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 51,
            "description": "The radius in pixel to allow for dragging, or else does sticky click",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "dragStartThreshold",
            "default": "20",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 59,
            "description": "The position x, y of the mouse down on the stage. This is only used\nwhen multitouch is false - the DragData has it when multitouch is true.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "mouseDownStagePos",
            "type": "PIXI.Point",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 67,
            "description": "The position x, y of the object when interaction with it started. If multitouch is\ntrue, then this will only be set during a drag stop callback, for the object that just\nstopped getting dragged.",
            "itemtype": "property",
            "name": "mouseDownObjPos",
            "type": "PIXI.Point",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 75,
            "description": "If sticky click dragging is allowed.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "allowStickyClick",
            "type": "Bool",
            "default": "true",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 83,
            "description": "Is the move touch based",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "isTouchMove",
            "type": "Bool",
            "default": "false",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 92,
            "description": "Is the drag being held on mouse down (not sticky clicking)",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "isHeldDrag",
            "type": "Bool",
            "default": "false",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 101,
            "description": "Is the drag a sticky clicking (click on a item, then mouse the mouse)",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "itemtype": "property",
            "name": "isStickyClick",
            "type": "Bool",
            "default": "false",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 110,
            "description": "Settings for snapping.\n\nFormat for snapping to a list of points:\n\t{\n\t\tmode:\"points\",\n\t\tdist:20,//snap when within 20 pixels/units\n\t\tpoints:[\n\t\t\t{ x: 20, y:30 },\n\t\t\t{ x: 50, y:10 }\n\t\t]\n\t}",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "snapSettings",
            "type": "Object",
            "default": "null",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 129,
            "description": "Reference to the Pixi InteractionManager.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_interaction",
            "type": "PIXI.interaction.InteractionManager",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 136,
            "description": "The offset from the dragged object's position that the initial mouse event\nwas at. This is only used when multitouch is false - the DragData has\nit when multitouch is true.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragOffset",
            "type": "PIXI.Point",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 145,
            "description": "External callback when we start dragging",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragStartCallback",
            "type": "Function",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 152,
            "description": "External callback when we are done dragging",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_dragEndCallback",
            "type": "Function",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 164,
            "description": "The collection of draggable objects",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_draggableObjects",
            "type": "Array",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 171,
            "description": "If this DragManager is using multitouch for dragging.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_multitouch",
            "type": "Boolean",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 178,
            "description": "If this DragManager has added drag listeners to the InteractionManager",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_addedDragListeners",
            "type": "Boolean",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 191,
            "description": "If the DragManager allows multitouch dragging. Setting this stops any current\ndrags.",
            "itemtype": "property",
            "name": "multitouch",
            "type": "Boolean",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 222,
            "description": "Manually starts dragging an object. If a mouse down event is not supplied\nas the second argument, it defaults to a held drag, that ends as soon as\nthe mouse is released. When using multitouch, passing a interaction data is\nrequired.",
            "itemtype": "method",
            "name": "startDrag",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object that should be dragged.",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "interactionData",
                    "description": "The interaction data about\n                                           the input event that triggered this.",
                    "type": "PIXI.InteractionData"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 238,
            "description": "Mouse down on an object",
            "itemtype": "method",
            "name": "_objMouseDown",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "object",
                    "description": "The object that should be dragged.",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "interactionData",
                    "description": "The interaction data about\n                                           the input event that triggered this.",
                    "type": "PIXI.InteractionData"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 324,
            "description": "Start the sticky click",
            "itemtype": "method",
            "name": "_triggerStickyClick",
            "params": [
                {
                    "name": "interactionData",
                    "description": "The interaction data about\n                                           the input event that triggered this.",
                    "type": "PIXI.InteractionData"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 344,
            "description": "Start hold dragging",
            "itemtype": "method",
            "name": "_triggerHeldDrag",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "interactionData",
                    "description": "The ineraction data about the moved mouse",
                    "type": "PIXI.InteractionData"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 376,
            "description": "Internal start dragging on the stage",
            "itemtype": "method",
            "name": "_startDrag",
            "params": [
                {
                    "name": "interactionData",
                    "description": "The ineraction data about the moved mouse",
                    "type": "PIXI.InteractionData"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 405,
            "description": "Stops dragging the currently dragged object.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "stopDrag",
            "params": [
                {
                    "name": "doCallback",
                    "description": "If the drag end callback should be called.",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "obj",
                    "description": "A specific object to stop dragging, if multitouch\n                                  is true. If this is omitted, it stops all drags.",
                    "type": "PIXI.DisplayObject",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 431,
            "description": "Internal stop dragging on the stage",
            "itemtype": "method",
            "name": "_stopDrag",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "interactionData",
                    "description": "The ineraction data about the moved mouse",
                    "type": "PIXI.InteractionData"
                },
                {
                    "name": "doCallback",
                    "description": "If we should do the callback",
                    "type": "Bool"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 511,
            "description": "Update the object position based on the mouse",
            "itemtype": "method",
            "name": "_updateObjPosition",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "interactionData",
                    "description": "Mouse move event",
                    "type": "PIXI.InteractionData"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 572,
            "description": "Handles snapping the dragged object to the nearest among a list of points",
            "itemtype": "method",
            "name": "_handlePointSnap",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "localMousePos",
                    "description": "The mouse position in the same space as the dragged object.",
                    "type": "PIXI.Point"
                },
                {
                    "name": "dragOffset",
                    "description": "The drag offset for the dragged object.",
                    "type": "PIXI.Point"
                },
                {
                    "name": "obj",
                    "description": "The object to snap.",
                    "type": "PIXI.DisplayObject"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 626,
            "description": "Adds properties and functions to the object - use enableDrag() and disableDrag() on\nobjects to enable/disable them (they start out disabled). Properties added to objects:\n_dragBounds (Rectangle), _dragOffset (Point), _onMouseDownListener (Function),\n_dragMan (springroll.DragManager) reference to the DragManager\nthese will override any existing properties of the same name",
            "itemtype": "method",
            "name": "addObject",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "The display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "bounds",
                    "description": "The rectangle bounds. 'right' and 'bottom' properties\n                                 will be added to this object.",
                    "type": "PIXI.Rectangle",
                    "optional": true
                },
                {
                    "name": "dragOffset",
                    "description": "A specific drag offset to use each time, instead of\n                                 the mousedown/touchstart position relative to the\n                                 object. This is useful if you want something to always\n                                 be dragged from a specific position, like the base of\n                                 a torch.",
                    "type": "PIXI.Point",
                    "optional": true
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 664,
            "description": "Removes properties and functions added by addObject().",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "removeObject",
            "params": [
                {
                    "name": "obj",
                    "description": "The display object",
                    "type": "PIXI.DisplayObject"
                }
            ],
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/ui/DragManager.js",
            "line": 686,
            "description": "Destroy the manager",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.DragManager",
            "module": "PIXI UI",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 15,
            "description": "The geometry class for Circle",
            "itemtype": "property",
            "name": "Circle",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Circle",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 24,
            "description": "The geometry class for Ellipse",
            "itemtype": "property",
            "name": "Ellipse",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Ellipse",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 33,
            "description": "The geometry class for Rectangle",
            "itemtype": "property",
            "name": "Rectangle",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Rectangle",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 42,
            "description": "The geometry class for Sector",
            "itemtype": "property",
            "name": "Sector",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Sector",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 51,
            "description": "The geometry class for point",
            "itemtype": "property",
            "name": "Point",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Point",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 60,
            "description": "The geometry class for Polygon",
            "itemtype": "property",
            "name": "Polygon",
            "type": "Function",
            "readonly": "",
            "static": 1,
            "default": "PIXI.Polygon",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 69,
            "description": "If the rotation is expressed in radians",
            "itemtype": "property",
            "name": "useRadians",
            "type": "Boolean",
            "readonly": "",
            "static": 1,
            "default": "true",
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 78,
            "description": "Gets the object's boundaries in its local coordinate space, without any scaling or\nrotation applied.",
            "itemtype": "method",
            "name": "getLocalBounds",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The createjs display object",
                    "type": "PIXI.DisplayObject"
                }
            ],
            "return": {
                "description": "A rectangle with additional right and bottom properties.",
                "type": "PIXI.Rectangle"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 104,
            "description": "Normalize the object scale",
            "itemtype": "method",
            "name": "getScale",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The PIXI display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" to return a specific value",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "A scale object with x and y keys or a single number if direction is set",
                "type": "Object|Number"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 121,
            "description": "Normalize the object position setting",
            "itemtype": "method",
            "name": "setPosition",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The PIXI display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "position",
                    "description": "The position object or the value\n\t\tif the direction is set.",
                    "type": "Object|Number",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x value",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The y value",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" value",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "PIXI.DisplayObject"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 147,
            "description": "Normalize the object position getting",
            "itemtype": "method",
            "name": "getPosition",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The PIXI display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\", default is an object of both",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The position as an object with x and y keys if no direction\n\t\tvalue is set, or the value of the specific direction",
                "type": "Object|Number"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 165,
            "description": "Normalize the object scale setting",
            "itemtype": "method",
            "name": "setScale",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The PIXI Display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "scale",
                    "description": "The scaling object or scale value for x and y",
                    "type": "Number"
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" if setting a specific value, default\n\t\tsets both the scale x and scale y.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "PIXI.DisplayObject"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 188,
            "description": "Set the pivot or registration point of an object",
            "itemtype": "method",
            "name": "setPivot",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The PIXI Display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "pivot",
                    "description": "The object pivot point or the value if the direction is set",
                    "type": "Object|Number",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the pivot point",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The y position of the pivot point",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "direction",
                    "description": "Either \"x\" or \"y\" the value for specific direction, default\n\t\twill set using the object.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "PIXI.DisplayObject"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 210,
            "description": "Set the hit area of the shape",
            "itemtype": "method",
            "name": "setHitArea",
            "static": 1,
            "params": [
                {
                    "name": "object",
                    "description": "The PIXI Display object",
                    "type": "PIXI.DisplayObject"
                },
                {
                    "name": "shape",
                    "description": "The geometry object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Return the object for chaining",
                "type": "PIXI.DisplayObject"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 224,
            "description": "Get the original size of a bitmap",
            "itemtype": "method",
            "name": "getBitmapSize",
            "static": 1,
            "params": [
                {
                    "name": "bitmap",
                    "description": "The bitmap to measure",
                    "type": "PIXI.Bitmap"
                }
            ],
            "return": {
                "description": "The width (w) and height (h) of the actual bitmap size",
                "type": "Object"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 239,
            "description": "Remove all children from a display object",
            "itemtype": "method",
            "name": "removeChildren",
            "static": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The display object container",
                    "type": "PIXI.DisplayObjectContainer"
                }
            ],
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/DisplayAdapter.js",
            "line": 250,
            "description": "If a container contains a child",
            "itemtype": "method",
            "name": "contains",
            "static": 1,
            "params": [
                {
                    "name": "container",
                    "description": "The container",
                    "type": "PIXI.DisplayObjectContainer"
                },
                {
                    "name": "child",
                    "description": "The object to test",
                    "type": "PIXI.DisplayObject"
                }
            ],
            "return": {
                "description": "If the child contained within the container",
                "type": "Boolean"
            },
            "class": "springroll.pixi.DisplayAdapter",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 49,
            "description": "If the display should keep mouse move events running when the display is disabled.",
            "itemtype": "property",
            "name": "keepMouseover",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 56,
            "description": "If preventDefault() should be called on all touch events and mousedown events. Defaults\nto true.",
            "itemtype": "property",
            "name": "_autoPreventDefault",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 65,
            "description": "The rendering library's stage element, the root display object",
            "itemtype": "property",
            "name": "stage",
            "type": "PIXI.Stage",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 73,
            "description": "The Pixi renderer.",
            "itemtype": "property",
            "name": "renderer",
            "type": "PIXI.CanvasRenderer|PIXI.WebGLRenderer",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 117,
            "description": "If Pixi is being rendered with WebGL.",
            "itemtype": "property",
            "name": "isWebGL",
            "type": "Boolean",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 135,
            "description": "If input is enabled on the stage for this display. The default is true.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 168,
            "description": "If preventDefault() should be called on all touch events and mousedown events. Defaults\nto true.",
            "itemtype": "property",
            "name": "autoPreventDefault",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 189,
            "description": "Resizes the canvas and the renderer. This is only called by the Application.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The width that the display should be",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "The height that the display should be",
                    "type": "Int"
                }
            ],
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 201,
            "description": "Updates the stage and draws it. This is only called by the Application.\nThis method does nothing if paused is true or visible is false.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "elapsed",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "force",
                    "description": "Will re-render even if the game is paused or not visible",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/PixiDisplay.js",
            "line": 216,
            "description": "Destroys the display. This method is called by the Application and should\nnot be called directly, use Application.removeDisplay(id).",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.pixi.PixiDisplay",
            "module": "PIXI Display",
            "namespace": "springroll.pixi"
        },
        {
            "file": "src/displays/pixi/TickerPlugin.js",
            "line": 19,
            "description": "Keep track of total time elapsed to feed to the Ticker",
            "itemtype": "property",
            "name": "_time",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "default": "0",
            "class": "springroll.Application",
            "module": "PIXI Display",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 29,
            "description": "the canvas managed by this display",
            "itemtype": "property",
            "name": "canvas",
            "type": "DOMElement",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 37,
            "description": "The DOM id for the canvas",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 45,
            "description": "Convenience method for getting the width of the canvas element\nwould be the same thing as canvas.width",
            "itemtype": "property",
            "name": "width",
            "type": "Int",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 54,
            "description": "Convenience method for getting the height of the canvas element\nwould be the same thing as canvas.height",
            "itemtype": "property",
            "name": "height",
            "type": "Int",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 63,
            "description": "The main rendering context or the root display object or stage.",
            "itemtype": "property",
            "name": "stage",
            "type": "Mixed",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 71,
            "description": "If rendering is paused on this display only. Pausing all displays can be done\nusing Application.paused setter.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 79,
            "description": "If input is enabled on the stage.",
            "itemtype": "property",
            "name": "_enabled",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 86,
            "description": "If the display is visible.",
            "itemtype": "property",
            "name": "_visible",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 93,
            "description": "Some of the modules require a special display adapter to provide\ncommon methods for managing display objects.",
            "itemtype": "property",
            "name": "adapter",
            "type": "DisplayAdapter",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "default": "null",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 106,
            "description": "If input is enabled on the stage for this display. The default is true.\nWithout a rendering library, this does not actually have an effect.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 127,
            "description": "If the display becomes enabled",
            "itemtype": "event",
            "name": "enabled",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 132,
            "description": "If the display becomes disabled",
            "itemtype": "event",
            "name": "disabled",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 138,
            "description": "Enabled state changed on the display",
            "itemtype": "event",
            "name": "enable",
            "params": [
                {
                    "name": "enabled",
                    "description": "Current state of enabled",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 148,
            "description": "If the display is visible, using \"display: none\" css on the canvas. Invisible displays won't render.",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 169,
            "description": "If the display becomes visible",
            "itemtype": "event",
            "name": "visible",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 174,
            "description": "If the display becomes hidden",
            "itemtype": "event",
            "name": "hidden",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 180,
            "description": "Visibility changed on the display",
            "itemtype": "event",
            "name": "visibility",
            "params": [
                {
                    "name": "visible",
                    "description": "Current state of the visibility",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 190,
            "description": "Resizes the canvas. This is only called by the Application.",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "width",
                    "description": "The width that the display should be",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "The height that the display should be",
                    "type": "Int"
                }
            ],
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 202,
            "description": "Updates the stage and draws it. This is only called by the Application.\nThis method does nothing if paused is true or visible is false.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame.",
                    "type": "Int"
                },
                {
                    "name": "force",
                    "description": "For the re-render",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/displays/AbstractDisplay.js",
            "line": 214,
            "description": "Destroys the display. This method is called by the Application and should\nnot be called directly, use Application.removeDisplay(id).\nThe stage recursively removes all display objects here.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AbstractDisplay",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 17,
            "description": "The collection of listeners",
            "itemtype": "property",
            "name": "_listeners",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 24,
            "description": "If the dispatcher is destroyed",
            "itemtype": "property",
            "name": "_destroyed",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 35,
            "description": "If the dispatcher is destroyed",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 48,
            "description": "Dispatch an event",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event to trigger",
                    "type": "String"
                },
                {
                    "name": "arguments",
                    "description": "Additional parameters for the listener functions.",
                    "type": "*"
                }
            ],
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 83,
            "description": "Add an event listener but only handle it one time.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "name",
                    "description": "The type of event (can be multiple events separated by spaces),\n     or a map of events to handlers",
                    "type": "String|object"
                },
                {
                    "name": "callback",
                    "description": "The callback function when event is fired or an array of callbacks.",
                    "type": "Function|Array*"
                },
                {
                    "name": "priority",
                    "description": "The priority of the event listener. Higher numbers are handled first.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Return this EventDispatcher for chaining calls.",
                "type": "EventDispatcher"
            },
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 98,
            "description": "Add an event listener. The parameters for the listener functions depend on the event.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "name",
                    "description": "The type of event (can be multiple events separated by spaces),\n     or a map of events to handlers",
                    "type": "String|object"
                },
                {
                    "name": "callback",
                    "description": "The callback function when event is fired or an array of callbacks.",
                    "type": "Function|Array*"
                },
                {
                    "name": "priority",
                    "description": "The priority of the event listener. Higher numbers are handled first.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "Return this EventDispatcher for chaining calls.",
                "type": "EventDispatcher"
            },
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 172,
            "description": "Remove the event listener",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "name",
                    "description": "The type of event string separated by spaces, if no name is specifed remove all listeners.",
                    "type": "String*"
                },
                {
                    "name": "callback",
                    "description": "The listener function or collection of callback functions",
                    "type": "Function|Array*"
                }
            ],
            "return": {
                "description": "Return this EventDispatcher for chaining calls.",
                "type": "EventDispatcher"
            },
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 230,
            "description": "Checks if the EventDispatcher has a specific listener or any listener for a given event.",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the single event type to check for",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener function to check for. If omitted, checks for any listener.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "If the EventDispatcher has the specified listener.",
                "type": "Boolean"
            },
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 249,
            "description": "Destroy and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/EventDispatcher.js",
            "line": 259,
            "description": "Return type of the value.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The type",
                "type": "String"
            },
            "class": "springroll.EventDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 20,
            "description": "The map of property values to store",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_properties",
            "type": "Object",
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 32,
            "description": "Generic setter for an option",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "prop",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "Mixed"
                }
            ],
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 54,
            "description": "Generic setter for an option",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "prop",
                    "description": "The option name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The value of the option",
                "type": "Mixed"
            },
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 73,
            "description": "Add a new property to allow deteching",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "prop",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The default value",
                    "type": "Mixed",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "readOnly",
                    "description": "If the property is readonly",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The instance for chaining",
                "type": "PropertyDispatcher"
            },
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 108,
            "description": "Whenever a property is get a responder is called",
            "itemtype": "method",
            "name": "respond",
            "params": [
                {
                    "name": "name",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "responder",
                    "description": "Function to call when getting property",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The instance for chaining",
                "type": "PropertyDispatcher"
            },
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 133,
            "description": "Clean-up all references, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.PropertyDispatcher",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 167,
            "description": "Set the value of the property",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "The value to set",
                    "type": "*",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "class": "springroll.Property",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/events/PropertyDispatcher.js",
            "line": 177,
            "description": "Set the value of the property",
            "itemtype": "method",
            "name": "setReadOnly",
            "params": [
                {
                    "name": "readOnly",
                    "description": "The readOnly status",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.Property",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/AbstractHint.js",
            "line": 18,
            "description": "The reference to the hint play",
            "itemtype": "property",
            "name": "_hints",
            "type": "springroll.HintsPlayer",
            "class": "springroll.AbstractHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/AbstractHint.js",
            "line": 29,
            "description": "Run the hint",
            "itemtype": "method",
            "name": "play",
            "class": "springroll.AbstractHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/AbstractHint.js",
            "line": 39,
            "description": "Handle when the media completes",
            "itemtype": "method",
            "name": "_onPlayComplete",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "original",
                    "description": "The original callback, either complete or cancelled",
                    "type": "Function"
                }
            ],
            "class": "springroll.AbstractHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/AbstractHint.js",
            "line": 54,
            "description": "Clean-up the hint, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AbstractHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/AnimatorHint.js",
            "line": 40,
            "description": "Run the hint",
            "itemtype": "method",
            "name": "play",
            "class": "springroll.AnimatorHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/AnimatorHint.js",
            "line": 56,
            "description": "Clean-up the hint, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AnimatorHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/FunctionHint.js",
            "line": 34,
            "description": "Start function hint",
            "itemtype": "method",
            "name": "play",
            "class": "springroll.FunctionHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/FunctionHint.js",
            "line": 47,
            "description": "Clean-up the hint, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.FunctionHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 33,
            "description": "The collection of tiers",
            "itemtype": "property",
            "name": "tiers",
            "type": "Array",
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 41,
            "description": "The current tier index",
            "itemtype": "property",
            "name": "_current",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 48,
            "description": "The current tier selected",
            "itemtype": "property",
            "name": "_tier",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 62,
            "description": "Run the hint",
            "itemtype": "method",
            "name": "play",
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 73,
            "description": "Add a VO hint to the player.",
            "itemtype": "method",
            "name": "vo",
            "params": [
                {
                    "name": "idOrList",
                    "description": "The list of VO element, see VOPlayer.play",
                    "type": "String|array",
                    "optional": true
                },
                {
                    "name": "onComplete",
                    "description": "Call when the VO is done playing",
                    "type": "Function"
                },
                {
                    "name": "onCancel",
                    "description": "Call when the VO is cancelled playing,\n     a value of true sets onComplete to also be the onCancelled callback.",
                    "type": "Function|boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The newly added hint",
                "type": "springroll.VOHint"
            },
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 94,
            "description": "Add an animator hint to the player",
            "itemtype": "method",
            "name": "anim",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance of the clip to play with Animator",
                    "type": "createjs.MovieClip|*"
                },
                {
                    "name": "events",
                    "description": "The event aliases to play, see Animator.play",
                    "type": "String|Array|Object"
                },
                {
                    "name": "onComplete",
                    "description": "Call when the VO is done playing",
                    "type": "Function"
                },
                {
                    "name": "onCancel",
                    "description": "Call when the VO is cancelled playing,\n     a value of true sets onComplete to also be the onCancelled callback.",
                    "type": "Function|boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The newly added hint",
                "type": "springroll.AnimatorHint"
            },
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 117,
            "description": "Add an animator hint to the player. If you use this hinting method, you\nNEED to re-enable the hinting when it's done. Whereas the VO and ANIM methods\nwith automatically re-enable the hinting button.",
            "itemtype": "method",
            "name": "func",
            "params": [
                {
                    "name": "onStart",
                    "description": "The instance of the clip to play with Animator",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The newly added hint",
                "type": "springroll.FunctionHint"
            },
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 134,
            "description": "Add a new timeout tier of hinting",
            "itemtype": "method",
            "name": "addTier",
            "return": {
                "description": "The instance of the group hint, for chaining",
                "type": "springroll.GroupHint"
            },
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 146,
            "description": "Advance to the next tier of hints.",
            "itemtype": "method",
            "name": "nextTier",
            "return": {
                "description": "The instance of the group hint, for chaining",
                "type": "springroll.GroupHint"
            },
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 165,
            "description": "Reset the current tier to be the first",
            "itemtype": "method",
            "name": "reset",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/GroupHint.js",
            "line": 176,
            "description": "Clean-up the hint, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.GroupHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 25,
            "description": "Reference to the current app",
            "itemtype": "property",
            "name": "_app",
            "type": "springroll.Application",
            "access": "private",
            "tagname": "",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 32,
            "description": "The currently selected hint",
            "itemtype": "property",
            "name": "_hint",
            "type": "springroll.AbstractHint",
            "access": "private",
            "tagname": "",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 39,
            "description": "The total number of milliseconds until playing",
            "itemtype": "property",
            "name": "_duration",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 46,
            "description": "The countdown in milliseconds",
            "itemtype": "property",
            "name": "_timer",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 53,
            "description": "Time in ms between timeout lines",
            "itemtype": "property",
            "name": "timerDuration",
            "type": "Number",
            "default": "12000",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 65,
            "description": "If a hint is currently playing",
            "itemtype": "property",
            "name": "_playing",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 73,
            "description": "Contains previously set hints to be cleaned up after the new hint plays,\nto prevent erasing callbacks too soon.",
            "itemtype": "property",
            "name": "_oldHints",
            "type": "Array",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 85,
            "description": "Play an animation event",
            "itemtype": "event",
            "name": "start",
            "params": [
                {
                    "name": "hint",
                    "description": "The hint being played",
                    "type": "springroll.AbstractHint"
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 91,
            "description": "Play an animation event",
            "itemtype": "event",
            "name": "anim",
            "params": [
                {
                    "name": "data",
                    "description": "The event data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "instance",
                            "description": "The movieclip instance",
                            "type": "createjs.MovieClip"
                        },
                        {
                            "name": "events",
                            "description": "The Animator events",
                            "type": "String|Array"
                        },
                        {
                            "name": "complete",
                            "description": "Callback when complete",
                            "type": "Function"
                        },
                        {
                            "name": "cancel",
                            "description": "Callback when canceled",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 101,
            "description": "Play an Voice-Over event",
            "itemtype": "event",
            "name": "vo",
            "params": [
                {
                    "name": "data",
                    "description": "The event data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "events",
                            "description": "The VO alias or array of aliases/times/etc",
                            "type": "String|Array"
                        },
                        {
                            "name": "complete",
                            "description": "Callback when complete",
                            "type": "Function"
                        },
                        {
                            "name": "cancel",
                            "description": "Callback when canceled",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 110,
            "description": "Event when the enabled status of the hint changes",
            "itemtype": "event",
            "name": "enabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "If the player is enabled",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 116,
            "description": "Add a VO hint to the player.",
            "itemtype": "method",
            "name": "vo",
            "params": [
                {
                    "name": "idOrList",
                    "description": "The list of VO element, see VOPlayer.play",
                    "type": "String|Array"
                },
                {
                    "name": "onComplete",
                    "description": "Call when the VO is done playing",
                    "type": "Function"
                },
                {
                    "name": "onCancel",
                    "description": "Call when the VO is cancelled playing,\n      a value of true sets onComplete to also be the onCancelled callback.",
                    "type": "Function|Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The newly added hint",
                "type": "springroll.VOHint"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 136,
            "description": "Add an animator hint to the player",
            "itemtype": "method",
            "name": "anim",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance of the clip to play with Animator",
                    "type": "createjs.MovieClip|*"
                },
                {
                    "name": "events",
                    "description": "The event aliases to play, see Animator.play",
                    "type": "String|Array|Object"
                },
                {
                    "name": "onComplete",
                    "description": "Call when the VO is done playing",
                    "type": "Function"
                },
                {
                    "name": "onCancel",
                    "description": "Call when the VO is cancelled playing,\n      a value of true sets onComplete to also be the onCancelled callback.",
                    "type": "Function|Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The newly added hint",
                "type": "springroll.AnimatorHint"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 158,
            "description": "Add an animator hint to the player. If you use this hinting method, you\nNEED to re-enable the hinting when it's done. Whereas the VO and ANIM methods\nwith automatically re-enable the hinting button.",
            "itemtype": "method",
            "name": "func",
            "params": [
                {
                    "name": "onStart",
                    "description": "The function to call when hint is played.\n                          Should accept 2 arguments (callbacks): onComplete, onCancelled\n                          and call them when complete or cancelled",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The newly added hint",
                "type": "springroll.FunctionHint"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 173,
            "description": "Create the new group hint for randomizing hints or for tiered hinting.\nYou can save this group hint for later and assign using HintsPlayer.set()",
            "itemtype": "method",
            "name": "group",
            "return": {
                "description": "The new group hint",
                "type": "springroll.GroupHint"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 184,
            "description": "Set the current method to use",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "hint",
                    "description": "The new hint to add",
                    "type": "springroll.AbstractHint"
                }
            ],
            "return": {
                "description": "Instance of the player, for chaining",
                "type": "springroll.AbstractHint"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 199,
            "description": "Removes the current hint",
            "itemtype": "method",
            "name": "clear",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 215,
            "description": "Manually play the current hint",
            "itemtype": "method",
            "name": "play",
            "return": {
                "description": "instance of the player for chaining",
                "type": "springroll.HintsPlayer"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 240,
            "description": "Start a timer",
            "itemtype": "method",
            "name": "startTimer",
            "params": [
                {
                    "name": "duration",
                    "description": "The number of milliseconds before playing hint",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "12000"
                }
            ],
            "return": {
                "description": "instance of the player for chaining",
                "type": "springroll.HintsPlayer"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 253,
            "description": "Stop the timer and remove update listener",
            "itemtype": "method",
            "name": "stopTimer",
            "return": {
                "description": "instance of the player for chaining",
                "type": "springroll.HintsPlayer"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 259,
            "description": "Stop the timer and remove update listener.\nAlias for stopTimer",
            "itemtype": "method",
            "name": "removeTimer",
            "return": {
                "description": "instance of the player for chaining",
                "type": "springroll.HintsPlayer"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 272,
            "description": "Reset the timer to start over",
            "itemtype": "method",
            "name": "resetTimer",
            "return": {
                "description": "instance of the player for chaining",
                "type": "springroll.HintsPlayer"
            },
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 284,
            "description": "If the help button is enabled",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 296,
            "description": "Handle the update function",
            "itemtype": "method",
            "name": "_update",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "Number of milliseconds since the last update",
                    "type": "Int"
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 317,
            "description": "Call this when a FunctionHint is done playing to reset HintsPlayer",
            "itemtype": "method",
            "name": "funcDone",
            "params": [
                {
                    "name": "cancelled",
                    "description": "If the function was interrupted by the user or something else.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 322,
            "description": "Internal callback when a hint is done playing",
            "itemtype": "method",
            "name": "_done",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "cancelled",
                    "description": "If the function was interrupted by the user or something else.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 343,
            "description": "Destroys old hints",
            "itemtype": "method",
            "name": "_clearOldHints",
            "access": "private",
            "tagname": "",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlayer.js",
            "line": 360,
            "description": "Destroy, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.HintsPlayer",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlugin.js",
            "line": 20,
            "description": "The hint player API",
            "itemtype": "property",
            "name": "hints",
            "type": "springroll.HintsPlayer",
            "class": "springroll.Application",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlugin.js",
            "line": 77,
            "description": "Handle the VO event",
            "itemtype": "method",
            "name": "onVOHint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "The VO data",
                    "type": "Object"
                }
            ],
            "class": "springroll.Application",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/HintsPlugin.js",
            "line": 103,
            "description": "Handle the animator event",
            "itemtype": "method",
            "name": "onAnimatorHint",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "The animator data",
                    "type": "Object"
                }
            ],
            "class": "springroll.Application",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/VOHint.js",
            "line": 37,
            "description": "Run the hint",
            "itemtype": "method",
            "name": "play",
            "class": "springroll.VOHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/hints/VOHint.js",
            "line": 52,
            "description": "Clean-up the hint, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.VOHint",
            "module": "Hints",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 39,
            "description": "The value to replace with the current language in URLS.",
            "itemtype": "property",
            "name": "_replace",
            "type": "String",
            "access": "private",
            "tagname": "",
            "default": "\"%LANG%\"",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 47,
            "description": "The current language.",
            "itemtype": "property",
            "name": "_current",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 54,
            "description": "The default language.",
            "itemtype": "property",
            "name": "_default",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 61,
            "description": "Available languages.",
            "itemtype": "property",
            "name": "languages",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 68,
            "description": "A dictionary of translated strings, set with setStringTable().",
            "itemtype": "property",
            "name": "_stringTable",
            "type": "Dictionary",
            "access": "private",
            "tagname": "",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 80,
            "description": "Fired when the chosen language has changed.",
            "itemtype": "event",
            "name": "changed",
            "params": [
                {
                    "name": "language",
                    "description": "The newly chosen language.",
                    "type": "String"
                }
            ],
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 86,
            "description": "Configure",
            "itemtype": "method",
            "name": "setConfig",
            "params": [
                {
                    "name": "config",
                    "description": "The language settings to be used.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "default",
                            "description": "The default language name to use if asked for one that is\n                             not present.",
                            "type": "String"
                        },
                        {
                            "name": "languages",
                            "description": "An array of all supported languages, with entries being\n                              locale ids (dialects allowed). Locale ids should be lower\n                              case.",
                            "type": "Array"
                        },
                        {
                            "name": "replace",
                            "description": "A string to replace in urls with the current\n                                         language.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"%LANG%\""
                        }
                    ]
                }
            ],
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 117,
            "description": "Get the singleton instance of the Languages object.",
            "itemtype": "property",
            "name": "instance",
            "type": "springroll.Languages",
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 132,
            "description": "The current language.",
            "itemtype": "property",
            "name": "current",
            "type": "String",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 146,
            "description": "Gets the preferred languages from the browser.",
            "itemtype": "method",
            "name": "getPreferredLanguages",
            "return": {
                "description": "The list of preferred languages in order of preference.",
                "type": "Array"
            },
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 170,
            "description": "Sets the current language, based on specified preferences and what is available.",
            "itemtype": "method",
            "name": "setLanguage",
            "params": [
                {
                    "name": "languageList",
                    "description": "The list of preferred languages in order of preference,\n                               or a single language.",
                    "type": "Array|String"
                }
            ],
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 213,
            "description": "Sets the string table for later reference.",
            "itemtype": "method",
            "name": "setStringTable",
            "params": [
                {
                    "name": "dictionary",
                    "description": "The string table, with keys that you would use to reference\n                           the translations.",
                    "type": "Dictionary"
                }
            ],
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 224,
            "description": "Gets a string from the current string table.",
            "itemtype": "method",
            "name": "getString",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the string to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The translated string.",
                "type": "String"
            },
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 235,
            "description": "Gets a formatted string from the current string table. See String.format() in the Core\nmodule.",
            "itemtype": "method",
            "name": "getFormattedString",
            "params": [
                {
                    "name": "key",
                    "description": "The key of the string to get.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "An array or list of arguments for formatting.",
                    "type": "Array|*"
                }
            ],
            "return": {
                "description": "The translated string.",
                "type": "String"
            },
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 252,
            "description": "Modifies a url, replacing a specified value with the current language.",
            "itemtype": "method",
            "name": "modifyUrl",
            "params": [
                {
                    "name": "url",
                    "description": "The url to modify to a language specific version.",
                    "type": "String"
                }
            ],
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/Languages.js",
            "line": 264,
            "description": "Destroys the Languages object.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.Languages",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/LanguagesPlugin.js",
            "line": 21,
            "description": "The StringFilters instance",
            "itemtype": "property",
            "name": "languages",
            "type": "springroll.Languages",
            "class": "springroll.Application",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/LanguagesPlugin.js",
            "line": 27,
            "description": "Force a specific language",
            "itemtype": "property",
            "name": "options.language",
            "type": "String",
            "default": "null",
            "class": "springroll.Application",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/languages/LanguagesPlugin.js",
            "line": 34,
            "description": "The path to the languages configuration file",
            "itemtype": "property",
            "name": "options.languagesPath",
            "type": "String",
            "default": "null",
            "class": "springroll.Application",
            "module": "Languages",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ColorAlphaTask.js",
            "line": 28,
            "description": "The atlas color source path",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "class": "springroll.ColorAlphaTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ColorAlphaTask.js",
            "line": 34,
            "description": "The atlas alpha source path",
            "itemtype": "property",
            "name": "alpha",
            "type": "String",
            "class": "springroll.ColorAlphaTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ColorAlphaTask.js",
            "line": 44,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.ColorAlphaTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ColorAlphaTask.js",
            "line": 56,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.ColorAlphaTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ColorAlphaTask.js",
            "line": 79,
            "description": "Pulled from EaselJS's SpriteSheetUtils.\nMerges the rgb channels of one image with the alpha channel of another. This can be used to\ncombine a compressed JPEG image containing color data with a PNG32 monochromatic image\ncontaining alpha data. With certain types of images (those with detail that lend itself to\nJPEG compression) this can provide significant file size savings versus a single RGBA PNG32.\nThis method is very fast (generally on the order of 1-2 ms to run).",
            "itemtype": "method",
            "name": "mergeAlpha",
            "static": 1,
            "params": [
                {
                    "name": "rbgImage",
                    "description": "The image (or canvas) containing the RGB channels to use.",
                    "type": "Image"
                },
                {
                    "name": "alphaImage",
                    "description": "The image (or canvas) containing the alpha channel to use.",
                    "type": "Image"
                },
                {
                    "name": "canvas",
                    "description": "If specified, this canvas will be used and returned. If not, a new\n                     canvas will be created.",
                    "type": "Canvas",
                    "optional": true
                }
            ],
            "return": {
                "description": "A canvas with the combined image data. This can be used as a source for a\n             Texture.",
                "type": "Canvas"
            },
            "class": "springroll.ColorAlphaTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/FunctionTask.js",
            "line": 25,
            "description": "The asynchronous call",
            "itemtype": "property",
            "name": "async",
            "type": "Function",
            "class": "springroll.FunctionTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/FunctionTask.js",
            "line": 35,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.FunctionTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/FunctionTask.js",
            "line": 47,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when done",
                    "type": "Function"
                }
            ],
            "class": "springroll.FunctionTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/FunctionTask.js",
            "line": 57,
            "description": "Destroy this and discard",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.FunctionTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ListTask.js",
            "line": 27,
            "description": "The collection of assets to load",
            "itemtype": "property",
            "name": "assets",
            "type": "Array|Object",
            "class": "springroll.ListTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ListTask.js",
            "line": 33,
            "description": "If each asset in the collection should be cached.",
            "itemtype": "property",
            "name": "cacheAll",
            "type": "Boolean",
            "class": "springroll.ListTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ListTask.js",
            "line": 39,
            "description": "Callback when progress is updated",
            "itemtype": "property",
            "name": "progress",
            "type": "Function",
            "class": "springroll.ListTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ListTask.js",
            "line": 49,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.ListTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ListTask.js",
            "line": 61,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.ListTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/ListTask.js",
            "line": 76,
            "description": "Destroy this and discard",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.ListTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 29,
            "description": "The source URL to load",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 35,
            "description": "Call on load progress",
            "itemtype": "property",
            "name": "progress",
            "type": "Function",
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 41,
            "description": "Optional data to attach to load",
            "itemtype": "property",
            "name": "data",
            "type": "*",
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 47,
            "description": "If turned on return a springroll.LoaderResult object\ninstead of the content",
            "itemtype": "property",
            "name": "advanced",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 59,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 71,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/LoadTask.js",
            "line": 96,
            "description": "Destroy this and discard",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.LoadTask",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 30,
            "description": "The current status of the task (waiting, running, etc)",
            "itemtype": "property",
            "name": "status",
            "type": "Int",
            "default": "0",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 37,
            "description": "The user call to fire when completed, returns the arguments\nresult, original, and additionalAssets",
            "itemtype": "property",
            "name": "complete",
            "type": "Function",
            "default": "null",
            "readonly": "",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 46,
            "description": "If we should cache the load and use later",
            "itemtype": "property",
            "name": "cache",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 54,
            "description": "The task id",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 60,
            "description": "The task type for display filter",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 66,
            "description": "Reference to the original asset data",
            "itemtype": "property",
            "name": "original",
            "type": "Object",
            "readonly": "",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 111,
            "description": "Status for waiting to be run",
            "itemtype": "property",
            "name": "WAITING",
            "type": "Int",
            "static": 1,
            "readonly": "",
            "final": 1,
            "default": "0",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 121,
            "description": "Task is currently being run",
            "itemtype": "property",
            "name": "RUNNING",
            "type": "Int",
            "static": 1,
            "readonly": "",
            "final": 1,
            "default": "1",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 131,
            "description": "Status for task is finished",
            "itemtype": "property",
            "name": "FINISHED",
            "type": "Int",
            "static": 1,
            "readonly": "",
            "final": 1,
            "default": "2",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 141,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 151,
            "description": "Add the sizing to each filter",
            "itemtype": "method",
            "name": "filter",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "The url to filter",
                    "type": "String"
                }
            ],
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 176,
            "description": "Pass-through to the Application load method",
            "itemtype": "method",
            "name": "load",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "source",
                    "description": "The source to load",
                    "type": "String|Array|Object"
                },
                {
                    "name": "options",
                    "description": "The load options or callback function",
                    "type": "Object|Function",
                    "optional": true
                }
            ],
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 188,
            "description": "Pass-through to the Application Loader.load",
            "itemtype": "method",
            "name": "simpleLoad",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "Path to file to load",
                    "type": "String"
                },
                {
                    "name": "complete",
                    "description": "The callback",
                    "type": "Function"
                },
                {
                    "name": "progress",
                    "description": "The load progress",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "Additiona data",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/tasks/Task.js",
            "line": 202,
            "description": "Destroy this and discard",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.Task",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 21,
            "description": "The cache containing assets",
            "itemtype": "property",
            "name": "_cache",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 32,
            "description": "Retrieves a single asset from the cache.",
            "itemtype": "method",
            "name": "read",
            "params": [
                {
                    "name": "id",
                    "description": "The asset to get.",
                    "type": "String"
                }
            ],
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 46,
            "description": "Adds a single asset to the cache.",
            "itemtype": "method",
            "name": "write",
            "params": [
                {
                    "name": "id",
                    "description": "The id to save the asset as.",
                    "type": "String"
                },
                {
                    "name": "content",
                    "description": "The asset content to save.",
                    "type": "*"
                }
            ],
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 66,
            "description": "Removes a single asset from the cache.",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to remove.",
                    "type": "Object|String"
                }
            ],
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 103,
            "description": "Destroy a result object.",
            "itemtype": "method",
            "name": "destroyResult",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "result",
                    "description": "The object to destroy.",
                    "type": "*"
                }
            ],
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 127,
            "description": "Removes all assets from the cache.",
            "itemtype": "method",
            "name": "empty",
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetCache.js",
            "line": 139,
            "description": "Destroy the cache. Don't use after this.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AssetCache",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 28,
            "description": "Reference to the Task Manager",
            "itemtype": "property",
            "name": "manager",
            "type": "springroll.AssetManager",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 39,
            "description": "How to display the results, either as single (0), map (1) or list (2)",
            "itemtype": "property",
            "name": "mode",
            "type": "Int",
            "default": "1",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 46,
            "description": "If we should run the tasks in parallel (true) or serial (false)",
            "itemtype": "property",
            "name": "startAll",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 53,
            "description": "If we should try to cache all items in the load",
            "itemtype": "property",
            "name": "cacheAll",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 60,
            "description": "The list of tasks to load",
            "itemtype": "property",
            "name": "tasks",
            "type": "Array",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 66,
            "description": "The results to return when we're done",
            "itemtype": "property",
            "name": "results",
            "type": "Array|Object",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 72,
            "description": "If the load is currently running",
            "itemtype": "property",
            "name": "running",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 79,
            "description": "The total number of assets loaded",
            "itemtype": "property",
            "name": "numLoaded",
            "type": "Int",
            "default": "0",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 86,
            "description": "The total number of assets",
            "itemtype": "property",
            "name": "total",
            "type": "Int",
            "default": "0",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 93,
            "description": "The default asset type if not defined",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "null",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 104,
            "description": "When an asset is finished",
            "itemtype": "event",
            "name": "taskDone",
            "params": [
                {
                    "name": "result",
                    "description": "The loader result",
                    "type": "*"
                },
                {
                    "name": "originalAsset",
                    "description": "The original load asset",
                    "type": "Object"
                },
                {
                    "name": "assets",
                    "description": "Collection to add additional assets to",
                    "type": "Array"
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 112,
            "description": "When all assets have been completed loaded",
            "itemtype": "event",
            "name": "complete",
            "params": [
                {
                    "name": "results",
                    "description": "The results of load",
                    "type": "Array|Object"
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 118,
            "description": "Check how many assets have finished loaded",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "percentage",
                    "description": "The amount loaded from 0 to 1",
                    "type": "Number"
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 126,
            "description": "Debugging Keep track of how many we've created",
            "itemtype": "property",
            "name": "ID",
            "type": "Int",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 134,
            "description": "Debugging purposes",
            "itemtype": "method",
            "name": "toString",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 144,
            "description": "Initialize the Load",
            "itemtype": "method",
            "name": "setup",
            "params": [
                {
                    "name": "assets",
                    "description": "The collection of assets to load",
                    "type": "Object|Array"
                },
                {
                    "name": "options",
                    "description": "The loading options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "startAll",
                            "description": "If we should run the tasks in order",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "autoStart",
                            "description": "Automatically start running",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "cacheAll",
                            "description": "If we should run the tasks in order",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "type",
                            "description": "The default asset type of load, gets attached to each asset",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 174,
            "description": "Start the load process",
            "itemtype": "method",
            "name": "start",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 188,
            "description": "Set back to the original state",
            "itemtype": "method",
            "name": "reset",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 211,
            "description": "The result is a single result",
            "itemtype": "property",
            "name": "SINGLE_MODE",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "final": 1,
            "static": 1,
            "default": "0",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 221,
            "description": "The result is a map of result objects",
            "itemtype": "property",
            "name": "MAP_MODE",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "final": 1,
            "static": 1,
            "default": "1",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 231,
            "description": "The result is an array of result objects",
            "itemtype": "property",
            "name": "LIST_MODE",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "final": 1,
            "static": 1,
            "default": "2",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 241,
            "description": "Create a list of tasks from assets",
            "itemtype": "method",
            "name": "addTasks",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "assets",
                    "description": "The assets to load",
                    "type": "Object|Array"
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 311,
            "description": "Convert assets into object defaults",
            "itemtype": "method",
            "name": "applyDefaults",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The function to convert",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The object asset to use",
                "type": "Object"
            },
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 338,
            "description": "Load a single asset",
            "itemtype": "method",
            "name": "addTask",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to load,\n     can either be an object, URL/path, or async function.",
                    "type": "Object"
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 370,
            "description": "Get the Task definition for an asset",
            "itemtype": "method",
            "name": "getTaskByAsset",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The Task class",
                "type": "Function"
            },
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 396,
            "description": "Run the next task that's waiting",
            "itemtype": "method",
            "name": "nextTask",
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 418,
            "description": "Handler when a task has completed",
            "itemtype": "method",
            "name": "taskDone",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "task",
                    "description": "Reference to original task",
                    "type": "springroll.Task"
                },
                {
                    "name": "result",
                    "description": "The result of load",
                    "type": "*",
                    "optional": true
                }
            ],
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 518,
            "description": "Get an empty assets collection",
            "itemtype": "method",
            "name": "getAssetsContainer",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "mode",
                    "description": "The mode",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Empty container for assets",
                "type": "Array|Object|null"
            },
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 538,
            "description": "Destroy this and discard",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 550,
            "description": "Check if an object is an String type",
            "itemtype": "method",
            "name": "isString",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "The object",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If it's an String",
                "type": "Boolean"
            },
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetLoad.js",
            "line": 562,
            "description": "Check if an object is an function type",
            "itemtype": "method",
            "name": "isFunction",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "The object",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If it's an function",
                "type": "Boolean"
            },
            "class": "springroll.AssetLoad",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 25,
            "description": "The collection of current multiloads",
            "itemtype": "property",
            "name": "loads",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 32,
            "description": "The expired loads to reuse.",
            "itemtype": "property",
            "name": "loadPool",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 39,
            "description": "The collection of task definitions",
            "itemtype": "property",
            "name": "taskDefs",
            "type": "Array",
            "readonly": "",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 46,
            "description": "The cache of assets",
            "itemtype": "property",
            "name": "cache",
            "type": "springroll.AssetCache",
            "readonly": "",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 53,
            "description": "Handle multiple asset sizes. Defaults are 'full' at a scale of 1, and\n'half' at a scale of 0.5 (under 400 points).",
            "itemtype": "property",
            "name": "sizes",
            "type": "springroll.AssetSizes",
            "readonly": "",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 61,
            "description": "The default asset type",
            "itemtype": "property",
            "name": "defaultType",
            "type": "String",
            "readonly": "",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 76,
            "description": "Register new tasks types, these tasks must extend Task",
            "itemtype": "method",
            "name": "register",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "TaskClass",
                    "description": "The class task reference",
                    "type": "Function|String"
                },
                {
                    "name": "priority",
                    "description": "The priority. Higher priority tasks\n     are tested first. More general tasks should be lower\n     and more specific tasks should be higher.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 117,
            "description": "Load a bunch of assets, can only call one load at a time",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "asset",
                    "description": "The assets to load",
                    "type": "Object|Array"
                },
                {
                    "name": "options",
                    "description": "The loading options",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "complete",
                            "description": "The callback when finished",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "progress",
                            "description": "The callback when loading percentage is updated",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "taskDone",
                            "description": "The callback when finished with each individual task",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "autoStart",
                            "description": "If we should start running right away",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "startAll",
                            "description": "If we should run all the tasks at once, in parallel",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "cacheAll",
                            "description": "If we should cache all files",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "type",
                            "description": "The type of assets to load, defaults to AssetManager.prototype.defaultType",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The reference to the current load",
                "type": "springroll.AssetLoad"
            },
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 175,
            "description": "Stash the load for use later",
            "itemtype": "method",
            "name": "poolLoad",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "load",
                    "description": "The load to recycle",
                    "type": "springroll.AssetLoad"
                }
            ],
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 188,
            "description": "Get either a new AssetLoad or a recycled one",
            "itemtype": "method",
            "name": "getLoad",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The load to use",
                "type": "springroll.AssetLoad"
            },
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 203,
            "description": "Handler when a load is finished",
            "itemtype": "method",
            "name": "_onLoaded",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "complete",
                    "description": "The function to call when done",
                    "type": "Function"
                },
                {
                    "name": "load",
                    "description": "The current load",
                    "type": "springroll.AssetLoad"
                },
                {
                    "name": "The",
                    "description": "returned results",
                    "type": "*"
                }
            ],
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetManager.js",
            "line": 222,
            "description": "Destroy the AssetManager",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AssetManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 22,
            "description": "The collection of size objects",
            "itemtype": "property",
            "name": "_sizes",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 29,
            "description": "The map of size objects",
            "itemtype": "property",
            "name": "_sizesMap",
            "type": "_sizesMap",
            "access": "private",
            "tagname": "",
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 36,
            "description": "The preferred size",
            "itemtype": "property",
            "name": "_preferredSize",
            "type": "Object",
            "readonly": "",
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 47,
            "description": "The URL substitution string.",
            "itemtype": "property",
            "name": "SIZE_TOKEN",
            "type": "String",
            "static": 1,
            "default": "\"%SIZE%\"",
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 55,
            "description": "Removes all currently defined sizes.",
            "itemtype": "method",
            "name": "reset",
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 65,
            "description": "Adds a new size definition.",
            "itemtype": "method",
            "name": "define",
            "params": [
                {
                    "name": "id",
                    "description": "The name of the folder which contains assets of this size.",
                    "type": "String"
                },
                {
                    "name": "maxSize",
                    "description": "The maximum size in points capable of using this size.",
                    "type": "Int"
                },
                {
                    "name": "scale",
                    "description": "The scale of assets",
                    "type": "Number"
                },
                {
                    "name": "fallback",
                    "description": "The size fallbacks if this size isn't available\n     for the current asset request.",
                    "type": "Array"
                }
            ],
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 93,
            "description": "Update a URL by size",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "url",
                    "description": "The asset to load",
                    "type": "String"
                },
                {
                    "name": "size",
                    "description": "The currrent size object",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "The name of the current size",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The formatted url",
                "type": "String"
            },
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 107,
            "description": "Make sure we have a token",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to test",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If we have the token",
                "type": "Boolean"
            },
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 118,
            "description": "Get a size based on the current asset sizes supported",
            "itemtype": "method",
            "name": "size",
            "params": [
                {
                    "name": "supported",
                    "description": "Return the preferred size if nothing is set",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return the size object with id, scale, maxSize and fallback keys",
                "type": "Object"
            },
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 154,
            "description": "Recalculate the current preferred size based on width and height",
            "itemtype": "method",
            "name": "refresh",
            "params": [
                {
                    "name": "width",
                    "description": "The width of the stage",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height of the stage",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The size",
                "type": "Object"
            },
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/AssetSizes.js",
            "line": 182,
            "description": "Destroy and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AssetSizes",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 28,
            "description": "The current application",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_app",
            "type": "springroll.Application",
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 35,
            "description": "The collection of version numbers",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_versions",
            "type": "Dictionary",
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 42,
            "description": "The list of URL filtering functions.",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "_filters",
            "type": "Array",
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 49,
            "description": "A global version or cache busting string to apply to every url.",
            "itemtype": "property",
            "name": "_globalVersion",
            "type": "String",
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 66,
            "description": "If we are suppose to cache bust every file",
            "itemtype": "property",
            "name": "cacheBust",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "default": "false",
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 104,
            "description": "Destroy the cache manager, don't use after this.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 118,
            "description": "Adds a versions text file containing versions for different assets.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "addVersionsFile",
            "params": [
                {
                    "name": "url",
                    "description": "The url of the versions file.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback when the versions file has been loaded.",
                    "type": "Function"
                },
                {
                    "name": "baseUrl",
                    "description": "A base url to prepend all lines of the file.",
                    "type": "String"
                }
            ],
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 175,
            "description": "Add a version number for a file",
            "itemtype": "method",
            "name": "addVersion",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "The url of the object",
                    "type": "String"
                },
                {
                    "name": "version",
                    "description": "Version number or has of file",
                    "type": "String"
                }
            ],
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 188,
            "description": "Adds a function for running all urls through, to modify them if needed.\nFunctions used should accept one string parameter (the url), and return the\nmodified url.",
            "itemtype": "method",
            "name": "registerURLFilter",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "filter",
                    "description": "The function that will handle urls.",
                    "type": "Function"
                }
            ],
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 202,
            "description": "Removes a function from the list of filtering functions.",
            "itemtype": "method",
            "name": "unregisterURLFilter",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "filter",
                    "description": "The function to remove.",
                    "type": "Function"
                }
            ],
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 215,
            "description": "Applies a url specific version to a url from the versions file.",
            "itemtype": "method",
            "name": "_applySpecificVersion",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "The url to apply versioning to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The modified url.",
                "type": "String"
            },
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 238,
            "description": "Applies cache busting or a global version to a url.",
            "itemtype": "method",
            "name": "_applyGlobalVersion",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "The url to apply versioning to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The modified url.",
                "type": "String"
            },
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 262,
            "description": "Applies a base path to a relative url. This is not used in the filtering\nsystem because PreloadJS has its own method of prepending the base path\nthat we use. Instead, it is used with an extra parameter to prepare().",
            "itemtype": "method",
            "name": "_applyBasePath",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "The url to prepend the base path to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The modified url.",
                "type": "String"
            },
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/CacheManager.js",
            "line": 281,
            "description": "Prepare a URL with the necessary cache busting and/or versioning\nas well as the base directory.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "prepare",
            "params": [
                {
                    "name": "url",
                    "description": "The url to prepare",
                    "type": "String"
                },
                {
                    "name": "applyBasePath",
                    "description": "If the global base path should be applied to the url.\n\t\tThis defaults to false because it can potentially interfere with later regular\n\t\texpression checks, particularly with PreloadJS",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The final url with version/cache and basePath added",
                "type": "String"
            },
            "class": "springroll.CacheManager",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 16,
            "description": "The game has finished loading",
            "itemtype": "event",
            "name": "loaded",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 21,
            "description": "The amount of progress of the preload from 0 to 1",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "percentage",
                    "description": "The amount preloaded",
                    "type": "Number"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 27,
            "description": "The config has finished loading, in case you want to\nadd additional tasks to the manager after this.",
            "itemtype": "event",
            "name": "configLoaded",
            "params": [
                {
                    "name": "config",
                    "description": "The JSON object for config",
                    "type": "Object"
                },
                {
                    "name": "assets",
                    "description": "Container to add additional assets to",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 35,
            "description": "The game has started loading",
            "itemtype": "event",
            "name": "loading",
            "params": [
                {
                    "name": "assets",
                    "description": "The list of tasks to preload",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 48,
            "description": "The path to the config file to load",
            "itemtype": "property",
            "name": "options.configPath",
            "type": "String",
            "default": "null",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 55,
            "description": "The collection of assets to preload, can be individual\nURLs or objects with keys `src`, `complete`, `progress`, etc.",
            "itemtype": "property",
            "name": "options.preload",
            "type": "String|Array|Object",
            "default": "[]",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 63,
            "description": "The game configuration loaded from and external JSON file",
            "itemtype": "property",
            "name": "config",
            "type": "Object",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 69,
            "description": "The asset load for preloading",
            "itemtype": "property",
            "name": "_assetLoad",
            "type": "springroll.AssetLoad",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 76,
            "description": "The total number of assets loaded",
            "itemtype": "property",
            "name": "_numLoaded",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 83,
            "description": "The total assets to preload",
            "itemtype": "property",
            "name": "_total",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 90,
            "description": "The current combined progress with plugin and asset load",
            "itemtype": "property",
            "name": "_progress",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "default": "-1",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 141,
            "description": "Callback when progress is finished",
            "itemtype": "method",
            "name": "onProgress",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "progress",
                    "description": "The amount loaded from 0 to 1",
                    "type": "Number"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 164,
            "description": "Add the preload assets to the list of assets to load",
            "itemtype": "method",
            "name": "addPreloadAssets",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "app",
                    "description": "Reference to the application",
                    "type": "springroll.Application"
                },
                {
                    "name": "assets",
                    "description": "The array to add new load tasks to",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 179,
            "description": "Callback when the config is loaded",
            "itemtype": "method",
            "name": "onConfigLoaded",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "config",
                    "description": "The Loader result from the load",
                    "type": "Object"
                },
                {
                    "name": "asset",
                    "description": "Original asset data",
                    "type": "Object"
                },
                {
                    "name": "assets",
                    "description": "The array to add new load tasks to",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/ConfigPlugin.js",
            "line": 194,
            "description": "Callback when tasks are completed",
            "itemtype": "method",
            "name": "onLoadComplete",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "done",
                    "description": "Call when we're done",
                    "type": "Function"
                },
                {
                    "name": "results",
                    "description": "The collection of final LoaderResult objects",
                    "type": "Array"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 20,
            "description": "The current application",
            "itemtype": "property",
            "name": "app",
            "type": "springroll.Application",
            "access": "private",
            "tagname": "",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 27,
            "description": "The maximum number of simulaneous loads",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "maxCurrentLoads",
            "type": "Int",
            "default": "2",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 35,
            "description": "The reference to the cache manager",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "cacheManager",
            "type": "CacheManager",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 42,
            "description": "The collection of LoaderItems by url",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "items",
            "type": "Object",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 49,
            "description": "The pool of LoaderItems",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "itemPool",
            "type": "Array",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 62,
            "description": "If the logging should be verbose (unminified library only)",
            "itemtype": "property",
            "name": "verbose",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 76,
            "description": "Destroy the Loader singleton, don't use after this",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 100,
            "description": "Load a file",
            "itemtype": "method",
            "name": "load",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "The file path to load",
                    "type": "String"
                },
                {
                    "name": "complete",
                    "description": "The callback function when completed",
                    "type": "Function"
                },
                {
                    "name": "progress",
                    "description": "The callback for load progress update, passes 0-1 as param",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "data",
                    "description": "optional data",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "The load queue item",
                "type": "createjs.LoadQueue"
            },
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 139,
            "description": "Handler for the file complete",
            "itemtype": "method",
            "name": "_onComplete",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "complete",
                    "description": "Callback function when done",
                    "type": "Function"
                },
                {
                    "name": "item",
                    "description": "The LoadQueue",
                    "type": "springroll.LoaderItem"
                },
                {
                    "name": "result",
                    "description": "[description]",
                    "type": "Null|*"
                }
            ],
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 161,
            "description": "Cancel a load that's currently in progress",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "cancel",
            "params": [
                {
                    "name": "url",
                    "description": "The url",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If canceled returns true, false if not canceled",
                "type": "Bool"
            },
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 181,
            "description": "Get a Queue item from the pool or new",
            "itemtype": "method",
            "name": "_getItem",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "The Queue item to use",
                "type": "springroll.LoaderItem"
            },
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/Loader.js",
            "line": 193,
            "description": "Pool the loader queue item",
            "itemtype": "method",
            "name": "_putItem",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "item",
                    "description": "Loader item that's done",
                    "type": "springroll.LoaderItem"
                }
            ],
            "class": "springroll.Loader",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 25,
            "description": "The number of times this load has been retried",
            "itemtype": "property",
            "name": "retries",
            "type": "Int",
            "default": "",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 32,
            "description": "The original input url of the load",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 39,
            "description": "The actual url of the load",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "preparedUrl",
            "type": "String",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 46,
            "description": "Data associate with the load",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "data",
            "type": "*",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 53,
            "description": "The callback function of the load, to call when \nthe load as finished, takes one argument as result",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 61,
            "description": "The progress callback",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "onProgress",
            "type": "Function",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 68,
            "description": "The callback when a load queue item fails",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_onFailed",
            "type": "Function",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 75,
            "description": "The callback when a load queue item progresses",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_onProgress",
            "type": "Function",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 82,
            "description": "The callback when a load queue item completes",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_onCompleted",
            "type": "Function",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 99,
            "description": "Represent this object as a string",
            "itemtype": "property",
            "name": "MAX_RETRIES",
            "type": "Int",
            "static": 1,
            "default": "3",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 109,
            "description": "If the loads should be verbose",
            "itemtype": "property",
            "name": "verbose",
            "type": "Boolean",
            "static": 1,
            "default": "false",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 118,
            "description": "Represent this object as a string",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "The string representation of this object",
                "type": "String"
            },
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 129,
            "description": "The base path of the load",
            "itemtype": "property",
            "name": "basePath",
            "type": "String",
            "default": "null",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 142,
            "description": "If this load should be cross origin",
            "itemtype": "property",
            "name": "crossOrigin",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 155,
            "description": "Clear all the data",
            "itemtype": "method",
            "name": "clear",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 175,
            "description": "Start the loading",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "maxCurrentLoads",
                    "description": "The max number of simultaneous load",
                    "type": "Int"
                }
            ],
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 192,
            "description": "Start the loading internally",
            "itemtype": "method",
            "name": "_internalStart",
            "access": "private",
            "tagname": "",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 215,
            "description": "The file load progress event",
            "itemtype": "method",
            "name": "_onProgress",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "The progress event",
                    "type": "Object"
                }
            ],
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 229,
            "description": "There was an error loading the file",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onFailed",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 245,
            "description": "Retry the current load",
            "itemtype": "method",
            "name": "retry",
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderItem.js",
            "line": 262,
            "description": "The file was loaded successfully",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onCompleted",
            "params": [
                {
                    "name": "ev",
                    "description": "The load event",
                    "type": "Object"
                }
            ],
            "class": "springroll.LoaderItem",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 19,
            "description": "Reference to the loader.",
            "itemtype": "property",
            "name": "loader",
            "type": "springroll.Loader",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 25,
            "description": "Reference to the asset manager.",
            "itemtype": "property",
            "name": "assetManager",
            "type": "springroll.AssetManager",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 38,
            "description": "Override the end-user browser cache by adding\n\"?cb=\" to the end of each file path requested. Use\nfor development, debugging only!",
            "itemtype": "property",
            "name": "options.cacheBust",
            "type": "Boolean",
            "default": "DEBUG",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 56,
            "description": "The optional file path to prefix to any relative file\nrequests. This is a great way to load all load requests\nwith a CDN path.",
            "itemtype": "property",
            "name": "options.basePath",
            "type": "String",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 64,
            "description": "The current version number for your application. This\nnumber will automatically be appended to all file\nrequests. For instance, if the version is \"0.0.1\" all\nfile requests will be appended with \"?v=0.0.1\"",
            "itemtype": "property",
            "name": "options.version",
            "type": "String",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 73,
            "description": "Path to a text file which contains explicit version\nnumbers for each asset. This is useful for controlling\nthe live browser cache. For instance, this text file\nwould have an asset on each line followed by a number:\n`assets/config/config.json 2` would load\n`assets/config/config.json?v=2`",
            "itemtype": "property",
            "name": "options.versionsFile",
            "type": "String",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 84,
            "description": "Different displays offer flavors of the same asset definition.\nInstead of repeatedly defining the asset type property,\nit's possible to define a global default. If PIXI\nis your default display \"pixi\" is recommended as a value.\nIf EaselJS is your default display \"easeljs\" is recommended.",
            "itemtype": "property",
            "name": "options.defaultAssetType",
            "type": "String",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 98,
            "description": "Simple load of a single file.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "source",
                    "description": "The file to load",
                    "type": "String"
                },
                {
                    "name": "complete",
                    "description": "The completed callback with a single\n     parameters result object.",
                    "type": "Function"
                },
                {
                    "name": "progress",
                    "description": "Update callback, return 0-1",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "cache",
                    "description": "Save to the asset cache after load",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "data",
                    "description": "The data to attach to load item",
                    "type": "*",
                    "optional": true
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 108,
            "description": "Load a single file with options.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "asset",
                    "description": "The file resource to load",
                    "type": "Object",
                    "props": [
                        {
                            "name": "src",
                            "description": "The file to load",
                            "type": "String"
                        },
                        {
                            "name": "cache",
                            "description": "If the result should be cached for later",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "complete",
                            "description": "Callback when finished",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "progress",
                            "description": "Callback on load progress,\n     has a parameter which is the percentage loaded from 0 to 1.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "data",
                            "description": "Additional data to attach to load is\n     accessible in the loader's result.",
                            "type": "*",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "complete",
                    "description": "The completed callback with a single\n     parameter which is a result object. will\n     only use if `asset.complete` is undefined.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 123,
            "description": "Load a single custom asset with options.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "asset",
                    "description": "The single asset resource to load, properties\n     will depend on the type of asset loading.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "complete",
                            "description": "Callback when finished",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "id",
                            "description": "The ID to attach to this asset",
                            "type": "String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "cache",
                            "description": "If the result should be cached for later",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "complete",
                    "description": "The completed callback with a single\n     parameters which is a result object. will\n     only use if `asset.complete` is undefined.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 135,
            "description": "Load a map of multiple assets and return mapped result objects.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "assets",
                    "description": "Load a map of assets.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Callback where the only parameter is the\n     map of the results by ID, or the collection of load options.",
                    "type": "Function|Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "complete",
                            "description": "The complete callback if using load options.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "taskDone",
                            "description": "The callback when a single item is finished.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "progress",
                            "description": "Callback percentage updates",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "cacheAll",
                            "description": "If tasks should be cached",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "startAll",
                            "description": "If tasks should be run in parallel",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "type",
                            "description": "The default asset type of load, gets attached to each asset",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 148,
            "description": "Load a list of multiple assets and return array of result objects.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "assets",
                    "description": "The list of assets.\n     If each object has a `id` the result will be a mapped object.",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "Callback where the only parameter is the\n     collection or map of the results, or the collection of load options.",
                    "type": "Function|Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "complete",
                            "description": "The complete callback if using load options.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "taskDone",
                            "description": "The callback when a single item is finished.",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "progress",
                            "description": "Callback percentage updates",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "cacheAll",
                            "description": "If tasks should be cached",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "startAll",
                            "description": "If tasks should be run in parallel",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "type",
                            "description": "The default asset type of load, gets attached to each asset",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 194,
            "description": "Unload an asset or list of assets.",
            "itemtype": "method",
            "name": "unload",
            "params": [
                {
                    "name": "assets",
                    "description": "The collection of asset ids or\n     single asset id. As an array, it can be a manifest\n     with objects that contain an ID, or an array of multiple strings.",
                    "type": "Array|String"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 214,
            "description": "Unload all assets from the assets cache",
            "itemtype": "method",
            "name": "unloadAll",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderPlugin.js",
            "line": 223,
            "description": "Get an asset from the cache by ID",
            "itemtype": "method",
            "name": "getCache",
            "params": [
                {
                    "name": "id",
                    "description": "The asset to fetch",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The cached object or null if empty",
                "type": "*|null"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 17,
            "description": "The contents of the load",
            "itemtype": "property",
            "name": "content",
            "type": "*",
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 23,
            "description": "The url of the load",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 29,
            "description": "The data for the load item.",
            "itemtype": "property",
            "name": "data",
            "type": "*",
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 35,
            "description": "The original asset id, if any",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 45,
            "description": "A to string method",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "A string rep of the object",
                "type": "String"
            },
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 56,
            "description": "Reset to the original state",
            "itemtype": "method",
            "name": "reset",
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/loaders/LoaderResult.js",
            "line": 68,
            "description": "Destroy this result",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.LoaderResult",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 21,
            "description": "If we fire debug statements",
            "itemtype": "property",
            "name": "debug",
            "type": "Boolean",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 27,
            "description": "The global captions object to use with animator",
            "itemtype": "property",
            "name": "captions",
            "type": "springroll.Captions",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 33,
            "description": "Reference to the application",
            "itemtype": "property",
            "name": "app",
            "type": "springroll.Application",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 40,
            "description": "The collection of AnimatorPlugin definitions",
            "itemtype": "property",
            "name": "_definitions",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 47,
            "description": "The collection of timelines",
            "itemtype": "property",
            "name": "_timelines",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 54,
            "description": "The collection of active timelines, indexed by MovieClip/instance. This will be\nnull in browsers where Map is not supported.",
            "itemtype": "property",
            "name": "_timelineMap",
            "type": "Map",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 81,
            "description": "The collection of used timeline objects",
            "itemtype": "property",
            "name": "_timelinePool",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 88,
            "description": "If there are timelines available",
            "itemtype": "property",
            "name": "_hasTimelines",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 95,
            "description": "If the Animator is paused",
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 120,
            "description": "Register an animator instance definition type",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "qualifiedClassName",
                    "description": "The class name",
                    "type": "String"
                },
                {
                    "name": "priority",
                    "description": "The priority order for definition",
                    "type": "Int"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 141,
            "description": "Play an animation for a frame label event, with more verbose play options.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "clip",
                    "description": "The display object with the same API to animate.",
                    "type": "*"
                },
                {
                    "name": "options",
                    "description": "One of or an array of the following",
                    "type": "Object",
                    "props": [
                        {
                            "name": "anim",
                            "description": "the frame label of the animation to play,\ne.g. \"onClose\" to \"onClose_stop\".",
                            "type": "String"
                        },
                        {
                            "name": "start",
                            "description": "Milliseconds into the animation to start.\nA value of -1 starts from a random time in the animation.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "speed",
                            "description": "a multiplier for the animation speed.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "audio",
                            "description": "Audio to sync the animation to using\nspringroll.Sound. audio can be a String if you want the audio to start 0 milliseconds\ninto the animation.",
                            "type": "Object|String",
                            "optional": true,
                            "props": [
                                {
                                    "name": "alias",
                                    "description": "The sound alias",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "start",
                                    "description": "The sound delay",
                                    "type": "Int",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "onComplete",
                    "description": "The callback function for when the animation is done.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "onCancelled",
                    "description": "A callback function for when an animation\nis stopped with Animator.stop() or to play another  animation. A value of 'true'\nuses onComplete for onCancelled.",
                    "type": "Function|Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Timeline object that represents this play() call.",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 163,
            "description": "Play an animation for a frame label event or events",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "clip",
                    "description": "The display object with the same API to animate.",
                    "type": "*"
                },
                {
                    "name": "eventList",
                    "description": "The name of an event or collection of events",
                    "type": "String|Array"
                },
                {
                    "name": "onComplete",
                    "description": "The callback function for when the animation is done.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "onCancelled",
                    "description": "A callback function for when an animation is\n       stopped with Animator.stop() or to play another\n       animation. A value of 'true' uses onComplete for\n       onCancelled.",
                    "type": "Function|Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "The Timeline object that represents this play() call.",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 249,
            "description": "Creates the AnimatorTimeline for a given animation",
            "itemtype": "method",
            "name": "_makeTimeline",
            "params": [
                {
                    "name": "clip",
                    "description": "The instance to animate",
                    "type": "*"
                },
                {
                    "name": "eventList",
                    "description": "List of animation events",
                    "type": "Array"
                },
                {
                    "name": "onComplete",
                    "description": "The function to callback when we're done",
                    "type": "Function"
                },
                {
                    "name": "onCancelled",
                    "description": "The function to callback when cancelled",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The Timeline object",
                "type": "springroll.AnimatorTimeline"
            },
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 358,
            "description": "Determines if a given instance can be animated by Animator. Note - `id` is a property\nwith a unique value for each `createjs.DisplayObject`. If a custom object is made that does\nnot inherit from DisplayObject, it needs to not have an id that is identical to anything\nfrom EaselJS.",
            "itemtype": "method",
            "name": "canAnimate",
            "params": [
                {
                    "name": "clip",
                    "description": "The object to check for animation properties.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "If the instance can be animated or not.",
                "type": "Boolean"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 376,
            "description": "Create an instance by clip",
            "itemtype": "method",
            "name": "createInstance",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "clip",
                    "description": "The animation object to animate",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The animator instance",
                "type": "springroll.AnimatorInstance"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 393,
            "description": "Destroy an instance",
            "itemtype": "method",
            "name": "poolInstance",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to destroy",
                    "type": "springroll.AnimatorInstance"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 405,
            "description": "Get a definition by clip",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getDefinitionByClip",
            "params": [
                {
                    "name": "clip",
                    "description": "The animation clip",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The new definition",
                "type": "Function|null"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 425,
            "description": "Checks if animation exists",
            "itemtype": "method",
            "name": "hasAnimation",
            "params": [
                {
                    "name": "clip",
                    "description": "The instance to check",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose_stop\")",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "return": {
                "description": "does this animation exist?",
                "type": "Boolean"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 443,
            "description": "Get duration of animation event (or sequence of events) in seconds",
            "itemtype": "method",
            "name": "getDuration",
            "params": [
                {
                    "name": "instance",
                    "description": "The timeline to check",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The frame label event or array, in the format that play() uses.",
                    "type": "String|Array"
                }
            ],
            "access": "public",
            "tagname": "",
            "return": {
                "description": "Duration of animation event in milliseconds",
                "type": "Number"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 483,
            "description": "Stop the animation.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "clip",
                    "description": "The instance to stop the action on",
                    "type": "*"
                },
                {
                    "name": "removeCallbacks",
                    "description": "Completely disregard the on complete\nor on cancelled callback of this animation.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 504,
            "description": "Stop all current Animator animations. This is good for cleaning up all\nanimation, as it doesn't do a callback on any of them.",
            "itemtype": "method",
            "name": "stopAll",
            "params": [
                {
                    "name": "container",
                    "description": "Specify a container to stop timelines\ncontained within. This only checks one layer deep.",
                    "type": "createjs.Container",
                    "optional": true
                },
                {
                    "name": "removeCallbacks",
                    "description": "Completely disregard the on complete\nor on cancelled callback of the current animations.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 536,
            "description": "Remove a timeline from the stack",
            "itemtype": "method",
            "name": "_remove",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "springroll.AnimatorTimeline"
                },
                {
                    "name": "doCancelled",
                    "description": "If we do the on complete callback",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 609,
            "description": "Pause all tweens which have been excuted by `play()`",
            "itemtype": "method",
            "name": "pause",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 628,
            "description": "Resumes all tweens executed by the `play()`",
            "itemtype": "method",
            "name": "resume",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 651,
            "description": "Pauses or unpauses all timelines that are children of the specified DisplayObjectContainer.",
            "itemtype": "method",
            "name": "pauseInGroup",
            "params": [
                {
                    "name": "paused",
                    "description": "If this should be paused or unpaused",
                    "type": "Boolean"
                },
                {
                    "name": "container",
                    "description": "The container to stop timelines contained within",
                    "type": "createjs.Container"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 672,
            "description": "Get the timeline object for an instance",
            "itemtype": "method",
            "name": "getTimeline",
            "params": [
                {
                    "name": "clip",
                    "description": "The animation clip",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The timeline",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 687,
            "description": "Loop a clip by timeline",
            "itemtype": "method",
            "name": "getTimelineByClip",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The timeline for clip",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 713,
            "description": "Whether the Animator class is currently paused.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 726,
            "description": "Start the updating",
            "itemtype": "method",
            "name": "_startUpdate",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 736,
            "description": "Stop the updating",
            "itemtype": "method",
            "name": "_stopUpdate",
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 746,
            "description": "The update every frame",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time in milliseconds since the last frame",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 856,
            "description": "The sound has been started",
            "itemtype": "method",
            "name": "onSoundStarted",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "springroll.AnimatorTimeline"
                },
                {
                    "name": "playIndex",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 873,
            "description": "The sound is done",
            "itemtype": "method",
            "name": "_onSoundDone",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "springroll.AnimatorTimeline"
                },
                {
                    "name": "playIndex",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "soundAlias",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 900,
            "description": "Stops all animations and cleans up the variables used.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 918,
            "description": "Check to see if object is a String",
            "itemtype": "method",
            "name": "isString",
            "params": [
                {
                    "name": "str",
                    "description": "The string",
                    "type": "*"
                }
            ],
            "return": {
                "description": "if object is String",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 930,
            "description": "Check to see if object is a Number",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "num",
                    "description": "The object to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "if object is Number",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Animator.js",
            "line": 942,
            "description": "Check to see if object is a Function",
            "itemtype": "method",
            "name": "isFunction",
            "params": [
                {
                    "name": "func",
                    "description": "The object to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "if object is Function",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "springroll.Animator",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 17,
            "description": "The animation clip to play",
            "itemtype": "property",
            "name": "clip",
            "type": "*",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 23,
            "description": "Time, in seconds, of the current animation playback, from 0 -> duration.",
            "itemtype": "property",
            "name": "position",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 29,
            "description": "Duration, in seconds, of the current animation.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 35,
            "description": "If the current animation is a looping animation.",
            "itemtype": "property",
            "name": "isLooping",
            "type": "Boolean",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 41,
            "description": "The name of the current animation.",
            "itemtype": "property",
            "name": "currentName",
            "type": "String",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 51,
            "description": "The initialization method",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "clip",
                    "description": "The movieclip",
                    "type": "*"
                }
            ],
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 61,
            "description": "Sets up variables that are needed (including duration), and does any other setup else needed.",
            "itemtype": "method",
            "name": "beginAnim",
            "params": [
                {
                    "name": "animObj",
                    "description": "The animation data object.",
                    "type": "Object"
                },
                {
                    "name": "isRepeat",
                    "description": "If this animation is restarting a loop.",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 69,
            "description": "Ends animation playback.",
            "itemtype": "method",
            "name": "endAnim",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 75,
            "description": "Updates position to a new value, and does anything that the clip needs, like updating\ntimelines.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "newPos",
                    "description": "The new position in the animation.",
                    "type": "Number"
                }
            ],
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 83,
            "description": "Check to see if a clip is compatible with this",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "return": {
                "description": "if the clip is supported by this instance",
                "type": "Boolean"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 94,
            "description": "Determines if a clip has an animation.",
            "itemtype": "method",
            "name": "hasAnimation",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check for an animation.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The animation.",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "If the clip has the animation.",
                "type": "Boolean"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 107,
            "description": "Calculates the duration of an animation or list of animations.",
            "itemtype": "method",
            "name": "getDuration",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The animation or animation list.",
                    "type": "String|Object|Array"
                }
            ],
            "return": {
                "description": "Animation duration in milliseconds.",
                "type": "Number"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 120,
            "description": "Create pool and add create and remove functions",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "InstanceClass",
                    "description": "The instance class",
                    "type": "Function"
                },
                {
                    "name": "ParentClass",
                    "description": "The class to extend",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "springroll.AnimatorTimeline"
                }
            ],
            "return": {
                "description": "The prototype for new class",
                "type": "Object"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 129,
            "description": "The pool of used up instances",
            "itemtype": "property",
            "name": "_pool",
            "type": "Array",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 137,
            "description": "Get an instance either from a recycled pool or new",
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The animation clip or display object",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The new instance",
                "type": "springroll.AnimatorInstance"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 154,
            "description": "Recycle an instance to the class's pool",
            "itemtype": "method",
            "name": "pool",
            "static": 1,
            "params": [
                {
                    "name": "instance",
                    "description": "The instance to pool",
                    "type": "springroll.AnimatorInstance"
                }
            ],
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorInstance.js",
            "line": 170,
            "description": "Reset this animator instance\nso it can be re-used.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorPlugin.js",
            "line": 20,
            "description": "The class for playing animation",
            "itemtype": "property",
            "name": "animator",
            "type": "springroll.Animator",
            "class": "springroll.Application",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 15,
            "description": "The function to call when we're done",
            "itemtype": "property",
            "name": "onComplete",
            "type": "Function",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 21,
            "description": "The function to call when stopped early.",
            "itemtype": "property",
            "name": "onCancelled",
            "type": "Function",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 27,
            "description": "An array of animations and pauses.",
            "itemtype": "property",
            "name": "eventList",
            "type": "Array",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 33,
            "description": "The index of the active animation in eventList.",
            "itemtype": "property",
            "name": "listIndex",
            "type": "Int",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 39,
            "description": "The instance of the timeline to animate",
            "itemtype": "property",
            "name": "instance",
            "type": "springroll.AnimatorInstance",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 45,
            "description": "If the current animation loops - determined by looking to see if it ends\nin \"_stop\" or \"_loop\"",
            "itemtype": "property",
            "name": "isLooping",
            "type": "Boolean",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 52,
            "description": "If this timeline plays captions for the current sound.",
            "itemtype": "property",
            "name": "useCaptions",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 59,
            "description": "If the timeline is paused.",
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 66,
            "description": "The current animation duration in seconds.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 72,
            "description": "The animation speed for the current animation. Default is 1.",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 78,
            "description": "Sound alias to sync to during the current animation.",
            "itemtype": "property",
            "name": "soundAlias",
            "type": "String",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 84,
            "description": "A sound instance object from springroll.Sound, used for tracking sound\nposition for the current animation.",
            "itemtype": "property",
            "name": "soundInst",
            "type": "Object",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 91,
            "description": "If the timeline will, but has yet to play a sound for the current animation.",
            "itemtype": "property",
            "name": "playSound",
            "type": "Boolean",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 97,
            "description": "The time (seconds) into the current animation that the sound starts.",
            "itemtype": "property",
            "name": "soundStart",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 103,
            "description": "The time (seconds) into the animation that the sound ends",
            "itemtype": "property",
            "name": "soundEnd",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 109,
            "description": "If the timeline is complete. Looping timelines will never complete.",
            "itemtype": "property",
            "name": "complete",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 123,
            "description": "Reset the timeline so we can reuse",
            "itemtype": "method",
            "name": "reset",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Instance of timeline",
                "type": "springroll.AnimatorTimeline"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 172,
            "description": "Advances to the next item in the list of things to play.",
            "itemtype": "method",
            "name": "_nextItem",
            "access": "private",
            "tagname": "",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 253,
            "description": "The position of the current animation, or the current pause timer, in milliseconds.",
            "itemtype": "property",
            "name": "time",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/AnimatorTimeline.js",
            "line": 269,
            "description": "Sets and gets the animation's paused status.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 40,
            "description": "An object used as a dictionary with keys that should be the same as sound aliases",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_data",
            "type": "Object",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 47,
            "description": "A reference to the Text object that Captions should be controlling.\nOnly one text field can be controlled at a time.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_textField",
            "type": "createjs.Text|PIXI.Text|PIXI.BitmapText|DOMElement",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 55,
            "description": "The function to call when playback is complete.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_completeCallback",
            "type": "Function",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 62,
            "description": "The collection of line objects - {start:0, end:0, content:\"\"}",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_lines",
            "type": "Array",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 69,
            "description": "The alias of the current caption.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_currentAlias",
            "type": "String",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 76,
            "description": "The duration in milliseconds of the current caption.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_currentDuration",
            "type": "Int",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 83,
            "description": "The current playback time, in milliseconds.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_currentTime",
            "type": "Int",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 90,
            "description": "The current line index.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_currentLine",
            "type": "Int",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 97,
            "description": "The last active line index.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_lastActiveLine",
            "type": "Int",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 104,
            "description": "If we're playing.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_playing",
            "type": "Boolean",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 111,
            "description": "If this instance has been destroyed already.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_destroyed",
            "type": "Boolean",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 118,
            "description": "If the captions object should do its own update.",
            "itemtype": "property",
            "name": "_selfUpdate",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "default": "true",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 126,
            "description": "If the captions are muted",
            "itemtype": "property",
            "name": "_mute",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "default": "false",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 144,
            "description": "Reference to the prototype",
            "static": 1,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "p",
            "type": "Object",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 152,
            "description": "Set if all captions are currently muted.",
            "itemtype": "property",
            "name": "mute",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 170,
            "description": "If the captions object should do it's own updating unless you want to manuall\nseek. In general, self-updating should not be set to false unless the sync\nof the captions needs to be exact with something else.",
            "itemtype": "property",
            "name": "selfUpdate",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 195,
            "description": "Sets the dictionary object to use for captions. This overrides the current\ndictionary, if present.",
            "itemtype": "property",
            "name": "data",
            "type": "Object",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 266,
            "description": "The text field that the captions uses to update.",
            "itemtype": "property",
            "name": "textField",
            "type": "String|createjs.Text|PIXI.Text|PIXI.BitmapText|DOMElement",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 285,
            "description": "Automatically determine how to set the text field text",
            "itemtype": "method",
            "name": "setText",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "field",
                    "description": "The text field to change",
                    "type": "createjs.Text|PIXI.Text|PIXI.BitmapText|DOMElement"
                },
                {
                    "name": "text",
                    "description": "The text to set it to",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The text field",
                "type": "createjs.Text|PIXI.Text|PIXI.BitmapText|DOMElement"
            },
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 317,
            "description": "Returns if there is a caption under that alias or not.",
            "itemtype": "method",
            "name": "hasCaption",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias to check against",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Whether the caption was found or not",
                "type": "Boolean"
            },
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 328,
            "description": "A utility function for getting the full text of a caption by alias\nthis can be useful for debugging or tracking purposes.",
            "itemtype": "method",
            "name": "getFullCaption",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias or Array of aliases for which to get the text.\n                          Any non-String values in this Array are silently and\n                          harmlessly ignored.",
                    "type": "String|Array"
                },
                {
                    "name": "separator",
                    "description": "The separation between each line.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\" \""
                }
            ],
            "return": {
                "description": "The entire caption, concatinated by the separator.",
                "type": "String"
            },
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 390,
            "description": "Sets an array of line data as the current caption data to play.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_load",
            "params": [
                {
                    "name": "data",
                    "description": "The string",
                    "type": "String"
                }
            ],
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 412,
            "description": "Reset the captions",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_reset",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 423,
            "description": "Take the captions timecode and convert to milliseconds\nformat is in HH:MM:ss:mmm",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_timeCodeToMilliseconds",
            "params": [
                {
                    "name": "input",
                    "description": "The input string of the format",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Time in milliseconds",
                "type": "Int"
            },
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 443,
            "description": "The playing status.",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "playing",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 457,
            "description": "Calculate the total duration of the current caption",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getTotalDuration",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 468,
            "description": "Get the current duration of the current caption",
            "itemtype": "property",
            "name": "currentDuration",
            "type": "Int",
            "readonly": "",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 481,
            "description": "Get the current caption alias.",
            "itemtype": "property",
            "name": "currentAlias",
            "type": "String",
            "readonly": "",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 494,
            "description": "Start the caption playback.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "alias",
                    "description": "The desired caption's alias",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The function to call when the caption is finished playing",
                    "type": "Function"
                }
            ],
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 513,
            "description": "Convience function for stopping captions.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "stop",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 528,
            "description": "Goto a specific time.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "seek",
            "params": [
                {
                    "name": "time",
                    "description": "The time in milliseconds to seek to in the captions",
                    "type": "Int"
                }
            ],
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 580,
            "description": "Callback for when a frame is entered.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_updatePercent",
            "params": [
                {
                    "name": "progress",
                    "description": "The progress in the current sound as a percentage (0-1)",
                    "type": "Number"
                }
            ],
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 594,
            "description": "Function to update the amount of time elapsed for the caption playback.\nCall this to advance the caption by a given amount of time.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "progress",
                    "description": "The time elapsed since the last frame in milliseconds",
                    "type": "Int"
                }
            ],
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 609,
            "description": "Calculates the captions after increasing the current time.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_calcUpdate",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 647,
            "description": "Updates the text in the managed text field.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_updateCaptions",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 660,
            "description": "Returns duration in milliseconds of given captioned sound alias or alias list.",
            "itemtype": "method",
            "name": "getLength",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias or array of aliases for which to get duration.\n Array may contain integers (milliseconds) to account for un-captioned gaps.",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "Length/duration of caption in milliseconds.",
                "type": "Int"
            },
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Captions.js",
            "line": 696,
            "description": "Destroy this load task and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.Captions",
            "module": "Captions",
            "namespace": "springroll"
        },
        {
            "file": "src/media/CaptionsPlugin.js",
            "line": 21,
            "description": "The captions text field object to use for the \nVOPlayer captions object.",
            "itemtype": "property",
            "name": "options.captions",
            "type": "DOMElement|String|createjs.Text|PIXI.Text|PIXI.BitmapText",
            "default": "'captions'",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/CaptionsPlugin.js",
            "line": 30,
            "description": "The path to the captions file to preload.",
            "itemtype": "property",
            "name": "options.captionsPath",
            "type": "String",
            "default": "null",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/CaptionsPlugin.js",
            "line": 38,
            "description": "The global captions object",
            "itemtype": "property",
            "name": "captions",
            "type": "springroll.Captions",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 20,
            "description": "The start time of the current animation on the movieclip's timeline.",
            "itemtype": "property",
            "name": "startTime",
            "type": "Number",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 26,
            "description": "Length of current animation in frames.",
            "itemtype": "property",
            "name": "length",
            "type": "Int",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 32,
            "description": "The frame number of the first frame of the current animation. If this is -1, then the\nanimation is currently a pause instead of an animation.",
            "itemtype": "property",
            "name": "firstFrame",
            "type": "Int",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 39,
            "description": "The frame number of the last frame of the current animation.",
            "itemtype": "property",
            "name": "lastFrame",
            "type": "Int",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 49,
            "description": "The initialization method",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "clip",
                    "description": "The movieclip",
                    "type": "*"
                }
            ],
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 138,
            "description": "Ends animation playback.",
            "itemtype": "method",
            "name": "endAnim",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 147,
            "description": "Updates position to a new value, and does anything that the clip needs, like updating\ntimelines.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "newPos",
                    "description": "The new position in the animation.",
                    "type": "Number"
                }
            ],
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 162,
            "description": "Check to see if a clip is compatible with this",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "return": {
                "description": "if the clip is supported by this instance",
                "type": "Boolean"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 179,
            "description": "Checks if animation exists",
            "itemtype": "method",
            "name": "hasAnimation",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check for an animation.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose_stop\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "does this animation exist?",
                "type": "Boolean"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 217,
            "description": "Calculates the duration of an animation or list of animations.",
            "itemtype": "method",
            "name": "getDuration",
            "static": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to check.",
                    "type": "*"
                },
                {
                    "name": "event",
                    "description": "The animation or animation list.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Animation duration in milliseconds.",
                "type": "Number"
            },
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/GenericMovieClipInstance.js",
            "line": 268,
            "description": "Reset this animator instance\nso it can be re-used.",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.AnimatorTimeline",
            "module": "Animation",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 38,
            "description": "Dictionary of sound objects, containing configuration info and playback objects.",
            "itemtype": "property",
            "name": "_sounds",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 45,
            "description": "Array of SoundInstance objects that are being faded in or out.",
            "itemtype": "property",
            "name": "_fades",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 52,
            "description": "Array of SoundInstance objects waiting to be used.",
            "itemtype": "property",
            "name": "_pool",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 59,
            "description": "The extension of the supported sound type that will be used.",
            "itemtype": "property",
            "name": "supportedSound",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 66,
            "description": "Dictionary of SoundContexts.",
            "itemtype": "property",
            "name": "_contexts",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 78,
            "description": "If sound is enabled. This will only be false if Sound was unable to initialize\na SoundJS plugin.",
            "itemtype": "property",
            "name": "isSupported",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 86,
            "description": "If sound is currently muted by the system. This will only be true on iOS until\naudio has been unmuted during a touch event. Listen for the 'systemUnmuted'\nevent on Sound to be notified when the audio is unmuted on iOS.",
            "itemtype": "property",
            "name": "systemMuted",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 95,
            "description": "If preventDefault should be called on the interaction event that unmutes the audio.\nIn most cases (games) you would want to leave this, but for a website you may want\nto disable it.",
            "itemtype": "property",
            "name": "preventDefaultOnUnmute",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 105,
            "description": "Fired when audio is unmuted on iOS. If systemMuted is false, this will not be fired\n(or already has been fired).",
            "itemtype": "event",
            "name": "systemUnmuted",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 171,
            "description": "Initializes the Sound singleton. If using createjs.FlashAudioPlugin, you will\nbe responsible for setting createjs.FlashAudioPlugin.BASE_PATH.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "Either the options object or the ready function",
                    "type": "Object|Function",
                    "props": [
                        {
                            "name": "plugins",
                            "description": "The SoundJS\nplugins to pass to createjs.Sound.registerPlugins().",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "createjs.WebAudioPlugin,createjs.FlashAudioPlugin"
                        },
                        {
                            "name": "types",
                            "description": "The order in which file types are\npreferred, where \"ogg\" becomes a \".ogg\" extension on all sound file urls.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "['ogg','mp3']"
                        },
                        {
                            "name": "swfPath",
                            "description": "The required path to the\ncreatejs.FlashAudioPlugin SWF",
                            "type": "String",
                            "optional": true,
                            "optdefault": "'assets/swfs/'"
                        },
                        {
                            "name": "ready",
                            "description": "A function to call when initialization is complete.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The new instance of the sound object",
                "type": "Sound"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 336,
            "description": "Satisfies the iOS event needed to initialize the audio\nNote that we listen on touchend as per http://www.holovaty.com/writing/ios9-web-audio/",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_playEmpty",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 359,
            "description": "When the initialization as completed",
            "itemtype": "method",
            "name": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "filetypeOrder",
                    "description": "The list of files types",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "The callback function",
                    "type": "Function"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 404,
            "description": "The singleton instance of Sound.",
            "itemtype": "property",
            "name": "instance",
            "type": "Sound",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 418,
            "description": "Loads a context config object. This should not be called until after Sound.init() is complete.",
            "itemtype": "method",
            "name": "addContext",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "config",
                    "description": "The config to load.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "context",
                            "description": "The optional sound context to load sounds into unless\notherwise specified by the individual sound. Sounds do not require a context.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "path",
                            "description": "The path to prepend to all sound source urls in this config.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"\""
                        },
                        {
                            "name": "preload",
                            "description": "Option to preload all sound files in this context..",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sounds",
                            "description": "The list of sounds, either as String ids or Objects with settings.",
                            "type": "Array",
                            "props": [
                                {
                                    "name": "listItem",
                                    "description": "Not actually a property called listItem,\nbut an entry in the array. If this is a string, then it is the same as {'id':'<yourString>'}.",
                                    "type": "Object|String"
                                },
                                {
                                    "name": "listItem.id",
                                    "description": "The id to reference the sound by.",
                                    "type": "String"
                                },
                                {
                                    "name": "listItem.src",
                                    "description": "The src path to the file, without an\nextension. If omitted, defaults to id.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "listItem.volume",
                                    "description": "The default volume for the sound, from 0 to 1.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "1"
                                },
                                {
                                    "name": "listItem.loop",
                                    "description": "If the sound should loop by\ndefault whenever the loop parameter in play() is not specified.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "listItem.context",
                                    "description": "A context name to override config.context with.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "listItem.preload",
                                    "description": "If the sound should be preloaded immediately.",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "The sound object for chaining",
                "type": "Sound"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 498,
            "description": "Links one or more sound contexts to another in a parent-child relationship, so\nthat the children can be controlled separately, but still be affected by\nsetContextMute(), stopContext(), pauseContext(), etc on the parent.\nNote that sub-contexts are not currently affected by setContextVolume().",
            "itemtype": "method",
            "name": "linkContexts",
            "params": [
                {
                    "name": "parent",
                    "description": "The id of the SoundContext that should be the parent.",
                    "type": "String"
                },
                {
                    "name": "subContext",
                    "description": "The id of a SoundContext to add to parent as a\n                                 sub-context, or an array of ids.",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "true if the sound exists, false otherwise.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 530,
            "description": "If a sound exists in the list of recognized sounds.",
            "itemtype": "method",
            "name": "exists",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the sound exists, false otherwise.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 542,
            "description": "If a context exists",
            "itemtype": "method",
            "name": "contextExists",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "context",
                    "description": "The name of context to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the context exists, false otherwise.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 554,
            "description": "If a sound is unloaded.",
            "itemtype": "method",
            "name": "isUnloaded",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the sound is unloaded, false if it is loaded, loading, or does not exist.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 566,
            "description": "If a sound is loaded.",
            "itemtype": "method",
            "name": "isLoaded",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if the sound is loaded, false if it is not loaded or does not exist.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 578,
            "description": "If a sound is in the process of being loaded",
            "itemtype": "method",
            "name": "isLoading",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A value of true if the sound is currently loading, false if\nit is loaded, unloaded, or does not exist.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 591,
            "description": "If a sound is playing.",
            "itemtype": "method",
            "name": "isPlaying",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A value of true if the sound is currently playing or loading\nwith an intent to play, false if it is not playing or does not exist.",
                "type": "Boolean"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 607,
            "description": "Gets the duration of a sound in milliseconds, if it has been loaded.",
            "itemtype": "method",
            "name": "getDuration",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to look for.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The duration of the sound in milliseconds. If the sound has\nnot been loaded, 0 is returned. If no sound exists by that alias, null is returned.",
                "type": "Int|null"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 636,
            "description": "Fades a sound from 0 to a specified volume.",
            "itemtype": "method",
            "name": "fadeIn",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "aliasOrInst",
                    "description": "The alias of the sound to fade the\nlast played instance of, or an instance returned from play().",
                    "type": "String|SoundInstance"
                },
                {
                    "name": "duration",
                    "description": "The duration in milliseconds to fade for.\nThe default is 500ms.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "500"
                },
                {
                    "name": "targetVol",
                    "description": "The volume to fade to. The default is the sound's default volume.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "startVol",
                    "description": "The volume to start from. The default is 0.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 683,
            "description": "Fades a sound from the current volume to a specified volume. A sound that ends\nat 0 volume is stopped after the fade.",
            "itemtype": "method",
            "name": "fadeOut",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "aliasOrInst",
                    "description": "The alias of the sound to fade the\nlast played instance of, or an instance returned from play().",
                    "type": "String|SoundInstance"
                },
                {
                    "name": "duration",
                    "description": "The duration in milliseconds to fade for.\nThe default is 500ms.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "500"
                },
                {
                    "name": "targetVol",
                    "description": "The volume to fade to. The default is 0.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "startVol",
                    "description": "The volume to fade from. The default is the current volume.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "stopAtEnd",
                    "description": "If the sound should be stopped when the fade completes. The\n                             default is to stop it if the fade completes at a volume of 0.",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 747,
            "description": "The update call, used for fading sounds. This is bound to the instance of Sound",
            "itemtype": "method",
            "name": "_update",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame, in milliseconds.",
                    "type": "Int"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 800,
            "description": "Plays a sound.",
            "itemtype": "method",
            "name": "play",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to play.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The object of optional parameters or complete\ncallback function.",
                    "type": "Object|function",
                    "optional": true,
                    "props": [
                        {
                            "name": "complete",
                            "description": "An optional function to call when the sound is finished.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "start",
                            "description": "An optional function to call when the sound starts\nplayback. If the sound is loaded, this is called immediately, if not, it calls\nwhen the sound is finished loading.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "interrupt",
                            "description": "If the sound should interrupt previous\nsounds (SoundJS parameter). Default is false.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "delay",
                            "description": "The delay to play the sound at in milliseconds\n(SoundJS parameter). Default is 0.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "offset",
                            "description": "The offset into the sound to play in milliseconds\n(SoundJS parameter). Default is 0.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "loop",
                            "description": "How many times the sound should loop. Use -1\n(or true) for infinite loops (SoundJS parameter). Default is no looping.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "volume",
                            "description": "The volume to play the sound at (0 to 1).\nOmit to use the default for the sound.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "pan",
                            "description": "The panning to start the sound at (-1 to 1).\nDefault is centered (0).",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        }
                    ]
                }
            ],
            "return": {
                "description": "An internal SoundInstance object that can be used for\nfading in/out as well as pausing and getting the sound's current position.",
                "type": "SoundInstance"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 979,
            "description": "Gets a SoundInstance, from the pool if available or maks a new one if not.",
            "itemtype": "method",
            "name": "_getSoundInst",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "channel",
                    "description": "A createjs SoundInstance to initialize the object\n                                      with.",
                    "type": "createjs.SoundInstance"
                },
                {
                    "name": "id",
                    "description": "The alias of the sound that is going to be used.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The SoundInstance that is ready to use.",
                "type": "SoundInstance"
            },
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1005,
            "description": "Plays a sound after it finishes loading.",
            "itemtype": "method",
            "name": "_playAfterload",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "result",
                    "description": "The sound to play as an alias or load manifest.",
                    "type": "String|Object"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1092,
            "description": "The callback used for when a sound instance is complete.",
            "itemtype": "method",
            "name": "_onSoundComplete",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "inst",
                    "description": "The SoundInstance that is complete.s",
                    "type": "SoundInstance"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1120,
            "description": "Stops all playing or loading instances of a given sound.",
            "itemtype": "method",
            "name": "stop",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to stop.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1146,
            "description": "Stops all playing SoundInstances for a sound.",
            "itemtype": "method",
            "name": "_stopSound",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "s",
                    "description": "The sound (from the _sounds dictionary) to stop.",
                    "type": "Object"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1162,
            "description": "Stops and repools a specific SoundInstance.",
            "itemtype": "method",
            "name": "_stopInst",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "inst",
                    "description": "The SoundInstance to stop.",
                    "type": "SoundInstance"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1185,
            "description": "Stops all sounds in a given context.",
            "itemtype": "method",
            "name": "stopContext",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "context",
                    "description": "The name of the context to stop.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1213,
            "description": "Stop all sounds that are playing, regardless of context.",
            "itemtype": "method",
            "name": "stopAll",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1225,
            "description": "Pauses a specific sound.",
            "itemtype": "method",
            "name": "pause",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to pause.\n\tInternally, this can also be the object from the _sounds dictionary directly.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1258,
            "description": "Unpauses a specific sound.",
            "itemtype": "method",
            "name": "resume",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to pause.\n\tInternally, this can also be the object from the _sounds dictionary directly.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1284,
            "description": "Pauses all sounds in a given context. Audio paused this way will not be resumed with\nresumeAll(), but must be resumed individually or with resumeContext().",
            "itemtype": "method",
            "name": "pauseContext",
            "params": [
                {
                    "name": "context",
                    "description": "The name of the context to pause.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1313,
            "description": "Resumes all sounds in a given context.",
            "itemtype": "method",
            "name": "pauseContext",
            "params": [
                {
                    "name": "context",
                    "description": "The name of the context to pause.",
                    "type": "String"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1341,
            "description": "Pauses all sounds.",
            "itemtype": "method",
            "name": "pauseAll",
            "access": "public",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1353,
            "description": "Unpauses all sounds that were paused with pauseAll(). This does not unpause audio\nthat was paused individually or with pauseContext().",
            "itemtype": "method",
            "name": "resumeAll",
            "access": "public",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1387,
            "description": "Sets mute status of all sounds in a context",
            "itemtype": "method",
            "name": "setContextMute",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "context",
                    "description": "The name of the context to modify.",
                    "type": "String"
                },
                {
                    "name": "muted",
                    "description": "If the context should be muted.",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1423,
            "description": "Set the mute status of all sounds",
            "itemtype": "property",
            "name": "muteAll",
            "type": "Boolean",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1435,
            "description": "Sets volume of a context. Individual sound volumes are multiplied by this value.",
            "itemtype": "method",
            "name": "setContextVolume",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "context",
                    "description": "The name of the context to modify.",
                    "type": "String"
                },
                {
                    "name": "volume",
                    "description": "The volume for the context (0 to 1).",
                    "type": "Number"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1466,
            "description": "Preloads a list of sounds.",
            "itemtype": "method",
            "name": "preload",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "list",
                    "description": "An alias or list of aliases to load.",
                    "type": "Array|String"
                },
                {
                    "name": "callback",
                    "description": "The function to call when all\n     sounds have been loaded.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1533,
            "description": "Marks a sound as loaded. If it needs to play after the load, then it is played.",
            "itemtype": "method",
            "name": "_markLoaded",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "alias",
                    "description": "The alias of the sound to mark.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A function to call to show that the sound is loaded.",
                    "type": "Function"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1558,
            "description": "Unloads a list of sounds to reclaim memory if possible.\nIf the sounds are playing, they are stopped.",
            "itemtype": "method",
            "name": "unload",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "list",
                    "description": "An array of sound aliases to unload.",
                    "type": "Array"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1582,
            "description": "Unloads all sounds. If any sounds are playing, they are stopped.\nInternally this calls `unload`.",
            "itemtype": "method",
            "name": "unloadAll",
            "access": "public",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1598,
            "description": "Places a SoundInstance back in the pool for reuse.",
            "itemtype": "method",
            "name": "_poolinst",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "inst",
                    "description": "The instance to repool.",
                    "type": "SoundInstance"
                }
            ],
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/Sound.js",
            "line": 1615,
            "description": "Destroys springroll.Sound. This unloads loaded sounds in SoundJS.",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "springroll.Sound",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundContext.js",
            "line": 17,
            "description": "The name of the sound context.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundContext",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundContext.js",
            "line": 24,
            "description": "The current volume to apply to all sounds in the context (0 to 1).",
            "itemtype": "property",
            "name": "volume",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundContext",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundContext.js",
            "line": 31,
            "description": "If all sounds in the sound context are muted or not.",
            "itemtype": "property",
            "name": "muted",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundContext",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundContext.js",
            "line": 38,
            "description": "The sound objects in this context, from Sound.instance._sounds;",
            "itemtype": "property",
            "name": "sounds",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundContext",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundContext.js",
            "line": 45,
            "description": "A list of context ids of SoundContexts that belong to this one,\nfor example: \"game-sfx\" and \"ui-sfx\" being sub-contexts of \"sfx\".",
            "itemtype": "property",
            "name": "subContexts",
            "type": "Array",
            "class": "springroll.SoundContext",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 22,
            "description": "SoundJS SoundInstance, essentially a sound channel.",
            "itemtype": "property",
            "name": "_channel",
            "type": "createjs.SoundInstance",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 29,
            "description": "Internal callback function for when the sound ends.",
            "itemtype": "property",
            "name": "_endFunc",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 36,
            "description": "User's callback function for when the sound ends.",
            "itemtype": "property",
            "name": "_endCallback",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 43,
            "description": "User's callback function for when the sound starts.\nThis is only used if the sound wasn't loaded before play() was called.",
            "itemtype": "property",
            "name": "_startFunc",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 51,
            "description": "An array of relevant parameters passed to play(). This is only used if\nthe sound wasn't loaded before play() was called.",
            "itemtype": "property",
            "name": "_startParams",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 59,
            "description": "The alias for the sound that this instance was created from.",
            "itemtype": "property",
            "name": "alias",
            "type": "String",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 67,
            "description": "The current time in milliseconds for the fade that this sound instance is performing.",
            "itemtype": "property",
            "name": "_fTime",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 74,
            "description": "The duration in milliseconds for the fade that this sound instance is performing.",
            "itemtype": "property",
            "name": "_fDur",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 81,
            "description": "The starting volume for the fade that this sound instance is performing.",
            "itemtype": "property",
            "name": "_fEnd",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 88,
            "description": "The ending volume for the fade that this sound instance is performing.",
            "itemtype": "property",
            "name": "_fEnd",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 95,
            "description": "The current sound volume (0 to 1). This is multiplied by the sound context's volume.\nSetting this won't take effect until updateVolume() is called.",
            "itemtype": "property",
            "name": "curVol",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 104,
            "description": "The sound pan value, from -1 (left) to 1 (right).",
            "itemtype": "property",
            "name": "_pan",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 112,
            "description": "The length of the sound in milliseconds. This is 0 if it hasn't finished loading.",
            "itemtype": "property",
            "name": "length",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 119,
            "description": "If the sound is currently paused. Setting this has no effect - use pause()\nand resume().",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 128,
            "description": "If the sound is paused due to a global pause, probably from the Application.",
            "itemtype": "property",
            "name": "globallyPaused",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 135,
            "description": "An active SoundInstance should always be valid, but if you keep a reference after a\nsound stops it will no longer be valid (until the SoundInstance is reused for a\nnew sound).",
            "itemtype": "property",
            "name": "isValid",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 149,
            "description": "The position of the sound playhead in milliseconds, or 0 if it hasn't started playing yet.",
            "itemtype": "property",
            "name": "position",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 163,
            "description": "Stops this SoundInstance.",
            "itemtype": "method",
            "name": "stop",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 189,
            "description": "Updates the volume of this SoundInstance.",
            "itemtype": "method",
            "name": "updateVolume",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contextVol",
                    "description": "The volume of the sound context that the sound belongs to. If\n                         omitted, the volume is automatically collected.",
                    "type": "Number"
                }
            ],
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 214,
            "description": "The current sound volume (0 to 1). This is multiplied by the sound context's volume to\nget the actual sound volume.",
            "itemtype": "property",
            "name": "volume",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 233,
            "description": "The sound pan value, from -1 (left) to 1 (right).",
            "itemtype": "property",
            "name": "pan",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 252,
            "description": "Pauses this SoundInstance.",
            "itemtype": "method",
            "name": "pause",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundInstance.js",
            "line": 268,
            "description": "Unpauses this SoundInstance.",
            "itemtype": "method",
            "name": "resume",
            "access": "public",
            "tagname": "",
            "class": "springroll.SoundInstance",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 23,
            "description": "The preferred order of SoundJS audio plugins to use.",
            "itemtype": "property",
            "name": "options.audioPlugins",
            "type": "Array",
            "default": "[WebAudioPlugin,FlashAudioPlugin]",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 31,
            "description": "The relative location to the FlashPlugin swf for SoundJS",
            "itemtype": "property",
            "name": "options.swfPath",
            "type": "String",
            "default": "'assets/swfs/'",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 39,
            "description": "For the Sound class to use the Flash plugin shim",
            "itemtype": "property",
            "name": "options.forceFlashAudio",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 47,
            "description": "For the Sound class to use Native Audio Plugin if Cordova is detected. Only applicable to games that require native audio.\nIf set to true, use Native Audio in Cordova if the plugin is available.\nIf set to false, then Sound will fall back to the standard plugins as set either by plugin options or in sound class.",
            "itemtype": "property",
            "name": "options.forceNativeAudio",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 57,
            "description": "The order in which file types are\npreferred, where \"ogg\" becomes a \".ogg\"\nextension on all sound file urls.",
            "itemtype": "property",
            "name": "options.audioTypes",
            "type": "Array",
            "default": "['ogg','mp3']",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 69,
            "description": "Set the initial mute state of the all the audio\n(unminifed library version only)",
            "itemtype": "property",
            "name": "options.mute",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 79,
            "description": "The current music alias playing",
            "itemtype": "property",
            "name": "_music",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 86,
            "description": "The current music SoundInstance playing",
            "itemtype": "property",
            "name": "_musicInstance",
            "type": "SoundInstance",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 93,
            "description": "The global player for playing voice over",
            "itemtype": "property",
            "name": "voPlayer",
            "type": "springroll.VOPlayer",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 99,
            "description": "The global player for all audio, also accessible through singleton",
            "itemtype": "property",
            "name": "sound",
            "type": "springroll.Sound",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 108,
            "description": "Get or set the current music alias to play",
            "itemtype": "property",
            "name": "music",
            "type": "String",
            "default": "null",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 147,
            "description": "The SoundInstance for the current music, for adjusting volume.",
            "itemtype": "property",
            "name": "musicInstance",
            "type": "SoundInstance",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundPlugin.js",
            "line": 183,
            "description": "The sound is ready to use",
            "itemtype": "event",
            "name": "soundReady",
            "class": "springroll.Application",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundTask.js",
            "line": 28,
            "description": "The path to the list of sound aliases",
            "itemtype": "property",
            "name": "sounds",
            "type": "Array",
            "class": "springroll.SoundTask",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundTask.js",
            "line": 39,
            "description": "Test if we should run this task",
            "itemtype": "method",
            "name": "test",
            "static": 1,
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the asset is compatible with this asset",
                "type": "Boolean"
            },
            "class": "springroll.SoundTask",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundTask.js",
            "line": 51,
            "description": "Start the task",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback when finished",
                    "type": "Function"
                }
            ],
            "class": "springroll.SoundTask",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/SoundTask.js",
            "line": 74,
            "description": "Destroy and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.SoundTask",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 36,
            "description": "An Array used when play() is called to avoid creating lots of Array objects.",
            "itemtype": "property",
            "name": "_listHelper",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 43,
            "description": "If the VOPlayer should keep a list of all audio it plays for unloading\nlater. Default is false.",
            "itemtype": "property",
            "name": "trackSound",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 51,
            "description": "If the sound is currently paused. Setting this has no effect - use pause()\nand resume().",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 60,
            "description": "The current list of audio/silence times/functions.\nGenerally you will not need to modify this.",
            "itemtype": "property",
            "name": "voList",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 68,
            "description": "The current position in voList.",
            "itemtype": "property",
            "name": "_listCounter",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 75,
            "description": "The current audio alias being played.",
            "itemtype": "property",
            "name": "_currentVO",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 82,
            "description": "The current audio instance being played.",
            "itemtype": "property",
            "name": "_soundInstance",
            "type": "SoundInstance",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 89,
            "description": "The callback for when the list is finished.",
            "itemtype": "property",
            "name": "_callback",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 96,
            "description": "The callback for when the list is interrupted for any reason.",
            "itemtype": "property",
            "name": "_cancelledCallback",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 103,
            "description": "A list of audio file played by this, so that they can be unloaded later.",
            "itemtype": "property",
            "name": "_trackedSounds",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 110,
            "description": "A timer for silence entries in the list, in milliseconds.",
            "itemtype": "property",
            "name": "_timer",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 117,
            "description": "The captions object",
            "itemtype": "property",
            "name": "_captions",
            "type": "springroll.Captions",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 127,
            "description": "Fired when a new VO, caption, or silence timer begins",
            "itemtype": "event",
            "name": "start",
            "params": [
                {
                    "name": "currentVO",
                    "description": "The alias of the VO or caption that has begun, or null if it is\n                          a silence timer.",
                    "type": "String"
                }
            ],
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 134,
            "description": "Fired when a new VO, caption, or silence timer completes",
            "itemtype": "event",
            "name": "end",
            "params": [
                {
                    "name": "currentVO",
                    "description": "The alias of the VO or caption that has begun, or null if it is\n                          a silence timer.",
                    "type": "String"
                }
            ],
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 141,
            "description": "If VOPlayer is currently playing (audio or silence).",
            "itemtype": "property",
            "name": "playing",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 155,
            "description": "The current VO alias that is playing, even if it is just a caption. If a silence timer\nis running, currentVO will be null.",
            "itemtype": "property",
            "name": "currentVO",
            "type": "Boolean",
            "access": "public",
            "tagname": "",
            "readonly": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 170,
            "description": "The springroll.Captions object used for captions. The developer is responsible\nfor initializing this with a captions dictionary config file and a reference\nto a text field.",
            "itemtype": "property",
            "name": "captions",
            "type": "Captions",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 193,
            "description": "The amount of time elapsed in the currently playing item of audio/silence in milliseconds",
            "itemtype": "property",
            "name": "currentPosition",
            "type": "Int",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 214,
            "description": "The duration of the currently playing item of audio/silence in milliseconds. If this is\nwaiting on an audio file to load for the first time, it will be 0, as there is no duration\ndata to give.",
            "itemtype": "property",
            "name": "currentDuration",
            "type": "Int",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 237,
            "description": "Calculates the amount of time elapsed in the current playlist of audio/silence.",
            "itemtype": "method",
            "name": "getElapsed",
            "return": {
                "description": "The elapsed time in milliseconds.",
                "type": "Int"
            },
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 281,
            "description": "Pauses the current VO, caption, or silence timer if the VOPlayer is playing.",
            "itemtype": "method",
            "name": "pause",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 302,
            "description": "Resumes the current VO, caption, or silence timer if the VOPlayer was paused.",
            "itemtype": "method",
            "name": "resume",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 329,
            "description": "Plays a single audio alias, interrupting any current playback.\nAlternatively, plays a list of audio files, timers, and/or functions.\nAudio in the list will be preloaded to minimize pauses for loading.",
            "itemtype": "method",
            "name": "play",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "idOrList",
                    "description": "The alias of the audio file to play or the\narray of items to play/call in order.",
                    "type": "String|Array"
                },
                {
                    "name": "callback",
                    "description": "The function to call when playback is complete.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "cancelledCallback",
                    "description": "The function to call when playback\nis interrupted with a stop() or play() call. If this value is a boolean\n<code>true</code> then callback will be used instead.",
                    "type": "Function|Boolean",
                    "optional": true
                }
            ],
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 370,
            "description": "Callback for when audio/timer is finished to advance to the next item in the list.",
            "itemtype": "method",
            "name": "_onSoundFinished",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 436,
            "description": "The update callback used for silence timers.\nThis method is bound to the VOPlayer instance.",
            "itemtype": "method",
            "name": "_updateSilence",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame, in milliseconds.",
                    "type": "Int"
                }
            ],
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 453,
            "description": "The update callback used for updating captions without active audio.\nThis method is bound to the VOPlayer instance.",
            "itemtype": "method",
            "name": "_updateSoloCaption",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame, in milliseconds.",
                    "type": "Int"
                }
            ],
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 471,
            "description": "The update callback used for updating captions with active audio.\nThis method is bound to the VOPlayer instance.",
            "itemtype": "method",
            "name": "_syncCaptionToSound",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time elapsed since the previous frame, in milliseconds.",
                    "type": "Int"
                }
            ],
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 485,
            "description": "Plays the current audio item and begins preloading the next item.",
            "itemtype": "method",
            "name": "_playSound",
            "access": "private",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 531,
            "description": "Stops playback of any audio/timer.",
            "itemtype": "method",
            "name": "stop",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 566,
            "description": "Unloads all audio this VOPlayer has played. If trackSound is false, this won't do anything.",
            "itemtype": "method",
            "name": "unloadSound",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/media/VOPlayer.js",
            "line": 577,
            "description": "Cleans up this VOPlayer.",
            "itemtype": "method",
            "name": "destroy",
            "access": "public",
            "tagname": "",
            "class": "springroll.VOPlayer",
            "module": "Sound",
            "namespace": "springroll"
        },
        {
            "file": "src/mixins/Array.js",
            "line": 13,
            "description": "Shuffles the array",
            "itemtype": "method",
            "name": "shuffle",
            "class": "window.Array",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Array.js",
            "line": 33,
            "description": "Get a random item from an array",
            "itemtype": "method",
            "name": "random",
            "params": [
                {
                    "name": "array",
                    "description": "The array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The random item",
                "type": "*"
            },
            "class": "window.Array",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Array.js",
            "line": 52,
            "description": "Get the last item in the array",
            "itemtype": "method",
            "name": "last",
            "params": [
                {
                    "name": "array",
                    "description": "The array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The last item",
                "type": "*"
            },
            "class": "window.Array",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Array.js",
            "line": 71,
            "description": "Appends a list of items or list of arrays to the end of this array. This functions\nlike concat(), but works on the original array instead of making a copy.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "arguments",
                    "description": "A list of arrays or individual items.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "This array.",
                "type": "Array"
            },
            "class": "window.Array",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 12,
            "description": "Return a random int between minimum and maximum values.\nIf a single value is supplied, it will return a number between 0 and the supplied value.",
            "itemtype": "method",
            "name": "randomInt",
            "static": 1,
            "params": [
                {
                    "name": "min",
                    "description": "Lowest number. If max is omitted, then this becomes max.",
                    "type": "Int"
                },
                {
                    "name": "max",
                    "description": "Highest number.",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "The random value",
                "type": "Int"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 31,
            "description": "Return a random float between minimum and maximum values.\nIf a single value is supplied, it will return a number between 0 and the supplied value.",
            "itemtype": "method",
            "name": "randomFloat",
            "static": 1,
            "params": [
                {
                    "name": "min",
                    "description": "Lowest number. If max is omitted, then this becomes max.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "Highest number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The random value",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 50,
            "description": "Return distance between two points",
            "itemtype": "method",
            "name": "dist",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x position of the first point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position of the first point",
                    "type": "Number"
                },
                {
                    "name": "x0",
                    "description": "The x position of the second point",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The y position of the second point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The distance",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 61,
            "description": "Return distance between two points",
            "itemtype": "method",
            "name": "dist",
            "static": 1,
            "params": [
                {
                    "name": "p1",
                    "description": "The first point",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the first point",
                            "type": "Object"
                        },
                        {
                            "name": "y",
                            "description": "The y position of the first point",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "p2",
                    "description": "The second point",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the second point",
                            "type": "Object"
                        },
                        {
                            "name": "y",
                            "description": "The y position of the second point",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The distance",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 78,
            "description": "Return squared distance between two points",
            "itemtype": "method",
            "name": "distSq",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x position of the first point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y position of the first point",
                    "type": "Number"
                },
                {
                    "name": "x0",
                    "description": "The x position of the second point",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The y position of the second point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The distance",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 89,
            "description": "Return squared distance between two points",
            "itemtype": "method",
            "name": "distSq",
            "static": 1,
            "params": [
                {
                    "name": "p1",
                    "description": "The first point",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the first point",
                            "type": "Object"
                        },
                        {
                            "name": "y",
                            "description": "The y position of the first point",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "p2",
                    "description": "The second point",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x position of the second point",
                            "type": "Object"
                        },
                        {
                            "name": "y",
                            "description": "The y position of the second point",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The distance",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 122,
            "description": "Constrain a number between 0 and a max value.",
            "itemtype": "method",
            "name": "clamp",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "The number to be constrained.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "Highest number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The constrained value",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 131,
            "description": "Constrain a number between a minimum and maximum values.",
            "itemtype": "method",
            "name": "clamp",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "The number to be constrained.",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "Lowest number to constrain value to.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "Highest number.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The constrained value",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Math.js",
            "line": 154,
            "description": "Round a number to the nearest increment.\nFor example, 1.4 rounded to the nearest 0.5 is 1.5.",
            "params": [
                {
                    "name": "val",
                    "description": "Value to round",
                    "type": "Number"
                },
                {
                    "name": "increment",
                    "description": "Increment to round by",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Rounded value",
                "type": "Number"
            },
            "class": "window.Math",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Number.js",
            "line": 12,
            "description": "Returns a string of the number as an integer with leading zeros to fill the string out\nto a certain number of digits.",
            "itemtype": "method",
            "name": "toPaddedString",
            "params": [
                {
                    "name": "totalDigits",
                    "description": "The total number of digits to be displayed.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "2"
                }
            ],
            "return": {
                "description": "The number string.",
                "type": "String"
            },
            "class": "window.Number",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Object.js",
            "line": 13,
            "description": "Merges two (or more) objects, giving the last one precedence",
            "itemtype": "method",
            "name": "merge",
            "example": [
                "\n\t\tvar obj1 = { id : 'foo', name : 'Hello!', value : 100 };\n\t\tvar obj2 = { id : 'bar', value : 200 };\n\t\tObject.merge({}, obj1, obj2); // Returns: { id : 'bar', name : 'Hello!', value : 200 }"
            ],
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "Additional objects to add",
                    "type": "Object",
                    "multiple": true
                }
            ],
            "class": "window.Object",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Object.js",
            "line": 53,
            "description": "Check to see if an object is a plain object definition",
            "itemtype": "method",
            "name": "isPlain",
            "static": 1,
            "params": [
                {
                    "name": "target",
                    "description": "The target object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the object is plain",
                "type": "Boolean"
            },
            "class": "window.Object",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/Object.js",
            "line": 107,
            "description": "Creates a shallow copy of the object.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "The shallow copy.",
                "type": "Object"
            },
            "class": "window.Object",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/RequestUtils.js",
            "line": 18,
            "description": "Overrides getTypeByExtension to add additional types that we want, like .fnt as XML.",
            "static": 1,
            "itemtype": "method",
            "name": "getTypeByExtension",
            "params": [
                {
                    "name": "extension",
                    "description": "The file extension.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The load type.",
                "type": "String"
            },
            "class": "window.RequestUtils",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/String.js",
            "line": 13,
            "description": "Returns a formatted string, similar to the printf() function in many languages.\nThis simplified version substitutes \"%s\" with the arguments in order. To escape \"%s\",\nuse \"%%s\".",
            "itemtype": "method",
            "name": "format",
            "params": [
                {
                    "name": "args",
                    "description": "An array or list of arguments for formatting.",
                    "type": "Array|*"
                }
            ],
            "return": {
                "description": "The substituted string.",
                "type": "String"
            },
            "class": "window.String",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/mixins/String.js",
            "line": 46,
            "description": "Returns a reversed copy of the string.",
            "itemtype": "method",
            "name": "reverse",
            "return": {
                "description": "The reversed string.",
                "type": "String"
            },
            "class": "window.String",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/states/State.js",
            "line": 57,
            "description": "Reference to the main app",
            "itemtype": "property",
            "name": "app",
            "type": "Application",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 64,
            "description": "The instance of the VOPlayer, Sound module required",
            "itemtype": "property",
            "name": "voPlayer",
            "type": "springroll.VOPlayer",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 71,
            "description": "The instance of the Sound, Sound module required",
            "itemtype": "property",
            "name": "sound",
            "type": "springroll.Sound",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 78,
            "description": "Reference to the main config object",
            "itemtype": "property",
            "name": "config",
            "type": "Object",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 85,
            "description": "Reference to the scaling object, UI module required",
            "itemtype": "property",
            "name": "scaling",
            "type": "springroll.ScaleManager",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 92,
            "description": "The items to scale on the panel, see `ScaleManager.addItems` for\nmore information. If no options are set in the State's constructor\nthen it will try to find an object on the app config on `scaling` property\nmatching the same state alias. For instance `config.scaling.title` if\n`title` is the state alias. If no scalingItems are set, will scale\nand position the panal itself.",
            "itemtype": "property",
            "name": "scalingItems",
            "type": "Object",
            "readonly": "",
            "default": "null",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 105,
            "description": "The id reference",
            "itemtype": "property",
            "name": "stateId",
            "type": "String",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 111,
            "description": "A reference to the state manager",
            "itemtype": "property",
            "name": "manager",
            "type": "springroll.StateManager",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 117,
            "description": "The panel for the state.",
            "itemtype": "property",
            "name": "panel",
            "type": "createjs.Container|PIXI.DisplayObjectContainer",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 123,
            "description": "The assets to load each time",
            "itemtype": "property",
            "name": "preload",
            "type": "Array",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 129,
            "description": "Check to see if the assets have finished loading",
            "itemtype": "property",
            "name": "preloaded",
            "type": "Boolean",
            "access": "protected",
            "tagname": "",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 137,
            "description": "The collection of assets loaded",
            "itemtype": "property",
            "name": "assets",
            "type": "Array|Object",
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 144,
            "description": "If the state has been destroyed.",
            "itemtype": "property",
            "name": "_destroyed",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 151,
            "description": "If the manager considers this the active panel",
            "itemtype": "property",
            "name": "_active",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 158,
            "description": "If we are pre-loading the state",
            "itemtype": "property",
            "name": "_isLoading",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 165,
            "description": "If we canceled entering the state",
            "itemtype": "property",
            "name": "_canceled",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 172,
            "description": "When we're finishing loading",
            "itemtype": "property",
            "name": "_onEnterProceed",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 179,
            "description": "If we start doing a load in enter, assign the onEnterComplete here",
            "itemtype": "property",
            "name": "_onLoadingComplete",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 186,
            "description": "If the state is enabled, meaning that it is click ready",
            "itemtype": "property",
            "name": "_enabled",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 193,
            "description": "Either the alias of the next state or a function\nto call when going to the next state.",
            "itemtype": "property",
            "name": "_nextState",
            "type": "String|Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 201,
            "description": "Either the alias of the previous state or a function\nto call when going to the previous state.",
            "itemtype": "property",
            "name": "_prevState",
            "type": "String|Function",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 209,
            "description": "The number of frames to delay the transition in after loading, to allow the framerate\nto stablize after heavy art instantiation.",
            "itemtype": "property",
            "name": "delayLoad",
            "type": "Int",
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 225,
            "description": "Event when the state finishes exiting. Nothing is showing at this point.",
            "itemtype": "event",
            "name": "exit",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 230,
            "description": "Event when the state is being destroyed.",
            "itemtype": "event",
            "name": "destroy",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 235,
            "description": "Event when the transition is finished the state is fully entered.",
            "itemtype": "event",
            "name": "enterDone",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 240,
            "description": "Event when the loading of a state was canceled.",
            "itemtype": "event",
            "name": "cancel",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 245,
            "description": "Event when the state starts exiting, everything is showing at this point.",
            "itemtype": "event",
            "name": "exitStart",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 250,
            "description": "Event when the preload of assets is finished. If no assets are loaded, the `assets` parameter is null.",
            "itemtype": "event",
            "name": "loaded",
            "params": [
                {
                    "name": "asset",
                    "description": "The collection of assets loaded",
                    "type": "Object|Array|null"
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 256,
            "description": "When there has been a change in how much has been preloaded",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "percentage",
                    "description": "The amount preloaded from zero to 1",
                    "type": "Number"
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 262,
            "description": "Event when the assets are starting to load.",
            "itemtype": "event",
            "name": "loading",
            "params": [
                {
                    "name": "asset",
                    "description": "An empty array that additional assets can be added to, if needed. Any dynamic\n                     assets that are added need to be manually unloaded when the state exits.",
                    "type": "Array"
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 269,
            "description": "Event when the state is enabled status changes. Enable is when the state is mouse enabled or not.",
            "itemtype": "event",
            "name": "enabled",
            "params": [
                {
                    "name": "enable",
                    "description": "The enabled status of the state",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 278,
            "description": "When the state is exited. Override this to provide state cleanup.",
            "itemtype": "property",
            "name": "exit",
            "type": "Function",
            "default": "null",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 285,
            "description": "When the state has requested to be exit, pre-transition. Override this to ensure\nthat animation/audio is stopped when leaving the state.",
            "itemtype": "property",
            "name": "exitStart",
            "type": "Function",
            "default": "null",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 293,
            "description": "Cancel the load, implementation-specific.\nThis is where any async actions should be removed.",
            "itemtype": "property",
            "name": "cancel",
            "type": "Function",
            "default": "null",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 301,
            "description": "When the state is entered. Override this to start loading assets - call loadingStart()\nto tell the StateManager that that is going on.",
            "itemtype": "property",
            "name": "enter",
            "type": "Function",
            "default": "null",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 309,
            "description": "When the state is visually entered fully - after the transition is done.\nOverride this to begin your state's activities.",
            "itemtype": "property",
            "name": "enterDone",
            "type": "Function",
            "default": "null",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 317,
            "description": "Goto the next state",
            "itemtype": "method",
            "name": "nextState",
            "final": 1,
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 344,
            "description": "Goto the previous state",
            "itemtype": "method",
            "name": "previousState",
            "final": 1,
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 371,
            "description": "Manual call to signal the start of preloading",
            "itemtype": "method",
            "name": "loadingStart",
            "final": 1,
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 396,
            "description": "Manual call to signal the end of preloading",
            "itemtype": "method",
            "name": "loadingDone",
            "final": 1,
            "params": [
                {
                    "name": "delay",
                    "description": "Frames to delay the load completion to allow the framerate to\n  stabilize. If not delay is set, defaults to the `delayLoad` property.",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 435,
            "description": "Status of whether the panel load was canceled",
            "itemtype": "property",
            "name": "canceled",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 448,
            "description": "Get if this is the active state",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 461,
            "description": "If the state is enabled, meaning that it is click ready",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 482,
            "description": "If the state has been destroyed.",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "readonly": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 495,
            "description": "This is called by the State Manager to exit the state",
            "itemtype": "method",
            "name": "_internalExit",
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 544,
            "description": "When the state is entering",
            "itemtype": "method",
            "name": "_internalEntering",
            "params": [
                {
                    "name": "proceed",
                    "description": "The function to call after enter has been called",
                    "type": "Function"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 588,
            "description": "Handle the load progress and pass to the manager",
            "itemtype": "method",
            "name": "onProgress",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "progress",
                    "description": "The amount preloaded from zero to 1",
                    "type": "Number"
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 600,
            "description": "The internal call for on assets loaded",
            "itemtype": "method",
            "name": "_onLoaded",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "assets",
                    "description": "The assets result of the load",
                    "type": "Object|null"
                }
            ],
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 642,
            "description": "Exit the state start, called by the State Manager",
            "itemtype": "method",
            "name": "_internalExitStart",
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 653,
            "description": "Exit the state start, called by the State Manager",
            "itemtype": "method",
            "name": "_internalEnter",
            "params": [
                {
                    "name": "proceed",
                    "description": "The function to call after enter has been called",
                    "type": "Function"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 683,
            "description": "Cancel the loading of this state",
            "itemtype": "method",
            "name": "_internalCancel",
            "access": "protected",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 699,
            "description": "Exit the state start, called by the State Manager",
            "itemtype": "method",
            "name": "_internalEnterDone",
            "access": "private",
            "tagname": "",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/State.js",
            "line": 713,
            "description": "Don't use the state object after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.State",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateEvent.js",
            "line": 21,
            "description": "A reference to the current state of the state manager",
            "itemtype": "property",
            "name": "currentState",
            "type": "BaseState",
            "class": "springroll.StateEvent",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateEvent.js",
            "line": 28,
            "description": "A reference to the state who's actually being transitioned or being changed",
            "itemtype": "property",
            "name": "visibleState",
            "type": "BaseState",
            "class": "springroll.StateEvent",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateEvent.js",
            "line": 35,
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "springroll.StateEvent",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateEvent.js",
            "line": 44,
            "description": "When the state besome visible",
            "itemtype": "event",
            "name": "onVisible",
            "type": "String",
            "class": "springroll.StateEvent",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateEvent.js",
            "line": 51,
            "description": "When the state becomes hidden",
            "itemtype": "event",
            "name": "onHidden",
            "type": "String",
            "class": "springroll.StateEvent",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 33,
            "description": "The animator playback.",
            "itemtype": "property",
            "name": "animator",
            "type": "springroll.Animator",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 41,
            "description": "The click to play in between transitioning states",
            "itemtype": "property",
            "name": "transition",
            "type": "createjs.MovieClip|springroll.easeljs.BitmapMovieClip|PIXI.Spine",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 48,
            "description": "Wait to fire the onTransitionIn event until the onTransitionLoading\nloop reaches it’s final frame.",
            "itemtype": "property",
            "name": "waitForLoadingComplete",
            "type": "Boolean",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 55,
            "description": "The sounds for the transition",
            "itemtype": "property",
            "name": "_transitionSounds",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 63,
            "description": "The collection of states map",
            "itemtype": "property",
            "name": "_states",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 71,
            "description": "The currently selected state",
            "itemtype": "property",
            "name": "_state",
            "type": "springroll.State",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 79,
            "description": "The currently selected state id",
            "itemtype": "property",
            "name": "_stateID",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 87,
            "description": "The old state",
            "itemtype": "property",
            "name": "_oldState",
            "type": "springroll.State",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 95,
            "description": "If the manager is loading a state",
            "itemtype": "property",
            "name": "name description",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 103,
            "description": "If the state or manager is current transitioning",
            "itemtype": "property",
            "name": "_isTransitioning",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 111,
            "description": "If the current object is destroyed",
            "itemtype": "property",
            "name": "_destroyed",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 131,
            "description": "The amount of progress while state is being preloaded from zero to 1",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "percentage",
                    "description": "The amount loaded",
                    "type": "Number"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 137,
            "description": "The name of the Animator label and event for transitioning into a state.",
            "itemtype": "event",
            "name": "onTransitionIn",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 144,
            "description": "The name of the Animator label and event for loading between state change.\nthis event is only dispatched if there is a loading sequence to show in the\ntransition. Recommended to use 'loadingStart' instead for checking.",
            "itemtype": "event",
            "name": "onTransitionLoading",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 153,
            "description": "The name of the event for completing transitioning into a state.",
            "itemtype": "event",
            "name": "onTransitionInDone",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 160,
            "description": "The name of the Animator label and event for transitioning out of a state.",
            "itemtype": "event",
            "name": "onTransitionOut",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 167,
            "description": "The name of the event for completing transitioning out of a state.",
            "itemtype": "event",
            "name": "onTransitionOutDone",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 174,
            "description": "The name of the event for initialization complete - the first state is then being entered.",
            "itemtype": "event",
            "name": "onInitDone",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 181,
            "description": "Event when the state begins loading assets when it is entered.",
            "itemtype": "event",
            "name": "onLoadingStart",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 188,
            "description": "Event when the state finishes loading assets when it is entered.",
            "itemtype": "event",
            "name": "onLoadingDone",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 195,
            "description": "Register a state with the state manager, done initially",
            "itemtype": "method",
            "name": "addState",
            "params": [
                {
                    "name": "id",
                    "description": "The string alias for a state",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "State object reference",
                    "type": "springroll.State"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 219,
            "description": "Get the current selected state (state object)",
            "itemtype": "property",
            "name": "currentState",
            "type": "springroll.State",
            "readonly": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 232,
            "description": "Access a certain state by the ID",
            "itemtype": "method",
            "name": "getStateById",
            "params": [
                {
                    "name": "id",
                    "description": "State alias",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The base State object",
                "type": "springroll.State"
            },
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 245,
            "description": "If the StateManager is busy because it is currently loading or transitioning.",
            "itemtype": "method",
            "name": "isBusy",
            "return": {
                "description": "If StateManager is busy",
                "type": "Boolean"
            },
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 256,
            "description": "If the state needs to do some asyncronous tasks,\nThe state can tell the manager to stop the animation",
            "itemtype": "method",
            "name": "loadingStart",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 271,
            "description": "If the state has finished it's asyncronous task loading\nLets enter the state",
            "itemtype": "method",
            "name": "loadingDone",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 284,
            "description": "Internal setter for the enabled status",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 293,
            "description": "If the state manager is enabled, used internally",
            "itemtype": "event",
            "name": "enabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 302,
            "description": "This transitions out of the current state and\nenters it again. Can be useful for clearing a state",
            "itemtype": "method",
            "name": "refresh",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 314,
            "description": "Get or change the current state, using the state id.",
            "itemtype": "property",
            "name": "state",
            "type": "String",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 378,
            "description": "When the transition out of a state has finished playing during a state change.",
            "itemtype": "method",
            "name": "_onTransitionOut",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 405,
            "description": "When the state has completed its loading sequence.\nThis should be treated as an asynchronous process.",
            "itemtype": "method",
            "name": "_onStateLoaded",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 438,
            "description": "When the transition into a state has finished playing during a state change.",
            "itemtype": "method",
            "name": "_onTransitionIn",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 456,
            "description": "Plays the animation \"onTransitionLoading\" on the transition. Also serves as the animation callback.\nManually looping the animation allows the animation to be synced to the audio while looping.",
            "itemtype": "method",
            "name": "_onTransitionLoading",
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 501,
            "description": "Displays the transition out animation, without changing states. Upon completion, the\ntransition looping animation automatically starts playing.",
            "itemtype": "method",
            "name": "showTransitionOut",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call when the animation is complete.",
                    "type": "Function"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 519,
            "description": "Displays the transition in animation, without changing states.",
            "itemtype": "method",
            "name": "showTransitionIn",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to call when the animation is complete.",
                    "type": "Function"
                }
            ],
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 536,
            "description": "Generalized function for transitioning with the manager",
            "itemtype": "method",
            "name": "_transitioning",
            "params": [
                {
                    "name": "The",
                    "description": "animator event to play",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "callback function after transition is done",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StateManager.js",
            "line": 572,
            "description": "Remove the state manager",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.StateManager",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 20,
            "description": "Fired when an event has been added",
            "itemtype": "event",
            "name": "stateAdded",
            "params": [
                {
                    "name": "alias",
                    "description": "The state alias",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "The State object",
                    "type": "springroll.State"
                }
            ],
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 27,
            "description": "The collection of states",
            "itemtype": "property",
            "name": "_states",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 34,
            "description": "The state manager",
            "itemtype": "property",
            "name": "manager",
            "type": "springroll.StateManager",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 40,
            "description": "The transition animation to use between the StateManager state changes",
            "itemtype": "property",
            "name": "_transition",
            "type": "createjs.MovieClip|springroll.easeljs.BitmapMovieClip|PIXI.Spine",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 47,
            "description": "The transition animation to use between the StateManager state changes",
            "itemtype": "property",
            "name": "transition",
            "type": "createjs.MovieClip|springroll.easeljs.BitmapMovieClip|PIXI.Spine",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 112,
            "description": "The initial state to go to when everything is finished",
            "itemtype": "property",
            "name": "options.state",
            "type": "Boolean",
            "default": "null",
            "readonly": "",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 120,
            "description": "The animation to use for the StateManager",
            "itemtype": "property",
            "name": "options.transition",
            "type": "createjs.MovieClip|PIXI.Spine",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 126,
            "description": "The transition sounds to use for the state transition",
            "itemtype": "property",
            "name": "options.transitionSounds",
            "type": "Object",
            "readonly": "",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 131,
            "description": "The transition in sound alias or sound object",
            "itemtype": "property",
            "name": "options.transitionSounds.in",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 137,
            "description": "The transition out sound alias or sound object",
            "itemtype": "property",
            "name": "options.transitionSounds.out",
            "type": "Object",
            "default": "null",
            "readonly": "",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/states/StatesPlugin.js",
            "line": 149,
            "description": "The collection of states where the key is the state alias and value is the state display object",
            "itemtype": "property",
            "name": "states",
            "type": "Object",
            "default": "null",
            "class": "springroll.Application",
            "module": "States",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/Positioner.js",
            "line": 19,
            "description": "Initial position a single display object",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "params": [
                {
                    "name": "display",
                    "description": "The display object to scale",
                    "type": "createjs.DisplayObject|PIXI.DisplayObject"
                },
                {
                    "name": "settings",
                    "description": "The values for setting",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The initial X position of the item",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The initial Y position of the item",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "scale",
                            "description": "The initial scale",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "x",
                                    "description": "The initial scale X value",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "y",
                                    "description": "The initial scale Y value",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "pivot",
                            "description": "The pivot or registration point.",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "x",
                                    "description": "The pivot point X location",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "y",
                                    "description": "The pivot point Y location",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "rotation",
                            "description": "The initial rotation in degrees",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "hitArea",
                            "description": "An object which describes the hit area\n                                       of the item or an array of points. See\n                                       generateHitArea().",
                            "type": "Object|Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "type",
                                    "description": "If the hitArea is an object, the type\n                                      of hit area, \"rect\", \"ellipse\", \"circle\", etc",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "adapter",
                    "description": "The adapter for the display being positioned\n                                in. If omitted, uses the Application's default display.",
                    "type": "DisplayAdapter",
                    "optional": true
                }
            ],
            "class": "springroll.Positioner",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/Positioner.js",
            "line": 93,
            "description": "Create the polygon hit area for interface elements",
            "static": 1,
            "itemtype": "method",
            "name": "generateHitArea",
            "params": [
                {
                    "name": "hitArea",
                    "description": "One of the following:\n\n  // An array of points for a polygon.\n  [{x:0, y:0}, {x:0, y:20}, {x:20, y:0}]\n\n  // An object describing a rectangle.\n  {type:\"rect\", x:0, y:0, w:10, h:30}\n\n  // An object describing an ellipse, where x and y are the center.\n  {type:\"ellipse\", x:0, y:0, w:10, h:30}\n\n  // An object describing a circle, where x and y are the center.\n  {type:\"circle\", x:0, y:0, r:20}\n\n  // An object describing a sector, where x and y are the center of a circle\n  // and start/end are the start and end angles of the sector in degrees.\n  {type:\"sector\", x:0, y:0, r:20, start:0, end:90}",
                    "type": "Object|Array"
                },
                {
                    "name": "scale",
                    "description": "The size to scale hitArea by",
                    "type": "Number"
                },
                {
                    "name": "adapter",
                    "description": "The adapter for the display being positioned\n                                in. If omitted, uses the Application's default display.",
                    "type": "DisplayAdapter",
                    "optional": true
                }
            ],
            "return": {
                "description": "A geometric shape object for hit testing, either a Polygon,\n               Rectangle, Ellipse, Circle, or Sector, depending on the hitArea object.\n               The shape will have a contains() function for hit testing.",
                "type": "Object"
            },
            "class": "springroll.Positioner",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleImage.js",
            "line": 49,
            "description": "The image to resize",
            "itemtype": "property",
            "name": "image",
            "type": "PIXI.Sprite|createjs.Bitmap",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleImage",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleImage.js",
            "line": 56,
            "description": "The original screen the item was designed for",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_size",
            "type": "Object",
            "class": "springroll.ScaleImage",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleImage.js",
            "line": 63,
            "description": "The adapter for universal scale, rotation size access",
            "itemtype": "property",
            "name": "_adapter",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleImage",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleImage.js",
            "line": 73,
            "description": "Resize the current image",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "w",
                    "description": "The stage height",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The stage width",
                    "type": "Number"
                }
            ],
            "class": "springroll.ScaleImage",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleImage.js",
            "line": 116,
            "description": "Get the current display item",
            "itemtype": "property",
            "name": "display",
            "type": "PIXI.Sprite|createjs.Bitmap",
            "readonly": "",
            "class": "springroll.ScaleImage",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleImage.js",
            "line": 129,
            "description": "Destroy and don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.ScaleImage",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 32,
            "description": "What vertical screen location the item should be aligned to: \"top\", \"center\", \"bottom\"",
            "itemtype": "property",
            "name": "vertAlign",
            "type": "String",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 38,
            "description": "What horizontal screen location the item should be aligned to: \"left\", \"center\", \"right\"",
            "itemtype": "property",
            "name": "horiAlign",
            "type": "String",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 44,
            "description": "If this element should be aligned to the title safe area, not the actual screen.\nValues of \"horizontal\" and \"vertical\" make the title safe calculations take place only\nfor one direction.",
            "itemtype": "property",
            "name": "titleSafe",
            "type": "Boolean|String",
            "default": "false",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 53,
            "description": "Maximum scale allowed in physical size",
            "itemtype": "property",
            "name": "maxScale",
            "type": "Number",
            "default": "1",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 60,
            "description": "Minimum scale allowed in physical size",
            "itemtype": "property",
            "name": "minScale",
            "type": "Number",
            "default": "1",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 67,
            "description": "If the UI element is centered horizontally",
            "itemtype": "property",
            "name": "centeredHorizontally",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 74,
            "description": "The reference to the interface item we're scaling",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_display",
            "type": "PIXI.DisplayObject|createjs.DisplayObject",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 81,
            "description": "The original screen the item was designed for",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_size",
            "type": "Object",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 88,
            "description": "The adapter for universal scale, rotation size access",
            "itemtype": "property",
            "name": "_adapter",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 98,
            "description": "Original X scale of the item",
            "itemtype": "property",
            "name": "origScaleX",
            "type": "Number",
            "default": "0",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 105,
            "description": "The original Y scale of the item",
            "itemtype": "property",
            "name": "origScaleY",
            "type": "Number",
            "default": "0",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 112,
            "description": "The original bounds of the item with x, y, right, bottom, width,\nheight properties. This is converted from local bounds to scaled bounds.",
            "itemtype": "property",
            "name": "origBounds",
            "type": "Object",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 147,
            "description": "Original horizontal margin in pixels",
            "itemtype": "property",
            "name": "origMarginHori",
            "type": "Number",
            "default": "0",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 154,
            "description": "Original vertical margin in pixels",
            "itemtype": "property",
            "name": "origMarginVert",
            "type": "Number",
            "default": "0",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 211,
            "description": "Get the current display item",
            "itemtype": "property",
            "name": "display",
            "type": "PIXI.DisplayObject|createjs.DisplayObject",
            "readonly": "",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 224,
            "description": "Adjust the item scale and position, to reflect new screen",
            "itemtype": "method",
            "name": "resize",
            "params": [
                {
                    "name": "displayWidth",
                    "description": "The current screen width",
                    "type": "Number"
                },
                {
                    "name": "displayHeight",
                    "description": "The current screen height",
                    "type": "Number"
                }
            ],
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleItem.js",
            "line": 373,
            "description": "Destroy this item, don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.ScaleItem",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 47,
            "description": "The configuration for each items",
            "itemtype": "property",
            "name": "_items",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 54,
            "description": "The screen settings object, contains information about designed size",
            "itemtype": "property",
            "name": "_size",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 61,
            "description": "The current overall scale of the game",
            "itemtype": "property",
            "name": "_scale",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "default": "1",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 69,
            "description": "The adapter for universal scale, rotation size access",
            "itemtype": "property",
            "name": "_adapter",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 76,
            "description": "The internal enabled",
            "itemtype": "property",
            "name": "_enabled",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 85,
            "description": "If we should log verbose messages (unminified module only!)",
            "itemtype": "property",
            "name": "verbose",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 118,
            "description": "Vertically align to the top",
            "itemtype": "property",
            "name": "ALIGN_TOP",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "default": "\"top\"",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 128,
            "description": "Vertically align to the bottom",
            "itemtype": "property",
            "name": "ALIGN_BOTTOM",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "default": "\"bottom\"",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 138,
            "description": "Horizontally align to the left",
            "itemtype": "property",
            "name": "ALIGN_LEFT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "default": "\"left\"",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 148,
            "description": "Horizontally align to the right",
            "itemtype": "property",
            "name": "ALIGN_RIGHT",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "default": "\"right\"",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 158,
            "description": "Vertically or horizontally align to the center",
            "itemtype": "property",
            "name": "ALIGN_CENTER",
            "type": "String",
            "static": 1,
            "final": 1,
            "readonly": "",
            "default": "\"center\"",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 168,
            "description": "Get the adapter by display",
            "itemtype": "method",
            "name": "_getAdapter",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "display",
                    "description": "The canvas renderer display",
                    "type": "Object"
                }
            ],
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 198,
            "description": "Set the display",
            "itemtype": "property",
            "name": "display",
            "type": "springroll.AbstractDisplay",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 210,
            "description": "The design sized of the application",
            "itemtype": "property",
            "name": "size",
            "type": "Object",
            "default": "null",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 215,
            "description": "The designed width of the application",
            "itemtype": "property",
            "name": "size.width",
            "type": "Number",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 219,
            "description": "The designed width of the application",
            "itemtype": "property",
            "name": "size.height",
            "type": "Number",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 223,
            "description": "The designed max width of the application",
            "itemtype": "property",
            "name": "size.maxWidth",
            "type": "Number",
            "default": "size.width",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 228,
            "description": "The designed maxHeight of the application",
            "itemtype": "property",
            "name": "size.maxHeight",
            "type": "Number",
            "default": "size.height",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 273,
            "description": "Get the current scale of the screen relative to the designed screen size",
            "itemtype": "property",
            "name": "scale",
            "type": "Number",
            "readonly": "",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 286,
            "description": "The total number of items",
            "itemtype": "property",
            "name": "numItems",
            "type": "Number",
            "readonly": "",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 299,
            "description": "Whether the ScaleManager should listen to the stage resize. Setting to true\ninitialized a resize.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 327,
            "description": "Remove all items where the item display is a the container or it contains items",
            "itemtype": "method",
            "name": "removeItems",
            "params": [
                {
                    "name": "parent",
                    "description": "The object which contains the items as live variables.",
                    "type": "*"
                },
                {
                    "name": "items",
                    "description": "The items that was passed to `addItems`",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The ScaleManager for chaining",
                "type": "springroll.ScaleManager"
            },
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 374,
            "description": "Remove all items where the item display is a child of the container display",
            "itemtype": "method",
            "name": "removeItemsByParent",
            "params": [
                {
                    "name": "container",
                    "description": "The container to remove items from",
                    "type": "createjs.Container|PIXI.DisplayObjectContainer"
                }
            ],
            "return": {
                "description": "The ScaleManager for chaining",
                "type": "springroll.ScaleManager"
            },
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 393,
            "description": "Remove a single item from the scaler",
            "itemtype": "method",
            "name": "removeItem",
            "params": [
                {
                    "name": "display",
                    "description": "The object to remove",
                    "type": "createjs.Bitmap|PIXI.Sprite|createjs.Container|PIXI.DisplayObjectContainer"
                }
            ],
            "return": {
                "description": "The ScaleManager for chaining",
                "type": "springroll.ScaleManager"
            },
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 413,
            "description": "Register a dictionary of items to the ScaleManager to control.",
            "itemtype": "method",
            "name": "addItems",
            "params": [
                {
                    "name": "parent",
                    "description": "The parent object that contains the items as variables.",
                    "type": "*"
                },
                {
                    "name": "items",
                    "description": "The items object where the keys are the name of the property on the\n                    parent and the value is an object with keys of \"titleSafe\", \"minScale\",\n                    \"maxScale\", \"centerHorizontally\", \"align\", see ScaleManager.addItem for a\n                    description of the different keys.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The instance of this ScaleManager for chaining",
                "type": "springroll.ScaleManager"
            },
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 449,
            "description": "Manually add an item",
            "itemtype": "method",
            "name": "addItem",
            "params": [
                {
                    "name": "displayObject",
                    "description": "The display object item",
                    "type": "createjs.DisplayObject|PIXI.DisplayObject"
                },
                {
                    "name": "settings",
                    "description": "The collection of settings or the align property",
                    "type": "Object|String",
                    "optional": true,
                    "optdefault": "\"center\"",
                    "props": [
                        {
                            "name": "align",
                            "description": "The vertical alignment (\"top\", \"bottom\", \"center\")\n     then horizontal alignment (\"left\", \"right\" and \"center\"). Or you can use the short-\n     handed versions: \"center\" = \"center-center\", \"top\" = \"top-center\", \n     \"bottom\" = \"bottom-center\", \"left\" = \"center-left\", \"right\" = \"center-right\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"center\""
                        },
                        {
                            "name": "titleSafe",
                            "description": "If the item needs to be in the title safe\n     area. Acceptable values are false, \"horizontal\", \"vertical\", \"all\", and true.\n     The default is false, and true is the same as \"all\".",
                            "type": "Boolean|String",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "minScale",
                            "description": "The minimum scale amount (default, scales the same\n     size as the stage)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "NaN"
                        },
                        {
                            "name": "maxScale",
                            "description": "The maximum scale amount (default, scales the same\n     size as the stage)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "NaN"
                        },
                        {
                            "name": "centeredHorizontally",
                            "description": "Makes sure that the center of the\n     object is directly in the center of the stage assuming origin point is in\n     the upper-left corner.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "x",
                            "description": "The initial X position of the item",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "The initial Y position of the item",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "scale",
                            "description": "The initial scale",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "x",
                                    "description": "The initial scale X value",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "y",
                                    "description": "The initial scale Y value",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "pivot",
                            "description": "The pivot point",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "x",
                                    "description": "The pivot point X location",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "y",
                                    "description": "The pivot point Y location",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "rotation",
                            "description": "The initial rotation in degrees",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "hitArea",
                            "description": "An object which describes the hit area of the item\n     or an array of points.",
                            "type": "Object|Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "type",
                                    "description": "If the hitArea is an object, the type of hit area,\n     \"rect\", \"ellipse\", \"circle\", etc",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "The instance of this ScaleManager for chaining",
                "type": "springroll.ScaleManager"
            },
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 483,
            "description": "Add a bitmap to make be fullscreen",
            "itemtype": "method",
            "name": "addItem",
            "params": [
                {
                    "name": "bitmap",
                    "description": "The bitmap to scale",
                    "type": "PIXI.Sprite|createjs.Bitmap"
                },
                {
                    "name": "settings",
                    "description": "Must be 'cover-image'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The instance of this ScaleManager for chaining",
                "type": "springroll.ScaleManager"
            },
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 565,
            "description": "Scale the UI items that have been registered to the current screen",
            "itemtype": "method",
            "name": "_resize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "w",
                    "description": "The current width of the application",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "The current height of the application",
                    "type": "Number"
                }
            ],
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScaleManager.js",
            "line": 599,
            "description": "Destroy the scaler object",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.ScaleManager",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/ScalingPlugin.js",
            "line": 25,
            "description": "The main ScaleManager for any display object references\nin the main game.",
            "itemtype": "property",
            "name": "scaling",
            "type": "springroll.ScaleManager",
            "class": "springroll.Application",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/TouchPlugin.js",
            "line": 20,
            "description": "If the current brower is iOS",
            "itemtype": "property",
            "name": "isIOS",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/TouchPlugin.js",
            "line": 26,
            "description": "If the current brower is Android",
            "itemtype": "property",
            "name": "isAndroid",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/TouchPlugin.js",
            "line": 32,
            "description": "If the current brower has touch input available",
            "itemtype": "property",
            "name": "hasTouch",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/ui/TouchPlugin.js",
            "line": 42,
            "description": "Manually override the check for hasTouch (unminifed library version only)",
            "itemtype": "property",
            "name": "options.forceTouch",
            "type": "Boolean",
            "default": "false",
            "class": "springroll.Application",
            "module": "UI",
            "namespace": "springroll"
        },
        {
            "file": "src/utils/extend.js",
            "line": 16,
            "description": "Extend prototype",
            "example": [
                "\n\t\tvar p = extend(MyClass, ParentClass);"
            ],
            "is_constructor": 1,
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "child",
                    "description": "The reference to the child class",
                    "type": "Function"
                },
                {
                    "name": "parent",
                    "description": "The parent class reference or full classname",
                    "type": "Function|String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Reference to the child class's prototype",
                "type": "Object"
            },
            "class": "window.extend",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/utils/include.js",
            "line": 16,
            "description": "Import a class",
            "example": [
                "\n\t\tvar Application = include('springroll.Application');"
            ],
            "is_constructor": 1,
            "itemtype": "method",
            "name": "include",
            "params": [
                {
                    "name": "namespaceString",
                    "description": "Name space, for instance 'springroll.Application'",
                    "type": "String"
                },
                {
                    "name": "required",
                    "description": "If the class we're trying to include is required.\n\t\tFor classes that aren't found and are required, an error is thrown.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "The object attached at the given namespace",
                "type": "Object|function"
            },
            "class": "window.include",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/utils/mixin.js",
            "line": 15,
            "description": "Mixin functionality to an object",
            "example": [
                "\n\t\tmixin(instance, MyClass);"
            ],
            "is_constructor": 1,
            "itemtype": "method",
            "name": "mixin",
            "params": [
                {
                    "name": "target",
                    "description": "The instance object to add functionality to",
                    "type": "*"
                },
                {
                    "name": "superClass",
                    "description": "The parent reference or full classname",
                    "type": "Function|String"
                },
                {
                    "name": "args",
                    "description": "Any additional arguments to pass to the constructor of the superClass",
                    "type": "*",
                    "optional": true
                }
            ],
            "return": {
                "description": "Return reference to target",
                "type": "*"
            },
            "class": "window.mixin",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/utils/namespace.js",
            "line": 17,
            "description": "Create the namespace and assing to the window",
            "example": [
                "\n\t\tvar SpriteUtils = function(){};\n\t\tnamespace('springroll').SpriteUtils = SpriteUtils;"
            ],
            "is_constructor": 1,
            "itemtype": "method",
            "name": "namespace",
            "params": [
                {
                    "name": "namespaceString",
                    "description": "Name space, for instance 'springroll.utils'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The namespace object attached to the current window",
                "type": "Object"
            },
            "class": "window.namespace",
            "module": "Core",
            "namespace": "window"
        },
        {
            "file": "src/Application.js",
            "line": 41,
            "description": "Initialization options/query string parameters, these properties are read-only\nApplication properties like raf, fps, don't have any affect on the options object.",
            "itemtype": "property",
            "name": "options",
            "type": "springroll.ApplicationOptions",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 49,
            "description": "Primary renderer for the application, for simply accessing\nApplication.instance.display.stage;\nThe first display added becomes the primary display automatically.",
            "itemtype": "property",
            "name": "display",
            "type": "Display",
            "access": "public",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 58,
            "description": "Override this to do post constructor initialization",
            "itemtype": "property",
            "name": "init",
            "type": "Function",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 64,
            "description": "The preload progress",
            "itemtype": "property",
            "name": "pluginLoad",
            "type": "springroll.AssetLoad",
            "access": "protected",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 88,
            "description": "The name of the game, useful for debugging purposes",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "\"\"",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 102,
            "description": "The current version of the library",
            "itemtype": "property",
            "name": "version",
            "type": "String",
            "static": 1,
            "readonly": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 114,
            "description": "The collection of function references to call when initializing the application\nthese are registered by external modules.",
            "itemtype": "property",
            "name": "_plugins",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 123,
            "description": "The number of ms since the last frame update",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_lastFrameTime",
            "type": "Int",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 130,
            "description": "The bound callback for listening to tick events",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_tickCallback",
            "type": "Function",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 137,
            "description": "If the current application is paused",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_paused",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 144,
            "description": "If the current application is enabled",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_enabled",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 151,
            "description": "The id of the active requestAnimationFrame or setTimeout call.",
            "itemtype": "property",
            "name": "_tickId",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 158,
            "description": "If requestionAnimationFrame should be used",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_useRAF",
            "type": "Bool",
            "default": "false",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 166,
            "description": "The number of milliseconds per frame",
            "itemtype": "property",
            "name": "_msPerFrame",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 173,
            "description": "The collection of displays",
            "itemtype": "property",
            "name": "_displays",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 180,
            "description": "The displays by canvas id",
            "itemtype": "property",
            "name": "_displaysMap",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 188,
            "description": "Fired when initialization of the application is ready",
            "itemtype": "event",
            "name": "init",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 193,
            "description": "The handler for the plugin progress",
            "itemtype": "event",
            "name": "pluginProgress",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 198,
            "description": "Fired when initialization of the application is done",
            "itemtype": "event",
            "name": "afterInit",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 203,
            "description": "Fired when before initialization of the application",
            "itemtype": "event",
            "name": "beforeInit",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 208,
            "description": "Fired when an update is called, every frame update",
            "itemtype": "event",
            "name": "update",
            "params": [
                {
                    "name": "elasped",
                    "description": "The number of milliseconds since the last frame update",
                    "type": "Int"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 214,
            "description": "Fired when the pause state is toggled",
            "itemtype": "event",
            "name": "pause",
            "params": [
                {
                    "name": "paused",
                    "description": "If the application is now paused",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 220,
            "description": "When a display is added.",
            "itemtype": "event",
            "name": "displayAdded",
            "params": [
                {
                    "name": "display",
                    "description": "The current display being added",
                    "type": "springroll.AbstractDisplay",
                    "optional": true
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 226,
            "description": "When a display is removed.",
            "itemtype": "event",
            "name": "displayRemoved",
            "params": [
                {
                    "name": "displayId",
                    "description": "The display alias",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 232,
            "description": "Fired when the application becomes paused",
            "itemtype": "event",
            "name": "paused",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 237,
            "description": "Fired when the application resumes from a paused state",
            "itemtype": "event",
            "name": "resumed",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 242,
            "description": "Fired when the application is destroyed",
            "itemtype": "event",
            "name": "destroy",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 247,
            "description": "Get the singleton instance of the application",
            "itemtype": "property",
            "name": "instance",
            "type": "Application",
            "static": 1,
            "access": "public",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 262,
            "description": "The internal initialization",
            "itemtype": "method",
            "name": "_preInit",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 320,
            "description": "Progress handler for the plugin load",
            "itemtype": "method",
            "name": "onPluginProgress",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "progress",
                    "description": "Plugins preloaded amount from 0 - 1",
                    "type": "Number"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 331,
            "description": "Initialize the application",
            "itemtype": "method",
            "name": "_doInit",
            "access": "protected",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 356,
            "description": "Enables at the application level which enables\nand disables all the displays.",
            "itemtype": "property",
            "name": "enabled",
            "type": "Boolean",
            "default": "true",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 378,
            "description": "Manual pause for the entire application, this suspends\nanything driving the the application update events. Include\nAnimator, Captions, Sound and other media playback.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 397,
            "description": "Handle the internal pause of the application",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "internalPaused",
            "params": [
                {
                    "name": "paused",
                    "description": "If the application should be paused or not",
                    "type": "Boolean"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 433,
            "description": "Makes a setTimeout with a time based on _msPerFrame and the amount of time spent in the\ncurrent tick.",
            "itemtype": "method",
            "name": "setTargetedTimeout",
            "params": [
                {
                    "name": "callback",
                    "description": "The tick function to call.",
                    "type": "Function"
                },
                {
                    "name": "timeInFrame=0",
                    "description": "The amount of time spent in the current tick in milliseconds.",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 450,
            "description": "Add a display. If this is the first display added, then it will be stored as this.display.",
            "itemtype": "method",
            "name": "addDisplay",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the canvas element, this will be used to grab the Display later\n                  also the Display should be the one to called document.getElementById(id)\n                  and not the application sinc we don't care about the DOMElement as this\n                  point",
                    "type": "String"
                },
                {
                    "name": "displayConstructor",
                    "description": "The function to call to create the display instance",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional Display specific options",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The created display.",
                "type": "Display"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 485,
            "description": "Get all the displays",
            "itemtype": "property",
            "name": "displays",
            "type": "Array",
            "readonly": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 498,
            "description": "Gets a specific renderer by the canvas id.",
            "itemtype": "method",
            "name": "getDisplay",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the canvas",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The requested display.",
                "type": "Display"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 509,
            "description": "Removes and destroys a display",
            "itemtype": "method",
            "name": "removeDisplay",
            "params": [
                {
                    "name": "id",
                    "description": "The Display's id (also the canvas ID)",
                    "type": "String"
                }
            ],
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 526,
            "description": "_tick would be bound in _tickCallback",
            "itemtype": "method",
            "name": "_tick",
            "access": "private",
            "tagname": "",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 566,
            "description": "Works just like `window.setTimeout` but respects the pause\nstate of the Application.",
            "itemtype": "method",
            "name": "setTimeout",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback function, passes one argument which is the DelayedCall instance",
                    "type": "Function"
                },
                {
                    "name": "delay",
                    "description": "The time in milliseconds or the number of frames (useFrames must be true)",
                    "type": "Int"
                },
                {
                    "name": "useFrames",
                    "description": "If the delay is frames (true) or millseconds (false)",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "autoDestroy",
                    "description": "If the DelayedCall object should be destroyed after completing",
                    "type": "[type]",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "The object for pausing, restarting, destroying etc.",
                "type": "springroll.DelayedCall"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 581,
            "description": "Works just like `window.setInterval` but respects the pause\nstate of the Application.",
            "itemtype": "method",
            "name": "setInterval",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback function, passes one argument which is the DelayedCall instance",
                    "type": "Function"
                },
                {
                    "name": "delay",
                    "description": "The time in milliseconds or the number of frames (useFrames must be true)",
                    "type": "Int"
                },
                {
                    "name": "useFrames",
                    "description": "If the delay is frames (true) or millseconds (false)",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The object for pausing, restarting, destroying etc.",
                "type": "springroll.DelayedCall"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 595,
            "description": "Destroys the application and all active displays and plugins",
            "itemtype": "method",
            "name": "destroy",
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        },
        {
            "file": "src/Application.js",
            "line": 632,
            "description": "The toString debugging method",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "The reprsentation of this class",
                "type": "String"
            },
            "class": "springroll.Application",
            "module": "Core",
            "namespace": "springroll"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nRound a number to the nearest increment.\nFor example, 1.4 rounded to the nearest 0.5 is 1.5.",
            "line": " src/mixins/Math.js:154"
        }
    ]
}